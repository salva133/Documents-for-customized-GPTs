﻿# Entries used in the Power Bloc CoA customization preview.
# The order defines the order in which they are listed.
#
# Format:
# filename = {
#     # How many colors options to show for this piece. Optional, will assume 0 if missing, where 0 means
#     # this is a textured asset that doesn't require custom colors.
#     colors = 3
#
#     # Which piece is this? Available: shield_pattern, shield_frame, center, top, side.
#     piece = center
# }

pb_center_00.dds = {
    colors = 1
    piece = center
}

pb_center_01.dds = {
    colors = 1
    piece = center
}

pb_center_02.dds = {
    colors = 1
    piece = center
}

pb_center_03.dds = {
    colors = 1
    piece = center
}

pb_center_04.dds = {
    colors = 1
    piece = center
}

pb_center_05.dds = {
    colors = 1
    piece = center
}

pb_center_06.dds = {
    colors = 1
    piece = center
}

pb_center_07.dds = {
    colors = 1
    piece = center
}

pb_center_08.dds = {
    colors = 1
    piece = center
}

pb_center_09.dds = {
    colors = 1
    piece = center
}

pb_center_10.dds = {
    colors = 1
    piece = center
}

pb_crescent_star_turkey.dds = {
    colors = 1
    piece = center
}

pb_eagle_doubleheaded.dds = {
    colors = 1
    piece = center
}

pb_bear.dds = {
    colors = 1
    piece = center
}

pb_iron_cross.dds = {
    colors = 1
    piece = center
}

pb_lion_passant_guardant.dds = {
    colors = 1
    piece = center
}

pb_center_11.dds = {
    colors = 1
    piece = center
}

pb_shield_pattern_00.dds = {
    colors = 2
    piece = shield_pattern
}

pb_shield_pattern_01.dds = {
    colors = 1
    piece = shield_pattern
}

pb_shield_pattern_02.dds = {
    colors = 2
    piece = shield_pattern
}

pb_shield_pattern_03.dds = {
    colors = 2
    piece = shield_pattern
}

pb_frame_00.dds = {
    piece = shield_frame
}

pb_frame_01.dds = {
    piece = shield_frame
}

pb_frame_02.dds = {
    piece = shield_frame
}

pb_frame_03.dds = {
    piece = shield_frame
}

pb_frame_04.dds = {
    piece = shield_frame
}

pb_side_00.dds = {
    piece = side
}

pb_side_01.dds = {
    piece = side
}

pb_side_02.dds = {
    piece = side
}

pb_side_03.dds = {
    piece = side
}

pb_side_04.dds = {
    piece = side
}

pb_side_05.dds = {
    piece = side
}

pb_side_06.dds = {
    piece = side
}

pb_top_00.dds = {
    piece = top
}

pb_top_01.dds = {
    piece = top
}

pb_top_02.dds = {
    piece = top
}

pb_top_03.dds = {
    piece = top
}

pb_top_04.dds = {
    piece = top
}

pb_top_05.dds = {
    piece = top
}

pb_top_06.dds = {
    piece = top
}

﻿identity_trade_league = {
	power_bloc_modifier = {
		power_bloc_customs_union_bool = yes
		power_bloc_mandate_progress_per_great_power_member_add = 10
		power_bloc_mandate_progress_per_major_power_member_add = 5
		power_bloc_mandate_progress_per_minor_power_member_add = 2
		power_bloc_mandate_progress_per_unrecognized_major_power_member_add = 2
		power_bloc_mandate_progress_per_unrecognized_regional_power_member_add = 1
		power_bloc_cohesion_per_member_add = -1
		power_bloc_invite_acceptance_great_power_add = -15
	}

	leader_modifier = {
		country_trade_route_quantity_mult = 0.1
	}
	
	non_leader_modifier = {
		country_convoy_contribution_to_market_owner_add = 0.2
	}

	can_leave = {
		OR = {
			is_power_bloc_leader = yes
			power_bloc = {
				leverage_advantage = {
					target = root
					value <= 30
				}
			}
		}
	}
	
	possible = {
		# NOT = { has_law = law_type:law_isolationism } # No longer needed since Isolationism is a blocker for forming any Power Bloc, but in case that changes, uncomment this
	}

	icon = "gfx/interface/icons/central_identity_pillars_icons/trade_league.dds"
	background = "gfx/interface/power_blocs/backgrounds/pb_background_generic.dds"

	mandate_progress = power_bloc_mandate_progress_by_rank
	
	on_created = { relations_hit_with_power_bloc_leaders = yes }
	
	cohesion = {
		add = {
			add = 0.15
			multiply = define:NPowerBlocs|COHESION_TARGET_MAX
			desc = POWER_BLOC_COHESION_BASE
		}

		add = {
			if = {
				limit = { exists = scope:with_country }
				add = "scope:power_bloc.power_bloc_leader.market.market_number_goods_shortages_with(scope:with_country)"
			}
			else_if = {
				limit = { exists = scope:without_country }
				add = "scope:power_bloc.power_bloc_leader.market.market_number_goods_shortages_without(scope:without_country)"
			}
			else = {
				add = scope:power_bloc.power_bloc_leader.market.market_number_goods_shortages
			}
			multiply = -5
			desc = POWER_BLOC_COHESION_GOODS_SHORTAGES
		}

		add = {
			if = {
				limit = { exists = scope:with_country }
				add = "scope:power_bloc.power_bloc_total_leading_goods_producers_with(scope:with_country)"
			}
			else_if = {
				limit = { exists = scope:without_country }
				add = "scope:power_bloc.power_bloc_total_leading_goods_producers_without(scope:without_country)"
			}
			else = {
				add = scope:power_bloc.power_bloc_total_leading_goods_producers
			}
			multiply = 3
			desc = POWER_BLOC_COHESION_LEADING_GOODS_PRODUCER
		}

		add = {
			if = {
				limit = { exists = scope:with_country }
				add = "power_bloc_share_gdp_with(scope:with_country)"
			}
			else_if = {
				limit = { exists = scope:without_country }
				add = "power_bloc_share_gdp_without(scope:without_country)"
			}
			else = {
				add = power_bloc_share_gdp
			}
			multiply = define:NPowerBlocs|COHESION_TARGET_MAX
			multiply = 0.5
			desc = POWER_BLOC_COHESION_SHARE_GDP
		}
		
		add = {
			if = {
				limit = { exists = scope:with_country }
				add = "scope:power_bloc.power_bloc_worst_leader_relations_with(scope:with_country)"
			}
			else_if = {
				limit = { exists = scope:without_country }
				add = "scope:power_bloc.power_bloc_worst_leader_relations_without(scope:without_country)"
			}
			else = {
				add = scope:power_bloc.power_bloc_worst_leader_relations
			}
			divide = define:NDiplomacy|MIN_RELATIONS
			multiply = define:NPowerBlocs|COHESION_TARGET_MAX
			multiply = -1
			max = 0
			desc = POWER_BLOC_COHESION_WORST_LEADER_RELATIONS
		}
		
		add = {
			if = {
				limit = { exists = scope:with_country }
				add = "scope:power_bloc.power_bloc_worst_economic_dependence_with(scope:with_country)"
			}
			else_if = {
				limit = { exists = scope:without_country }
				add = "scope:power_bloc.power_bloc_worst_economic_dependence_without(scope:without_country)"
			}
			else = {
				add = scope:power_bloc.power_bloc_worst_economic_dependence
			}
			add = -3.5
			divide = define:NDiplomacy|ECONOMIC_DEPENDENCE_MAX
			multiply = define:NPowerBlocs|COHESION_TARGET_MAX
			multiply = 0.5
			desc = POWER_BLOC_COHESION_WORST_ECONOMIC_DEPENDENCE
		}
	}
	
	ai_weight = {
		value = 100
		
		if = {
			limit = {
				ig:ig_industrialists ?= { is_in_government = yes }
			}
			add = 100
		}		
		
		if = {
			limit = { has_law = law_type:law_free_trade }
			add = 100
		}
		
		if = {
			limit = {
				has_strategy = ai_strategy_economic_imperialism
			}
			multiply = 2.0
		}			
	}
}

identity_sovereign_empire = {
	power_bloc_modifier = {
		power_bloc_leader_can_make_subjects_bool = yes
		power_bloc_mandate_progress_per_great_power_member_add = 10
		power_bloc_mandate_progress_per_major_power_member_add = 5
		power_bloc_mandate_progress_per_minor_power_member_add = 2
		power_bloc_mandate_progress_per_unrecognized_major_power_member_add = 2
		power_bloc_mandate_progress_per_unrecognized_regional_power_member_add = 1
		power_bloc_invite_acceptance_great_power_add = -20
		power_bloc_invite_acceptance_major_power_add = -10
		power_bloc_invite_acceptance_unrecognized_major_power_add = -10
		power_bloc_invite_acceptance_add = -30
		power_bloc_cohesion_per_member_add = -3
	}

	leader_modifier = {
		country_liberty_desire_of_subjects_add = -0.05
	}

	non_leader_modifier = {
	}

	member_modifier = {	
	}
	
	possible = {
		has_law = law_type:law_monarchy
	}

	can_leave = {
		OR = {
			is_power_bloc_leader = yes
			power_bloc = {
				leverage_advantage = {
					target = root
					value <= 30
				}
			}
		}
	}

	icon = "gfx/interface/icons/central_identity_pillars_icons/sovereign_empire.dds"
	background = "gfx/interface/power_blocs/backgrounds/pb_background_generic.dds"

	visible = {
		has_dlc_feature = power_bloc_features
	}

	mandate_progress = power_bloc_mandate_progress_by_rank
	
	on_created = { relations_hit_with_power_bloc_leaders = yes }
	
	cohesion = {
		add = {
			add = 0.3
			multiply = define:NPowerBlocs|COHESION_TARGET_MAX
			desc = POWER_BLOC_COHESION_BASE
		}
	
		add = {
			if = {
				limit = { exists = scope:with_country }
				add = "power_bloc_share_prestige_with(scope:with_country)"
			}
			else_if = {
				limit = { exists = scope:without_country }
				add = "power_bloc_share_prestige_without(scope:without_country)"
			}
			else = {
				add = power_bloc_share_prestige
			}
			multiply = define:NPowerBlocs|COHESION_TARGET_MAX
			desc = POWER_BLOC_COHESION_SHARE_PRESTIGE
		}
		
		add = {
			if = {
				limit = { exists = scope:with_country }
				add = "scope:power_bloc.power_bloc_worst_leader_relations_with(scope:with_country)"
			}
			else_if = {
				limit = { exists = scope:without_country }
				add = "scope:power_bloc.power_bloc_worst_leader_relations_without(scope:without_country)"
			}
			else = {
				add = scope:power_bloc.power_bloc_worst_leader_relations
			}
			divide = define:NDiplomacy|MIN_RELATIONS
			multiply = define:NPowerBlocs|COHESION_TARGET_MAX
			multiply = -1
			max = 0
			desc = POWER_BLOC_COHESION_WORST_LEADER_RELATIONS
		}
		
		add = {
			if = {
				limit = { exists = scope:with_country }
				add = "scope:power_bloc.power_bloc_worst_liberty_desire_with(scope:with_country)"
			}
			else_if = {
				limit = { exists = scope:without_country }
				add = "scope:power_bloc.power_bloc_worst_liberty_desire_without(scope:without_country)"
			}
			else = {
				add = scope:power_bloc.power_bloc_worst_liberty_desire
			}
			divide = 200 # liberty desire max value * 2
			multiply = -1
			multiply = define:NPowerBlocs|COHESION_TARGET_MAX
			desc = POWER_BLOC_COHESION_WORST_LIBERTY_DESIRE
		}
	}
	
	ai_weight = {
		value = 100
		
		if = {
			limit = {
				ig:ig_landowners ?= { is_in_government = yes }
			}
			add = 100
		}		
		
		add = {
			value = num_subjects
			multiply = 25
			max = 250
		}
		
		if = {
			limit = {
				has_strategy = ai_strategy_colonial_expansion
			}
			
			multiply = 2.0
		}		
	}
}

identity_ideological_union = {
	power_bloc_modifier = {
		power_bloc_leader_can_regime_change_bool = yes
		power_bloc_mandate_progress_per_great_power_member_add = 10
		power_bloc_mandate_progress_per_major_power_member_add = 5
		power_bloc_mandate_progress_per_minor_power_member_add = 2
		power_bloc_mandate_progress_per_unrecognized_major_power_member_add = 2
		power_bloc_mandate_progress_per_unrecognized_regional_power_member_add = 1
		power_bloc_cohesion_per_member_add = -2
	}

	leader_modifier = {
		country_law_enactment_time_mult = -0.1
		country_can_impose_same_lawgroup_governance_principles_in_power_bloc_bool = yes
		country_can_impose_same_lawgroup_distribution_of_power_in_power_bloc_bool = yes
	}

	non_leader_modifier = {
		country_leader_has_law_enactment_success_mult = 0.3
	}

	member_modifier = {
		
	}

	can_leave = {
		OR = {
			is_power_bloc_leader = yes
			power_bloc = {
				leverage_advantage = {
					target = root
					value <= 30
				}
			}
		}
	}

	icon = "gfx/interface/icons/central_identity_pillars_icons/ideological_union.dds"
	background = "gfx/interface/power_blocs/backgrounds/pb_background_generic.dds"

	visible = {
		has_dlc_feature = power_bloc_features
	}

	mandate_progress = power_bloc_mandate_progress_by_rank
	
	on_created = { relations_hit_with_power_bloc_leaders = yes }

	cohesion = {
		add = {
			add = 0.3
			multiply = define:NPowerBlocs|COHESION_TARGET_MAX
			desc = POWER_BLOC_COHESION_BASE
		}
	
		add = {
			add = legitimacy
			divide = 100 # legitimacy max value
			multiply = define:NPowerBlocs|COHESION_TARGET_MAX
			multiply = 0.7
			desc = POWER_BLOC_COHESION_LEGITIMACY
		}
		
		add = {
			if = {
				limit = { exists = scope:with_country }
				add = "scope:power_bloc.power_bloc_worst_leader_relations_with(scope:with_country)"
			}
			else_if = {
				limit = { exists = scope:without_country }
				add = "scope:power_bloc.power_bloc_worst_leader_relations_without(scope:without_country)"
			}
			else = {
				add = scope:power_bloc.power_bloc_worst_leader_relations
			}
			divide = define:NDiplomacy|MIN_RELATIONS
			multiply = define:NPowerBlocs|COHESION_TARGET_MAX
			multiply = -1
			max = 0
			desc = POWER_BLOC_COHESION_WORST_LEADER_RELATIONS
		}
		
		if = {
		 	limit = { 
		 		exists = scope:with_country
		 		"scope:power_bloc.power_bloc_worst_progressiveness_difference_government_type_with(scope:with_country)" != 0
		 	}
		 	add = {
		 		add = "scope:power_bloc.power_bloc_worst_progressiveness_difference_government_type_with(scope:with_country)"
		 		divide = 200 # bad progressiveness difference is usually around 100
		 		multiply = -1
		 		multiply = define:NPowerBlocs|COHESION_TARGET_MAX
		 		desc = POWER_BLOC_COHESION_WORST_PROGRESSIVENESS_DIFFERENCE
		 	}	
		}
		else_if = {
		 	limit = {
		 		exists = scope:without_country
		 		"scope:power_bloc.power_bloc_worst_progressiveness_difference_government_type_without(scope:without_country)" != 0
		 	}
		 	add = {
		 		add = "scope:power_bloc.power_bloc_worst_progressiveness_difference_government_type_without(scope:without_country)"
		 		divide = 200 # bad progressiveness difference is usually around 100
		 		multiply = -1
		 		multiply = define:NPowerBlocs|COHESION_TARGET_MAX
		 		desc = POWER_BLOC_COHESION_WORST_PROGRESSIVENESS_DIFFERENCE
		 	}
		}
		else_if = {
		 	limit = { "scope:power_bloc.power_bloc_worst_progressiveness_difference_government_type" != 0 }
		 	add = {
				add = scope:power_bloc.power_bloc_worst_progressiveness_difference_government_type
				divide = 200 # bad progressiveness difference is usually around 100
				multiply = -1
				multiply = define:NPowerBlocs|COHESION_TARGET_MAX
				desc = POWER_BLOC_COHESION_WORST_PROGRESSIVENESS_DIFFERENCE
			}
		}
	}
	
	ai_weight = {
		value = 100
		
		if = {
			limit = {
				ig:ig_intelligentsia ?= { is_in_government = yes }
			}
			add = 100
		}		

		if = { # The forces of reaction
			limit = { 
				has_law = law_type:law_monarchy 
				OR = {
					has_law = law_type:law_autocracy
					has_law = law_type:law_oligarchy
				}
			}
			add = 100
		}		
		
		if = { # The forces of revolution
			limit = { 
				has_radical_leftist_government = yes
			}
			add = 200
		}

		if = {
			limit = {
				OR = {
					has_strategy = ai_strategy_maintain_power_balance
					has_strategy = ai_strategy_world_revolution
					has_strategy = ai_strategy_anti_imperialism
				}			
			}	
			multiply = 2.0
		}		
	}
}

identity_military_treaty_organization = {
	power_bloc_modifier = {
		power_bloc_leader_can_add_wargoal_bool = yes
		power_bloc_mandate_progress_per_great_power_member_add = 10
		power_bloc_mandate_progress_per_major_power_member_add = 5
		power_bloc_mandate_progress_per_minor_power_member_add = 2
		power_bloc_mandate_progress_per_unrecognized_major_power_member_add = 2
		power_bloc_mandate_progress_per_unrecognized_regional_power_member_add = 1
		power_bloc_invite_acceptance_great_power_add = -15
		power_bloc_cohesion_per_member_add = -2
	}

	leader_modifier = {
		country_prestige_from_army_power_projection_mult = 0.1
		country_prestige_from_navy_power_projection_mult = 0.1
	}

	non_leader_modifier = {
	}

	member_modifier = {
		building_training_rate_mult = 0.2
	}
	
	possible = {
		NOT = { has_law = law_type:law_national_militia }
	}	

	can_leave = {
		OR = {
			is_power_bloc_leader = yes
			power_bloc = {
				leverage_advantage = {
					target = root
					value <= 30
				}
			}
		}
	}

	icon = "gfx/interface/icons/central_identity_pillars_icons/military_treaty_organization.dds"
	background = "gfx/interface/power_blocs/backgrounds/pb_background_generic.dds"

	visible = {
		has_dlc_feature = power_bloc_features
	}

	mandate_progress = power_bloc_mandate_progress_by_rank
	
	on_created = { relations_hit_with_power_bloc_leaders = yes }
	
	cohesion = {
		add = {
			add = 0.3
			multiply = define:NPowerBlocs|COHESION_TARGET_MAX
			desc = POWER_BLOC_COHESION_BASE
		}
	
		add = {
			if = {
				limit = { exists = scope:with_country }
				add = "power_bloc_share_power_projection_with(scope:with_country)"
			}
			else_if = {
				limit = { exists = scope:without_country }
				add = "power_bloc_share_power_projection_without(scope:without_country)"
			}
			else = {
				add = power_bloc_share_power_projection
			}
			multiply = define:NPowerBlocs|COHESION_TARGET_MAX
			desc = POWER_BLOC_COHESION_SHARE_POWER_PROJECTION
		}
		
		add = {
			if = {
				limit = { exists = scope:with_country }
				add = "scope:power_bloc.power_bloc_worst_infamy_with(scope:with_country)"
			}
			else_if = {
				limit = { exists = scope:without_country }
				add = "scope:power_bloc.power_bloc_worst_infamy_without(scope:without_country)"
			}
			else = {
				add = scope:power_bloc.power_bloc_worst_infamy
			}
			divide = define:NDiplomacy|INFAMY_THRESHOLD_PARIAH
			multiply = -1
			multiply = define:NPowerBlocs|COHESION_TARGET_MAX
			desc = POWER_BLOC_COHESION_WORST_INFAMY
		}
		
		add = {
			if = {
				limit = { exists = scope:with_country }
				add = "scope:power_bloc.power_bloc_worst_leader_relations_with(scope:with_country)"
			}
			else_if = {
				limit = { exists = scope:without_country }
				add = "scope:power_bloc.power_bloc_worst_leader_relations_without(scope:without_country)"
			}
			else = {
				add = scope:power_bloc.power_bloc_worst_leader_relations
			}
			divide = define:NDiplomacy|MIN_RELATIONS
			multiply = define:NPowerBlocs|COHESION_TARGET_MAX
			multiply = -1
			max = 0
			desc = POWER_BLOC_COHESION_WORST_LEADER_RELATIONS
		}
		
		add = {
			scope:power_bloc = {
				every_power_bloc_member = {
					if = {
						limit = { has_law = law_type:law_national_militia }
						add = -0.05
					}
				}
			}
			if = {
				limit = { 
					exists = scope:with_country 
					scope:with_country ?= { has_law = law_type:law_national_militia }
				}
				add = -0.05
			}
			else_if = {
				limit = { 
					exists = scope:without_country 
					scope:without_country ?= { has_law = law_type:law_national_militia }
				}
				add = 0.05
			}
			multiply = define:NPowerBlocs|COHESION_TARGET_MAX
			desc = POWER_BLOC_COHESION_ARMY_MODEL_INCOMPATIBILITY
		}
	}
	
	ai_weight = {
		value = 100
		
		if = {
			limit = {
				has_law = law_type:law_professional_army
			}
			add = 100
		}

		if = {
			limit = {
				ig:ig_armed_forces ?= { is_in_government = yes }
			}
			add = 100
		}		
		
		if = {
			limit = {
				OR = {
					has_strategy = ai_strategy_territorial_expansion
					has_strategy = ai_strategy_armed_isolationism
				}			
			}	
			multiply = 2.0
		}			
	}
}

identity_religious = {
	power_bloc_modifier = {
		power_bloc_leader_can_force_state_religion_bool = yes
		power_bloc_mandate_progress_per_great_power_member_add = 10
		power_bloc_mandate_progress_per_major_power_member_add = 5
		power_bloc_mandate_progress_per_minor_power_member_add = 2
		power_bloc_mandate_progress_per_unrecognized_major_power_member_add = 2
		power_bloc_mandate_progress_per_unrecognized_regional_power_member_add = 1
		power_bloc_cohesion_per_member_add = -2
	}

	leader_modifier = {
		state_clergymen_investment_pool_efficiency_mult = 0.25
	}

	non_leader_modifier = {
	}
	
	possible = {
		OR = {
			has_law = law_type:law_state_religion
			has_law = law_type:law_freedom_of_conscience
		}
	}

	member_modifier = {
		state_conversion_mult = 0.33
		interest_group_ig_devout_pol_str_mult = 0.25
	}

	can_leave = {
		OR = {
			is_power_bloc_leader = yes
			power_bloc = {
				leverage_advantage = {
					target = root
					value <= 30
				}
			}
		}
	}

	icon = "gfx/interface/icons/central_identity_pillars_icons/religious.dds"
	background = "gfx/interface/power_blocs/backgrounds/pb_background_generic.dds"

	visible = {
		has_dlc_feature = power_bloc_features
	}

	mandate_progress = power_bloc_mandate_progress_by_rank
	
	on_created = { relations_hit_with_power_bloc_leaders = yes }
	
	cohesion = {
		add = {
			add = 0.3
			multiply = define:NPowerBlocs|COHESION_TARGET_MAX
			desc = POWER_BLOC_COHESION_BASE
		}
	
		add = {
			value = define:NPowerBlocs|COHESION_TARGET_MAX
			multiply = ig:ig_devout.ig_clout
			add = -10
			multiply = 4
			desc = POWER_BLOC_COHESION_DEVOUT_IG_CLOUT
		}

		if = {
			limit = {
				ig:ig_devout = {
					is_in_government = no
				}
			}
			add = {
				add = -15
				desc = POWER_BLOC_COHESION_DEVOUT_IG_NOT_IN_GOVERNMENT
			}	
		}
		
		add = {
			if = {
				limit = { exists = scope:with_country }
				add = "scope:power_bloc.power_bloc_worst_leader_relations_with(scope:with_country)"
			}
			else_if = {
				limit = { exists = scope:without_country }
				add = "scope:power_bloc.power_bloc_worst_leader_relations_without(scope:without_country)"
			}
			else = {
				add = scope:power_bloc.power_bloc_worst_leader_relations
			}
			divide = define:NDiplomacy|MIN_RELATIONS
			multiply = define:NPowerBlocs|COHESION_TARGET_MAX
			multiply = -1
			max = 0
			desc = POWER_BLOC_COHESION_WORST_LEADER_RELATIONS
		}
		
		add = {
			if = {
				limit = { exists = scope:with_country }
				add = "scope:power_bloc.power_bloc_worst_leader_religion_population_fraction_with(scope:with_country)"
			}
			else_if = {
				limit = { exists = scope:without_country }
				add = "scope:power_bloc.power_bloc_worst_leader_religion_population_fraction_without(scope:without_country)"
			}
			else = {
				add = scope:power_bloc.power_bloc_worst_leader_religion_population_fraction
			}
			add = -0.5
			multiply = 0.5
			multiply = define:NPowerBlocs|COHESION_TARGET_MAX
			desc = POWER_BLOC_COHESION_LEADER_RELIGION_WORST_POPULATION_SHARE
		}
		
		add = {
			scope:power_bloc = {
				every_power_bloc_member = {
					if = {
						limit = { 
							OR = {
								has_law = law_type:law_total_separation
								has_law = law_type:law_state_atheism
							}
						}
						add = -0.1
					}
				}
			}
			if = {
				limit = { 
					exists = scope:with_country 
					scope:with_country ?= {
						OR = {
							has_law = law_type:law_total_separation
							has_law = law_type:law_state_atheism
						}
					}
				}
				add = -0.1
			}
			else_if = {
				limit = { 
					exists = scope:without_country 
					scope:without_country ?= {
						OR = {
							has_law = law_type:law_total_separation
							has_law = law_type:law_state_atheism
						}
					}
				}
				add = 0.1
			}
			multiply = define:NPowerBlocs|COHESION_TARGET_MAX
			desc = POWER_BLOC_COHESION_CHURCH_AND_STATE_INCOMPATIBILITY
		}
	}
	
	ai_weight = {
		value = 100

		if = {
			limit = {
				ig:ig_devout ?= { is_in_government = yes }
			}
			add = 100
		}			
		
		if = {
			limit = {
				has_law = law_type:law_state_religion
			}
			multiply = 1.5
		}
		
		if = {
			limit = {
				religion = {
					NOR = { # Non-abrahamic religions probably wouldn't go for this type of bloc
						has_discrimination_trait = christian
						has_discrimination_trait = muslim
						has_discrimination_trait = jewish
					}					
				}			
			}
			multiply = 0.1		
		}		
	}
}

﻿pb_pattern_01 = {
    texture = "gfx/map/map_painting/powerblocs_map_patterns/pb_pattern_01.dds"
}

pb_pattern_02 = {
    texture = "gfx/map/map_painting/powerblocs_map_patterns/pb_pattern_02.dds"
}

pb_pattern_03 = {
    texture = "gfx/map/map_painting/powerblocs_map_patterns/pb_pattern_03.dds"
}

pb_pattern_04 = {
    texture = "gfx/map/map_painting/powerblocs_map_patterns/pb_pattern_04.dds"
}

pb_pattern_05 = {
    texture = "gfx/map/map_painting/powerblocs_map_patterns/pb_pattern_05.dds"
}

pb_pattern_06 = {
    texture = "gfx/map/map_painting/powerblocs_map_patterns/pb_pattern_06.dds"
}

pb_pattern_07 = {
    texture = "gfx/map/map_painting/powerblocs_map_patterns/pb_pattern_07.dds"
}

pb_pattern_08 = {
    texture = "gfx/map/map_painting/powerblocs_map_patterns/pb_pattern_08.dds"
}

pb_pattern_09 = {
    texture = "gfx/map/map_painting/powerblocs_map_patterns/pb_pattern_09.dds"
}

pb_pattern_10 = {
    texture = "gfx/map/map_painting/powerblocs_map_patterns/pb_pattern_10.dds"
}

pb_pattern_11 = {
    texture = "gfx/map/map_painting/powerblocs_map_patterns/pb_pattern_11.dds"
}

pb_pattern_12 = {
    texture = "gfx/map/map_painting/powerblocs_map_patterns/pb_pattern_12.dds"
}

pb_pattern_13 = {
    texture = "gfx/map/map_painting/powerblocs_map_patterns/pb_pattern_13.dds"
}

pb_pattern_14 = {
    texture = "gfx/map/map_painting/powerblocs_map_patterns/pb_pattern_14.dds"
}

pb_pattern_15 = {
    texture = "gfx/map/map_painting/powerblocs_map_patterns/pb_pattern_15.dds"
}

pb_pattern_16 = {
    texture = "gfx/map/map_painting/powerblocs_map_patterns/pb_pattern_16.dds"
}

pb_pattern_17 = {
    texture = "gfx/map/map_painting/powerblocs_map_patterns/pb_pattern_17.dds"
}

pb_pattern_18 = {
    texture = "gfx/map/map_painting/powerblocs_map_patterns/pb_pattern_18.dds"
}

﻿##### generic and near-generic power bloc names ####

great_alliance = {
	trigger = {
		always = yes
	}
}

grand_coalition = {
	trigger = {
		always = yes
	}
}

united_front = {
	trigger = {
		NOT = { scope:selected_identity = identity:identity_religious }
	}
}

joint_front = {
	trigger = {
		NOT = { scope:selected_identity = identity:identity_religious }
	}
}

imperial_circle = {
	trigger = {
		coa_monarchy_trigger = yes
	}
}

##### Power Bloc identities #####

### sovereign empire ###

imperial_conference = {
	trigger = {
		scope:selected_identity = identity:identity_sovereign_empire
	}
}

mitteleuropa = {
	trigger = {
		scope:selected_identity = identity:identity_sovereign_empire
		any_primary_culture = {
			has_discrimination_trait = german_speaking
		}
	}
}

italian_empire = {
	trigger = {
		scope:selected_identity = identity:identity_sovereign_empire
		any_primary_culture = {
			has_discrimination_trait = italophone
		}
	}
}

russian_empire = {
	trigger = {
		scope:selected_identity = identity:identity_sovereign_empire
		c:RUS ?= this
	}
}

stormakt = {
	trigger = {
		scope:selected_identity = identity:identity_sovereign_empire
		c:SWE ?= this
	}
}

iran-e_bozorg = {
	trigger = {
		scope:selected_identity = identity:identity_sovereign_empire
		c:PER ?= this
	}
}

golden_circle = {
	trigger = {
		scope:selected_identity = identity:identity_sovereign_empire
		OR = {
			c:CSA ?= this
			AND = {
				c:USA ?= this
				NOT = { 
					has_law = law_type:law_slavery_banned 
				}
				NOR = {
					has_journal_entry = je_acw_countdown
					has_journal_entry = je_acw_war
				}
			}
		}
	}
}

da_zhongguo = { # greater china
	trigger = {
		scope:selected_identity = identity:identity_sovereign_empire
		OR = {
			c:CHI ?= this
			any_primary_culture = {
				has_discrimination_trait = han_chinese
			}
		}
	}
}

international_association = {
	trigger = {
		scope:selected_identity = identity:identity_sovereign_empire
		OR = {
			c:BEL ?= this
			any_scope_state = {
				OR = {
					state_region = s:STATE_CONGO_ORIENTALE
					state_region = s:STATE_KATANGA
					state_region = s:STATE_BAS_CONGO
					state_region = s:STATE_EQUATEUR
					state_region = s:STATE_KASAI
				}
			}
		}
	}
}

### religious ###

virtuous_league = {
	trigger = {
	    scope:selected_identity = identity:identity_religious
	}
}

coalition_of_innocents = {
	trigger = {
	    scope:selected_identity = identity:identity_religious
	}
}

holy_league = {
	trigger = {
        scope:selected_identity = identity:identity_religious
        country_has_state_religion = rel:catholic
	}
}

evangelical_league = {
	trigger = {
        scope:selected_identity = identity:identity_religious
        country_has_state_religion = rel:protestant
		any_primary_culture = {
			has_discrimination_trait = german_speaking
		}
	}
}

holy_alliance = {
	trigger = {
		OR = {
	        scope:selected_identity = identity:identity_religious
	        AND = {
		        coa_undemocratic_monarchy_trigger = yes
		        scope:selected_identity = identity:identity_ideological_union
		    }
	    }
        religion = {
        	has_discrimination_trait = christian
        }
	}
}

great_crusade = {
	trigger = {
	    scope:selected_identity = identity:identity_religious
        religion = {
        	has_discrimination_trait = christian
        }
    }
}

dar_al_islam = {
	trigger = {
	    scope:selected_identity = identity:identity_religious
        religion = {
        	has_discrimination_trait = muslim
        }
	}
}

league_of_reason = {
	trigger = {
        scope:selected_identity = identity:identity_religious
        country_has_state_religion = rel:atheist
	}
}

league_of_the_faithful = {
	trigger = {
	    scope:selected_identity = identity:identity_religious
	    NOT = { country_has_state_religion = rel:atheist }
	}
}

league_of_harmony = { 
	trigger = {
		scope:selected_identity = identity:identity_religious
		OR = {
			c:CHI ?= this
			any_primary_culture = {
				has_discrimination_trait = han_chinese
			}
			religion = { has_discrimination_trait = eastern }
			religion = { has_discrimination_trait = buddhist }
		}
	}
}

solemn_league = { # Solemn League and Covenant
	trigger = {
		scope:selected_identity = identity:identity_religious
		OR = {
			c:GBR ?= this
			c:SCO ?= this
			c:ENG ?= this
		}
	}
}

sons_of_saint_louis = {
	trigger = {
		OR = {
			scope:selected_identity = identity:identity_religious
			AND = {
				scope:selected_identity = identity:identity_ideological_union
				coa_undemocratic_monarchy_trigger = yes
			}
		}
		c:FRA ?= this
	}
}

### political union ###

mutual_treaty_organization = {
	trigger = {
	    scope:selected_identity = identity:identity_ideological_union
	}
}

league_of_allied_states = {
	trigger = {
	    scope:selected_identity = identity:identity_ideological_union
	}
}

congress_of_states = {
	trigger = {
	    scope:selected_identity = identity:identity_ideological_union
	}
}

democratic_ring = {
	trigger = {
		coa_republic_trigger = yes
		coa_autocracy_trigger = no
		scope:selected_identity = identity:identity_ideological_union
	}
}

league_of_versailles = {
	trigger = {
	    scope:selected_identity = identity:identity_ideological_union
	    OR = {
	    	any_scope_state = { state_region = s:STATE_ILE_DE_FRANCE }
	    	any_scope_ally = {
	    		any_scope_state = { state_region = s:STATE_ILE_DE_FRANCE }
	    	}
	    }
	}
}

london_conference = {
	trigger = {
	    scope:selected_identity = identity:identity_ideological_union
	    OR = {
	    	any_scope_state = { state_region = s:STATE_HOME_COUNTIES }
	    	any_scope_ally = {
	    		any_scope_state = { state_region = s:STATE_HOME_COUNTIES }
	    	}
	    }
	}
}

congress_of_berlin = {
	trigger = {
	    scope:selected_identity = identity:identity_ideological_union
	    OR = {
	    	any_scope_state = { state_region = s:STATE_BRANDENBURG }
	    	any_scope_ally = {
	    		any_scope_state = { state_region = s:STATE_BRANDENBURG }
	    	}
	    }
	}
}

congress_of_vienna = {
	trigger = {
	    scope:selected_identity = identity:identity_ideological_union
	    OR = {
	    	any_scope_state = { state_region = s:STATE_AUSTRIA }
	    	any_scope_ally = {
	    		any_scope_state = { state_region = s:STATE_AUSTRIA }
	    	}
	    }
	}
}

pact_of_rome = {
	trigger = {
	    scope:selected_identity = identity:identity_ideological_union
	    OR = {
	    	any_scope_state = { state_region = s:STATE_LAZIO }
	    	any_scope_ally = {
	    		any_scope_state = { state_region = s:STATE_LAZIO }
	    	}
	    }
	}
}

convention_of_naples = {
	trigger = {
	    scope:selected_identity = identity:identity_ideological_union
	    OR = {
	    	any_scope_state = { state_region = s:STATE_CAMPANIA }
	    	any_scope_ally = {
	    		any_scope_state = { state_region = s:STATE_CAMPANIA }
	    	}
	    }
	}
}

washington_convention = {
	trigger = {
	    scope:selected_identity = identity:identity_ideological_union
	    OR = {
	    	any_scope_state = { state_region = s:STATE_DISTRICT_OF_COLUMBIA }
	    	any_scope_ally = {
	    		any_scope_state = { state_region = s:STATE_DISTRICT_OF_COLUMBIA }
	    	}
	    }
	}
}

beijing_convention = {
	trigger = {
	    scope:selected_identity = identity:identity_ideological_union
	    OR = {
	    	any_scope_state = { state_region = s:STATE_BEIJING }
	    	any_scope_ally = {
	    		any_scope_state = { state_region = s:STATE_BEIJING }
	    	}
	    }
	}
}

pact_of_veracruz = {
	trigger = {
	    scope:selected_identity = identity:identity_ideological_union
	    OR = {
	    	any_scope_state = { state_region = s:STATE_VERACRUZ }
	    	any_scope_ally = {
	    		any_scope_state = { state_region = s:STATE_VERACRUZ }
	    	}
	    }
	}
}

pact_of_calcutta = {
	trigger = {
	    scope:selected_identity = identity:identity_ideological_union
	    OR = {
	    	any_scope_state = { state_region = s:STATE_SOUTH_BENGAL }
	    	any_scope_ally = {
	    		any_scope_state = { state_region = s:STATE_SOUTH_BENGAL }
	    	}
	    }
	}
}

seneca_falls_coalition = {
	trigger = {
	    scope:selected_identity = identity:identity_ideological_union

	    has_law = law_type:law_womens_suffrage

	    OR = {
	    	any_scope_state = { state_region = s:STATE_NEW_YORK }
	    	any_scope_ally = {
	    		any_scope_state = { state_region = s:STATE_NEW_YORK }
	    	}
	    }
	}
}

self_rule_league = {
	trigger = {
	    scope:selected_identity = identity:identity_ideological_union
	    NOT = {
	    	any_subject_or_below = {
	    		always = yes
	    	}
	    }
	}
}

### military treaty organization ###

central_powers = {
	trigger = {
	    scope:selected_identity = identity:identity_military_treaty_organization
	    OR = {
	    	c:GER ?= this
	    	c:AUS ?= this
	    	c:TUR ?= this
	    	c:ITA ?= this
	    }
	    any_scope_ally = {
	    	count >= 2
	    	OR = {
	    		c:TUR ?= this
	    		c:AUS ?= this
	    		c:GER ?= this
	    		c:ITA ?= this
	    	}
	    }
	}
}

entente = {
	trigger = {
	    scope:selected_identity = identity:identity_military_treaty_organization
	    c:FRA ?= this
	    any_scope_ally = {
	    	count >= 2
	    	OR = {
		    	c:GBR ?= this
		    	c:RUS ?= this
		    	c:ITA ?= this
		    	c:USA ?= this
		    	c:JAP ?= this
	    	}
	    }
	}
}

unholy_alliance = {
	trigger = {
	    scope:selected_identity = identity:identity_military_treaty_organization

	    OR = {
	    	AND = {
	    		c:FRA ?= this
	    		any_scope_ally = { 
	    			c:GER ?= this 
	    			is_subject = no
	    		}
	    	}
	    	AND = {
	    		c:GER ?= this
	    		any_scope_ally = { 
	    			c:FRA ?= this 
	    			is_subject = no
	    		}
	    	}
	    }
	}
}

pact_of_pearl_harbor = {
	trigger = {
		scope:selected_identity = identity:identity_military_treaty_organization
	    OR = {
	    	any_scope_state = { state_region = s:STATE_HAWAIIAN_ISLANDS }
	    	any_scope_ally = {
	    		any_scope_state = { state_region = s:STATE_HAWAIIAN_ISLANDS }
	    	}
	    }
	}
}

waterloo_pact = {
	trigger = {
		scope:selected_identity = identity:identity_military_treaty_organization
	    OR = {
	    	c:BEL ?= this
	    	any_scope_ally = {
	    		c:BEL ?= this
	    	}
	    	any_scope_ally = {
	    		any_scope_state = { state_region = s:STATE_WALLONIA }
	    	}
	    }
		any_rival_country = {
			c:FRA ?= this
		}
	}
}

### trade league ###

association_of_syndicates = {
	trigger = {
		scope:selected_identity = identity:identity_trade_league
	}
}

free_commerce_committee = {
	trigger = {
		scope:selected_identity = identity:identity_trade_league
	}
}

league_of_preferential_states = {
	trigger = {
		scope:selected_identity = identity:identity_trade_league
	}
}

steuerverein = {
	trigger = {
		scope:selected_identity = identity:identity_trade_league
		OR = {
			c:HAN ?=this
			was_formed_from = HAN
		}
	}
}

handelsverein = {
	trigger = {
		scope:selected_identity = identity:identity_trade_league
		OR = {
			c:SAX ?= this
			was_formed_from = SAX
		}
	}
}

ouchy_convention = {
	trigger = {
		scope:selected_identity = identity:identity_trade_league
		OR = {
			c:NET ?= this
			c:BEL ?= this
			c:LUX ?= this
			c:WAL ?= this
			c:FLA ?= this
		}
	}
}

imperial_preference = {
	trigger = {
		scope:selected_identity = identity:identity_trade_league
		has_law = law_type:law_monarchy
		c:GBR ?=this
	}
}

bolivarian_group = {
	trigger = {
		scope:selected_identity = identity:identity_trade_league
		any_primary_culture = {
			OR = {
				this = cu:north_andean
				this = cu:south_andean
				this = cu:peruvian
				this = cu:ecuadorian
				this = cu:bolivian
				this = cu:venezuelan
				this = cu:colombian
			}
		}
	}
}

hanseatic_league = {
	trigger = {
		scope:selected_identity = identity:identity_trade_league
		OR = {
			c:HAM ?= this
			was_formed_from = HAM
			c:LUB ?= this
			was_formed_from = LUB
			c:BRE ?= this
			was_formed_from = BRE
			c:DZG ?= this
			was_formed_from = DZG
		}
	}
}

stato_da_mar = {
	trigger = {
		scope:selected_identity = identity:identity_trade_league
		any_primary_culture = {
			has_discrimination_trait = italophone
		}
	}
}

league_of_trieste = {
	trigger = {
		scope:selected_identity = identity:identity_trade_league
	    OR = {
	    	any_scope_state = { state_region = s:STATE_ISTRIA }
	    	any_scope_ally = {
	    		any_scope_state = { state_region = s:STATE_ISTRIA }
	    	}
	    }
	}
}

wall_street_pact = {
	trigger = {
		scope:selected_identity = identity:identity_trade_league
	    OR = {
	    	any_scope_state = { state_region = s:STATE_NEW_YORK }
	    	c:USA ?= this
	    }
	}
}

new_orleans_league = {
	trigger = {
		scope:selected_identity = identity:identity_trade_league
		c:USA != this
	    OR = {
	    	any_scope_state = { state_region = s:STATE_LOUISIANA }
	    	c:LOU ?= this
	    }
	}
}

galveston_league = {
	trigger = {
		scope:selected_identity = identity:identity_trade_league
		c:TEX ?= this
	}
}

threadneedle_league = {
	trigger = {
		scope:selected_identity = identity:identity_trade_league
		any_scope_state = { state_region = s:STATE_HOME_COUNTIES }
	}
}

bloc_brogniart = {
	trigger = {
		scope:selected_identity = identity:identity_trade_league
		c:FRA ?= this
	}
}

singapore_pact = {
	trigger = {
		scope:selected_identity = identity:identity_trade_league
	    OR = {
	    	any_scope_state = { state_region = s:STATE_MALAYA }
	    	any_scope_ally = {
	    		any_scope_state = { state_region = s:STATE_MALAYA }
	    	}
	    }
	}
}

##### IT IS TIME FOR [sniff] IDEOLOGY #####

### Fascist bloc names ###
pact_of_friendship = {
	trigger = {
		OR = {
			scope:selected_identity = identity:identity_military_treaty_organization
			scope:selected_identity = identity:identity_ideological_union
		}
		coa_fascist_trigger = yes
	}
}

anti_communist_agreement = {
	trigger = {
		OR = {
			scope:selected_identity = identity:identity_military_treaty_organization
			scope:selected_identity = identity:identity_ideological_union
		}
		coa_fascist_trigger = yes
		any_rival_country = {
			coa_communist_trigger = yes
		}
	}
}

### republican bloc names ###

moral_international = {
	trigger = {
		scope:selected_identity = identity:identity_ideological_union
		coa_republic_trigger = yes
		NOT = { country_has_state_religion = rel:atheist }
	}
}

anti_monarchist_congress = {
	trigger = {
		scope:selected_identity = identity:identity_ideological_union
		coa_republic_trigger = yes
		NOT = {
			any_scope_ally = {
				coa_monarchy_trigger = yes
			}
		}
	}
}

league_of_liberty = {
	trigger = {
		scope:selected_identity = identity:identity_ideological_union
		coa_republic_trigger = yes
		country_has_voting_franchise = yes
	}
}

democratic_pact = {
	trigger = {
		scope:selected_identity = identity:identity_ideological_union
		coa_republic_trigger = yes
		country_has_voting_franchise = yes
	}
}

### Communist/Council Republic bloc names ###
communist_international = {
	trigger = {
		scope:selected_identity = identity:identity_ideological_union
		coa_communist_trigger = yes
	}
}

socialist_conference = {
	trigger = {
		scope:selected_identity = identity:identity_ideological_union
		coa_communist_trigger = yes
	}
}

socialist_international = {
	trigger = {
		scope:selected_identity = identity:identity_ideological_union
		coa_communist_trigger = yes
		NOT = { has_law = law_type:law_autocracy }
	}
}

### Either Communist or Anarchist ###

workingmens_association = {
	trigger = {
		scope:selected_identity = identity:identity_ideological_union
		OR = {
			coa_anarchy_trigger = yes
			coa_communist_trigger = yes
		}
	}
}

workingmens_international = {
	trigger = {
		scope:selected_identity = identity:identity_ideological_union
		OR = {
			coa_anarchy_trigger = yes
			coa_communist_trigger = yes
		}
	}
}

international_committee = {
	trigger = {
		OR = {
			scope:selected_identity = identity:identity_military_treaty_organization
			scope:selected_identity = identity:identity_ideological_union
		}
		OR = {
			coa_anarchy_trigger = yes
			coa_communist_trigger = yes
		}
	}
}

international_secretariat = {
	trigger = {
		OR = {
			scope:selected_identity = identity:identity_military_treaty_organization
			scope:selected_identity = identity:identity_ideological_union
		}
		OR = {
			coa_anarchy_trigger = yes
			coa_communist_trigger = yes
		}
	}
}

### Anarchist bloc names. don't think too hard about this one ###
anarchist_international = {
	trigger = {
		scope:selected_identity = identity:identity_ideological_union
		coa_anarchy_trigger = yes
	}
}

anarchist_congress = {
	trigger = {
		OR = {
			scope:selected_identity = identity:identity_military_treaty_organization
			scope:selected_identity = identity:identity_ideological_union
		}
		coa_anarchy_trigger = yes
	}
}

anarchist_conference = {
	trigger = {
		OR = {
			scope:selected_identity = identity:identity_military_treaty_organization
			scope:selected_identity = identity:identity_ideological_union
		}
		coa_anarchy_trigger = yes
	}
}

meeting_of_anarchists = {
	trigger = {
		scope:selected_identity = identity:identity_ideological_union
		coa_anarchy_trigger = yes
	}
}

##### country-specific and misc bloc names #####

co_prosperity_sphere = {
	trigger = {
		OR = {
			scope:selected_identity = identity:identity_sovereign_empire
			scope:selected_identity = identity:identity_military_treaty_organization
			scope:selected_identity = identity:identity_ideological_union
		}
		coa_fascist_trigger = yes
		c:JAP ?= this
	}
}

contintental_system = {
	trigger = {
		OR = {
			scope:selected_identity = identity:identity_sovereign_empire
			scope:selected_identity = identity:identity_military_treaty_organization
			scope:selected_identity = identity:identity_trade_league
		}
		c:FRA ?= this
		ruler = {
			has_ideology = ideology:ideology_bonapartist
		}
		any_rival_country = {
			c:GBR ?= this
		}
	}
}

lone_star_league = {
	trigger = {
		c:TEX ?= this
	}
}

pan_african_union = {
	trigger = {
		any_scope_state = {
			is_capital = yes
			state_in_africa = yes
		}
	}
}

paris_convention = {
	trigger = {
	    OR = {
	    	any_scope_state = { state_region = s:STATE_ILE_DE_FRANCE }
	    	any_scope_ally = {
	    		any_scope_state = { state_region = s:STATE_ILE_DE_FRANCE }
	    	}
	    }
	}
}

pact_of_the_straits = {
	trigger = {
	    OR = {
	    	any_scope_state = { state_region = s:STATE_EASTERN_THRACE }
	    	any_scope_ally = {
	    		any_scope_state = { state_region = s:STATE_EASTERN_THRACE }
	    	}
	    }
	}
}

amazon_pact = {
	trigger = {
	    OR = {
	    	any_scope_state = { state_region = s:STATE_PARA }
	    	any_scope_ally = {
	    		any_scope_state = { state_region = s:STATE_PARA }
	    	}
	    	any_scope_state = { state_region = s:STATE_AMAZONAS }
	    	any_scope_ally = {
	    		any_scope_state = { state_region = s:STATE_AMAZONAS }
	    	}
	    	any_scope_state = { state_region = s:STATE_GUAYANA }
	    	any_scope_ally = {
	    		any_scope_state = { state_region = s:STATE_GUAYANA }
	    	}
	    }
	}
}

latin_bloc = {
	trigger = {
		OR = {
			c:FRA ?= this
			c:ITA ?= this
			c:SPA ?= this
			c:POR ?= this
			c:ROM ?= this
		}
		any_scope_ally = {
			OR = {
				c:FRA ?= this
				c:ITA ?= this
				c:SPA ?= this
				c:POR ?= this
				c:ROM ?= this
			}
		}
	}
}

maritime_union = {
	trigger = {
		OR = {
			c:NEN ?= this
			c:NBS ?= this
			c:NVS ?= this
			c:NEW ?= this
		}
	}
}

league_of_bolivar = {
	trigger = {
		NOT = { scope:selected_identity = identity:identity_religious }
		any_primary_culture = {
			OR = {
				this = cu:north_andean
				this = cu:south_andean
				this = cu:peruvian
				this = cu:ecuadorian
				this = cu:bolivian
				this = cu:venezuelan
				this = cu:colombian
			}
		}
	}
}

non_aligned_conference = {
	trigger = {
		NOR = { 
			scope:selected_identity = identity:identity_religious 
			scope:selected_identity = identity:identity_sovereign_empire
		}
		country_rank < rank_value:great_power
		NOT = {
			any_scope_ally = {
				country_rank = rank_value:great_power
			}
		}
	}
}

sons_of_saint_stephen = {
	trigger = {
		c:HUN ?= this
		NAND = {
			scope:selected_identity = identity:identity_religious
			country_has_state_religion = rel:atheist
		}
	}
}

sol_de_mayo_league = {
	trigger = {
		OR = {
			c:ARG ?= this
			was_formed_from = ARG
			c:URU ?= this
			was_formed_from = URU
		}
	}
}

sublime_alliance = {
	trigger = {
		has_law = law_type:law_monarchy
		c:TUR ?= this
	}
}

#### hmm ####

organization_of_free_nations = {
	trigger = {
		OR = {
			scope:selected_identity = identity:identity_ideological_union
			scope:selected_identity = identity:identity_military_treaty_organization
		}
		country_has_voting_franchise = yes
		any_rival_country = {
			coa_fascist_trigger = yes
		}
	}
}

﻿### See power_bloc_principle_groups for grouping, primary groups for identities etc.

### CONSTRUCTION

principle_construction_1 = {
	icon = "gfx/interface/icons/principles_icons/construction.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_1.dds"

	visible = {
		has_dlc_feature = power_bloc_features
	}

	member_modifier = {
		# Members get a +10% Construction Efficiency modifier
		state_construction_mult = 0.1
	}
	
	ai_weight = {
		value = 100
		
		if = {
			limit = {
				ig:ig_industrialists ?= { is_in_government = yes }
			}
			add = 100
		}			
		
		if = {
			limit = { has_strategy = ai_strategy_industrial_expansion }
			multiply = 1.5
		}	
		else_if = {
			limit = { has_strategy = ai_strategy_resource_expansion }
			multiply = 1.25
		}	
	}
}

principle_construction_2 = {
	icon = "gfx/interface/icons/principles_icons/construction.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_2.dds"

	member_modifier = {
		# Modifiers from previous level(s)
		
		state_construction_mult = 0.1
		
		# Members Construction Sectors cost less infrastructure
		building_group_bg_construction_infrastructure_usage_mult = -0.75
	}
	
	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}	
}

principle_construction_3 = {
	icon  = "gfx/interface/icons/principles_icons/construction.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_3.dds"

	member_modifier = {
		# Modifiers from previous level(s)
		
		state_construction_mult = 0.1
		building_group_bg_construction_infrastructure_usage_mult = -0.75
		
		# Members can form Construction type Companies unlock triggers in the company
	}
	
	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}	
}

### INTERNAL TRADE

principle_internal_trade_1 = {
	icon = "gfx/interface/icons/principles_icons/internal_trade.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_1.dds"
	
	member_modifier = {
		# Members get a bonus to Company throughput
		country_company_throughput_bonus_add = 0.1
		# More convoy going to the market owner, effect scaling upwards with principle levels
		country_convoy_contribution_to_market_owner_add = 0.2
	}
	
	ai_weight = {
		value = 200 # Good for trade leagues to have
			
		if = {
			limit = { 
				OR = {
					has_law = law_type:law_mercantilism 
					has_law = law_type:law_command_economy
				}
			}
			add = 100
		}	

		if = {
			limit = { 
				power_bloc ?= { has_principle_group = principle_group:principle_group_external_trade }
			}
			multiply = 0.5
		}
	}	
}

principle_internal_trade_2 = {
	icon = "gfx/interface/icons/principles_icons/internal_trade.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_2.dds"

	member_modifier = {
		# Modifiers from previous level(s)
		country_company_throughput_bonus_add = 0.1
		country_convoy_contribution_to_market_owner_add = 0.3
	
		# Members get increased tariffs from countries outside the Power Bloc and infrastructure
		tariff_import_outside_power_bloc_mult = 0.2
		tariff_export_outside_power_bloc_mult = 0.2
		state_infrastructure_mult = 0.1
	}
	
	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}	
}

principle_internal_trade_3 = {
	icon = "gfx/interface/icons/principles_icons/internal_trade.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_3.dds"

	member_modifier = {
		# Modifiers from previous level(s)
		country_company_throughput_bonus_add = 0.1
		country_convoy_contribution_to_market_owner_add = 0.4
		tariff_import_outside_power_bloc_mult = 0.2
		tariff_export_outside_power_bloc_mult = 0.2
		state_infrastructure_mult = 0.1
		
		# Cheaper port connections
		country_port_connection_cost_mult = -0.25
	}
	
	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}

### MARKET UNIFICATION

principle_market_unification_1 = {
	icon = "gfx/interface/icons/principles_icons/market_unification.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_1.dds"
	
	visible = {
		has_dlc_feature = power_bloc_features
	}

	member_modifier = {
		# Members get a bonus to company throughput
		country_company_throughput_bonus_add = 0.1
	}

	power_bloc_modifier = {
		# Members cannot enable Embargos with each other
		power_bloc_disallow_embargo_bool = yes
	}
	
	ai_weight = {
		value = 200 # Generally a good group for a PB to have
		
		if = {
			limit = { has_strategy = ai_strategy_economic_imperialism }
			multiply = 2.0
		}
	}
}

principle_market_unification_2 = {
	icon = "gfx/interface/icons/principles_icons/market_unification.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_2.dds"

	member_modifier = {
		# Modifiers from previous level(s)
		country_company_throughput_bonus_add = 0.1
		
		# Members get increased tariffs from countries outside the Power Bloc and infrastructure
		tariff_import_outside_power_bloc_mult = 0.2
		tariff_export_outside_power_bloc_mult = 0.2
		state_infrastructure_mult = 0.1
	}

	power_bloc_modifier = {
		# Members cannot enable Embargos with each other
		power_bloc_disallow_embargo_bool = yes
	}
	
	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}

principle_market_unification_3 = {
	icon = "gfx/interface/icons/principles_icons/market_unification.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_3.dds"

	member_modifier = {
		# Modifiers from previous level(s)
		country_company_throughput_bonus_add = 0.1
		tariff_import_outside_power_bloc_mult = 0.2
		tariff_export_outside_power_bloc_mult = 0.2
		state_infrastructure_mult = 0.1
		country_convoy_contribution_to_market_owner_add = 0.4
	}

	power_bloc_modifier = {
		# Members are permanently part of the same Customs Union
		power_bloc_customs_union_bool = yes
	}
	
	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}


### SOVEREIGN EMPIRE
### Vassal Subjects

principle_vassalization_1 = {
	icon = "gfx/interface/icons/principles_icons/vassals_subjects.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_1.dds"
	
	visible = {
		has_dlc_feature = power_bloc_features
	}

	member_modifier = {
		# Each subject increases authority
		country_authority_per_subject_add = 25
	}
	
	ai_weight = {
		value = 100
		
		add = {
			value = num_subjects
			multiply = 50
			max = 500
		}

		if = {
			limit = {
				power_bloc ?= { NOT = { has_identity = identity:identity_sovereign_empire } } 				
			}
			multiply = 0.5
		}		
	}
}

principle_vassalization_2 = {
	icon = "gfx/interface/icons/principles_icons/vassals_subjects.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_2.dds"
	
	member_modifier = {
		# Modifiers from previous level(s)
		country_authority_per_subject_add = 25
		
		# Subjects pay more to overlord
		country_subject_income_transfer_mult = 0.25
	}
	
	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}

principle_vassalization_3 = {
	icon = "gfx/interface/icons/principles_icons/vassals_subjects.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_3.dds"

	member_modifier = {
		# Modifiers from previous level(s)
		country_authority_per_subject_add = 25
		country_subject_income_transfer_mult = 0.25
		
		# Can use decrees on subjects
		country_allow_enacting_decrees_in_subject_bool = yes
	}
	
	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}

### RESEARCH CONGLOMERATE

principle_advanced_research_1 = {
	icon = "gfx/interface/icons/principles_icons/advanced_research.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_1.dds"

	visible = {
		has_dlc_feature = power_bloc_features
	}

	member_modifier = {
		country_institution_size_change_speed_institution_schools_mult = 0.25
		country_institution_cost_institution_schools_mult = -0.1
		country_disallow_law_no_schools_bool = yes
	}

	leader_modifier = {
		country_can_impose_same_lawgroup_education_system_in_power_bloc_bool = yes
	}

	institution = institution_schools
	institution_modifier = {
		# School institution gives more tech spread
		country_tech_spread_mult = 0.05 
	}
	
	ai_weight = {
		value = 100
		
		if = {
			limit = {
				ig:ig_intelligentsia ?= { is_in_government = yes }
			}
			add = 100
		}			

		if = {
			limit = { has_strategy = ai_strategy_progressive_agenda }
			multiply = 1.5
		}
	}
}

principle_advanced_research_2 = {
	icon = "gfx/interface/icons/principles_icons/advanced_research.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_2.dds"
	
	member_modifier = {
		country_institution_size_change_speed_institution_schools_mult = 0.4
		country_institution_cost_institution_schools_mult = -0.25
		country_disallow_law_no_schools_bool = yes
	}

	leader_modifier = {
		country_can_impose_same_lawgroup_education_system_in_power_bloc_bool = yes
	}

	institution = institution_schools
	institution_modifier = {
		# School institution gives more tech spread
		country_tech_spread_mult = 0.05

		# School isntitution reduces ahead of time research penalty
		country_ahead_of_time_research_penalty_mult = -0.05
	}

	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}

principle_advanced_research_3 = {
	icon = "gfx/interface/icons/principles_icons/advanced_research.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_3.dds"

	member_modifier = {
		country_institution_size_change_speed_institution_schools_mult = 0.5
		country_institution_cost_institution_schools_mult = -0.5
		country_disallow_law_no_schools_bool = yes
	}

	leader_modifier = {
		country_can_impose_same_lawgroup_education_system_in_power_bloc_bool = yes
	}

	institution = institution_schools
	institution_modifier = {
		# School institution gives more tech spread
		country_tech_spread_mult = 0.05

		# School isntitution reduces ahead of time research penalty
		country_ahead_of_time_research_penalty_mult = -0.05

		# Increase Country max innovation
		country_weekly_innovation_max_add = 10
	}
	
	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}	
}

### DEFENSIVE COOPERATION

principle_defensive_cooperation_1 = {
	icon = "gfx/interface/icons/principles_icons/defensive_coorperation.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_1.dds"

	visible = {
		has_dlc_feature = power_bloc_features
	}

	power_bloc_modifier = {
		# Members cannot start wars amongst each other
		power_bloc_disallow_war_bool = yes
	}
	
	ai_weight = {
		value = 100
		
		if = {
			limit = {
				OR = {
					has_strategy = ai_strategy_socialism_in_one_country
					has_strategy = ai_strategy_armed_isolationism
				}	
			}
			multiply = 1.5
		}
		
		if = {
			limit = { 
				power_bloc ?= { has_principle_group = principle_group:principle_group_aggressive_coordination }			
			}
			multiply = 0.5
		}

		if = {
			limit = {
				power_bloc ?= { NOT = { has_identity = identity:identity_military_treaty_organization } } 				
			}
			multiply = 0.5
		}		
	}
}

principle_defensive_cooperation_2 = {
	icon = "gfx/interface/icons/principles_icons/defensive_coorperation.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_2.dds"

	power_bloc_modifier = {
		# Modifiers from previous level(s)
		power_bloc_disallow_war_bool = yes
		
		# Swaying members to join your side costs 50% less maneuvers if the inviting country is on the target's side
		power_bloc_target_sway_cost_mult = -0.5
	}
	
	leader_modifier = {
		# Allows leader to impose their own law onto member countries in the army_model law group
		country_can_impose_same_lawgroup_army_model_in_power_bloc_bool = yes
	}
	
	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}

principle_defensive_cooperation_3 = {
	icon = "gfx/interface/icons/principles_icons/defensive_coorperation.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_3.dds"

	member_modifier = {
		# Countries forced to join defensive plays against members
		country_join_power_bloc_member_in_defensive_plays_bool = yes
	}

	power_bloc_modifier = {
		# Modifiers from previous level(s)
		power_bloc_disallow_war_bool = yes
		power_bloc_target_sway_cost_mult = -0.5
	}
	
	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}

### AGGRESSIVE COORDINATION

principle_aggressive_coordination_1 = {
	icon = "gfx/interface/icons/principles_icons/aggressive_coordination.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_1.dds"
	
	visible = {
		has_dlc_feature = power_bloc_features
	}

	member_modifier = {
		# Reduces maneuver cost for picking wargoals during Diplomatic Play
		country_initiator_war_goal_maneuver_cost_mult = -0.3
	}
	
	ai_weight = {
		value = 100	
		
		if = {
			limit = {
				ig:ig_armed_forces ?= { is_in_government = yes }
			}
			add = 100
		}
		
		if = {
			limit = {
				OR = {
					has_strategy = ai_strategy_territorial_expansion
					has_strategy = ai_strategy_world_revolution
				}	
			}
			multiply = 1.5
		}		
		
		if = {
			limit = { 
				power_bloc ?= { has_principle_group = principle_group:principle_group_defensive_cooperation }				
			}
			multiply = 0.5
		}		
	}	
}

principle_aggressive_coordination_2 = {
	icon = "gfx/interface/icons/principles_icons/aggressive_coordination.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_2.dds"

	member_modifier = {
		# Modifiers from previous level(s)
		country_initiator_war_goal_maneuver_cost_mult = -0.3
		
		# Reduces war exhaustion from casualties, propaganda!
		country_war_exhaustion_casualties_mult = -0.15
	}
	
	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}	
}

principle_aggressive_coordination_3 = {
	icon = "gfx/interface/icons/principles_icons/aggressive_coordination.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_3.dds"

	power_bloc_modifier = {	
		# Reduces cohesion
		power_bloc_cohesion_add = -10
	}
	
	member_modifier = {
		# Modifiers from previous level(s)
		country_initiator_war_goal_maneuver_cost_mult = -0.3
		country_war_exhaustion_casualties_mult = -0.15
	
		# Countries forced to join diplomatic plays of members, other countries are not happy about this threat
		country_join_power_bloc_member_in_plays_bool = yes
		country_infamy_generation_mult = 0.15
	}
	
	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}

### EXTERNAL TRADE

principle_external_trade_1 = {
	icon = "gfx/interface/icons/principles_icons/external_trade.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_1.dds"

	power_bloc_modifier = {
		# Trade routes cost much less BUR inside the bloc
		power_bloc_trade_route_cost_mult = -0.75
	}

	member_modifier = {
		# Trade routes cost less BUR outside the bloc
		country_trade_route_cost_mult = -0.25
		
		# Increased trade route competetiveness
		country_trade_route_competitiveness_mult = 0.25
	}
	
	ai_weight = {
		value = 100
		
		if = {
			limit = { has_law = law_type:law_free_trade }
			add = 100
		}	
			
		add = {
			value = num_trade_routes
			multiply = 5
			max = 100
		}

		if = {
			limit = {
				power_bloc ?= { NOT = { has_identity = identity:identity_trade_league } } 				
			}
			multiply = 0.5
		}
		
		if = {
			limit = { 
				power_bloc ?= { has_principle_group = principle_group:principle_group_internal_trade }			
			}
			multiply = 0.5
		}		
	}
}

principle_external_trade_2 = {
	icon = "gfx/interface/icons/principles_icons/external_trade.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_2.dds"
	
	power_bloc_modifier = {
		# Modifiers from previous level(s)
		power_bloc_trade_route_cost_mult = -0.75
		
		# Also unlocks a PM that grants Trade Centers Influence, checked with trigger on PM
	}

	member_modifier = {
		# Modifiers from previous level(s)
		country_trade_route_cost_mult = -0.25
		country_trade_route_competitiveness_mult = 0.25
	}
	
	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}	
}

principle_external_trade_3 = {
	icon = "gfx/interface/icons/principles_icons/external_trade.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_3.dds"
	
	power_bloc_modifier = {
		# Modifiers from previous level(s)
		power_bloc_trade_route_cost_mult = -0.75
	
		# Also unlocks a PM that grants Trade Centers Influence, checked with trigger on PM (from level 2)
	}
	
	member_modifier = {
		# Modifiers from previous level(s)
		country_trade_route_cost_mult = -0.25
		country_trade_route_competitiveness_mult = 0.25
		
		# Allows members to set up trade routes without diplomatic interests there
		country_allow_trade_routes_without_interest_bool = yes
	}

	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}

### Food Standardization

principle_food_standardization_1 = {
	icon = "gfx/interface/icons/principles_icons/food_standardization.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_1.dds"
	
	visible = {
		has_dlc_feature = power_bloc_features
	}

	member_modifier = {
		building_group_bg_agriculture_throughput_add = 0.1
	}
	
	ai_weight = {
		value = 100
		
		if = {
			limit = {
				OR = {
					ig:ig_rural_folk ?= { is_in_government = yes }
					ig:ig_trade_unions ?= { is_in_government = yes }
				}			
			}
			add = 100
		}

		if = {
			limit = {
				has_strategy = ai_strategy_agricultural_expansion
			}
			multiply = 1.5
		}
	}		
}

principle_food_standardization_2 = {
	icon = "gfx/interface/icons/principles_icons/food_standardization.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_2.dds"

	member_modifier = {
		# Modifiers from previous level(s)
		building_group_bg_agriculture_throughput_add = 0.1
		
		# Lower mortality
		state_mortality_mult = -0.1
	}
	
	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}

principle_food_standardization_3 = {
	icon = "gfx/interface/icons/principles_icons/food_standardization.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_3.dds"

	member_modifier = {
		# Modifiers from previous level(s)
		building_group_bg_agriculture_throughput_add = 0.1
		state_mortality_mult = -0.1
		
		# Higher SoL
		state_standard_of_living_add = 1
		
		#Unlocks a PM for Food Industries
	}
	
	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}

### Police Coordination

principle_police_coordination_1 = {
	icon = "gfx/interface/icons/principles_icons/dedicated_police.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_1.dds"
	
	visible = {
		has_dlc_feature = power_bloc_features
	}

	member_modifier = {
		# Cheaper and faster police institution
		country_institution_size_change_speed_institution_police_mult = 0.25
		country_institution_cost_institution_police_mult = -0.1
		country_disallow_law_no_police_bool = yes
	}

	leader_modifier = {
		country_can_impose_same_lawgroup_policing_in_power_bloc_bool = yes
	}
	
	ai_weight = {
		value = 100
		
		if = {
			limit = {
				OR = {
					ig:ig_landowners ?= { is_in_government = yes }
					ig:ig_petty_bourgeoisie ?= { is_in_government = yes }
				}			
			}
			add = 100
		}

		if = {
			limit = {
				OR = {
					has_strategy = ai_strategy_conservative_agenda
					has_strategy = ai_strategy_reactionary_agenda
				}
			}
			multiply = 1.5
		}	
	}	
}

principle_police_coordination_2 = {
	icon = "gfx/interface/icons/principles_icons/dedicated_police.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_2.dds"

	member_modifier = {
		# Cheaper and faster police institution
		country_institution_size_change_speed_institution_police_mult = 0.4
		country_institution_cost_institution_police_mult = -0.25
		country_disallow_law_no_police_bool = yes
	}

	leader_modifier = {
		country_can_impose_same_lawgroup_policing_in_power_bloc_bool = yes
	}

	institution = institution_police
	institution_modifier = {
		# Police institution reduces radicalism of political movements
		political_movement_radicalism_mult = -0.05
	}
	
	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}

principle_police_coordination_3 = {
	icon = "gfx/interface/icons/principles_icons/dedicated_police.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_3.dds"

	member_modifier = {
		# Cheaper and faster police institution
		country_institution_size_change_speed_institution_police_mult = 0.5
		country_institution_cost_institution_police_mult = -0.5
		country_disallow_law_no_police_bool = yes
	}

	leader_modifier = {
		country_can_impose_same_lawgroup_policing_in_power_bloc_bool = yes
	}

	institution = institution_police
	institution_modifier = {
		# Police institution adds authority
		country_authority_add = 50
		
		# Police institution reduces radicalism of political movements
		political_movement_radicalism_mult = -0.05
	}
	
	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}


### TRANSPORT INFRASTRUCTURE

principle_transport_1 = {
	icon = "gfx/interface/icons/principles_icons/transport.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_1.dds"

	visible = {
		has_dlc_feature = power_bloc_features
	}

	member_modifier = {
		# Members get increased Infrastructure from pops
		state_infrastructure_from_population_mult = 0.33
		state_infrastructure_from_population_max_mult = 0.33 		
	}
	
	ai_weight = {
		value = 100
		
		if = {
			limit = {
				ig:ig_industrialists ?= { is_in_government = yes }
			}
			add = 100
		}	
		
		if = {
			limit = { has_strategy = ai_strategy_industrial_expansion }
			multiply = 1.5
		}	
		else_if = {
			limit = { has_strategy = ai_strategy_resource_expansion }
			multiply = 1.25
		}
	}
}

principle_transport_2 = {
	icon = "gfx/interface/icons/principles_icons/transport.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_2.dds"

	member_modifier = {
		# Modifiers from previous level(s)	
		state_infrastructure_from_population_mult = 0.33
		state_infrastructure_from_population_max_mult = 0.33 
		
		# Members have increased convoy capacity
		country_convoys_capacity_mult = 0.2
	}
	
	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}

principle_transport_3 = {
	icon = "gfx/interface/icons/principles_icons/transport.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_3.dds"

	member_modifier = {
		# Modifiers from previous level(s)
		country_convoys_capacity_mult = 0.2
		state_infrastructure_from_population_mult = 0.33
		state_infrastructure_from_population_max_mult = 0.33 
		
		# Increased land trade capacity
		market_land_trade_capacity_add = 50
		
		# Unlocks a set of PMs for Railways
	}
	
	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}

### Military Industry

principle_military_industry_1 = {
	icon = "gfx/interface/icons/principles_icons/military_industry.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_1.dds"
	
	visible = {
		has_dlc_feature = power_bloc_features
	}

	member_modifier = {
		# Members get increased military industry throughput
		building_war_machine_industry_throughput_add = 0.1
		building_arms_industry_throughput_add = 0.1
		building_artillery_foundries_throughput_add = 0.1
		building_military_shipyards_throughput_add = 0.1
	}
	
	ai_weight = {
		value = 100	
		
		if = {
			limit = {
				ig:ig_armed_forces ?= { is_in_government = yes }
			}
			add = 100
		}

		if = {
			limit = {
				"goods_production_rank(g:small_arms)" <= 3
			}
			add = 50
		}
		
		if = {
			limit = {
				"goods_production_rank(g:artillery)" <= 3
			}
			add = 50
		}

		if = {
			limit = {
				"goods_production_rank(g:ammunition)" <= 3
			}
			add = 50
		}			
	}
}

principle_military_industry_2 = {
	icon = "gfx/interface/icons/principles_icons/military_industry.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_2.dds"
	
	member_modifier = {
		# Modifiers from previous level(s)
		building_war_machine_industry_throughput_add = 0.1
		building_arms_industry_throughput_add = 0.1
		building_artillery_foundries_throughput_add = 0.1
		building_military_shipyards_throughput_add = 0.1
		
		# Members get reduced military goods cost
		country_military_goods_cost_mult = -0.15
	}
	
	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}

principle_military_industry_3 = {
	icon = "gfx/interface/icons/principles_icons/military_industry.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_3.dds"
	
	member_modifier = {
		# Modifiers from previous level(s)	
		building_war_machine_industry_throughput_add = 0.1
		building_arms_industry_throughput_add = 0.1
		building_artillery_foundries_throughput_add = 0.1
		building_military_shipyards_throughput_add = 0.1
		country_military_goods_cost_mult = -0.15
		
		# Supply routes use less convoys
		character_supply_route_cost_mult = -0.33
		
		# Members get an unique mobilization option mechanic
	}
	
	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}

### Colonial Offices

principle_colonial_offices_1 = {
	icon = "gfx/interface/icons/principles_icons/colonial_offices.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_1.dds"
	
	visible = {
		has_dlc_feature = power_bloc_features
	}

	member_modifier = {
		# Cheaper and faster colonial institution
		country_institution_size_change_speed_institution_colonial_affairs_mult = 0.25
		country_institution_cost_institution_colonial_affairs_mult = -0.1
		country_disallow_law_no_colonial_affairs_bool = yes
	}

	leader_modifier = {
		country_can_impose_same_lawgroup_colonization_in_power_bloc_bool = yes
	}
	
	ai_weight = {
		value = 200 # High base weight if the leader has colonies
		
		if = {
			limit = { has_strategy = ai_strategy_colonial_expansion }
			multiply = 2.0
		}

		if = {
			limit = {
				NOT = { any_scope_state = { is_under_colonization = yes } }
			}
			multiply = 0.0
		}			
	}
}

principle_colonial_offices_2 = {
	icon = "gfx/interface/icons/principles_icons/colonial_offices.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_2.dds"

	member_modifier = {
		# Cheaper and faster colonial institution
		country_institution_size_change_speed_institution_colonial_affairs_mult = 0.4
		country_institution_cost_institution_colonial_affairs_mult = -0.25
		country_disallow_law_no_colonial_affairs_bool = yes
	}

	leader_modifier = {
		country_can_impose_same_lawgroup_colonization_in_power_bloc_bool = yes
	}
	
	institution = institution_colonial_affairs
	institution_modifier = {
		# Members get higher colony growth for each level of institution
		state_colony_growth_creation_mult = 0.05
	}	
	
	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}

principle_colonial_offices_3 = {
	icon = "gfx/interface/icons/principles_icons/colonial_offices.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_3.dds"
	
	member_modifier = {
		# Cheaper and faster colonial institution
		country_institution_size_change_speed_institution_colonial_affairs_mult = 0.5
		country_institution_cost_institution_colonial_affairs_mult = -0.5
		country_disallow_law_no_colonial_affairs_bool = yes
	}

	leader_modifier = {
		country_can_impose_same_lawgroup_colonization_in_power_bloc_bool = yes
	}
	
	institution = institution_colonial_affairs
	institution_modifier = {
		# Modifiers from previous level(s)	
		state_colony_growth_creation_mult = 0.05
		country_infamy_generation_against_unrecognized_mult = -0.05
	}		

	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}

### Foreign Investment

principle_foreign_investment_1 = {
	icon = "gfx/interface/icons/principles_icons/foreign_investment.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_1.dds"

	visible = {
		has_dlc_feature = power_bloc_features
	}

	member_modifier = {
		# This modifier is just here to generate a tooltip. It doesn't actually do anything on its own
		country_higher_leverage_from_economic_dependence_bool = yes
	}
	
	ai_weight = {
		value = 100
		
		if = {
			limit = {
				OR = {
					ig:ig_industrialists ?= { is_in_government = yes }
					ig:ig_landowners ?= { is_in_government = yes }
				}
			}	
			add = 100
		}		
		
		if = {
			limit = { has_strategy = ai_strategy_economic_imperialism }
			multiply = 2.0
		}		
	}
}

principle_foreign_investment_2 = {
	icon = "gfx/interface/icons/principles_icons/foreign_investment.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_2.dds"

	member_modifier = {
		# Members get reduced nationalization cost for assets of non-members
		country_nationalization_cost_non_members_mult = -0.5

		# This modifier is just here to generate a tooltip. It doesn't actually do anything on its own
		country_higher_leverage_from_economic_dependence_bool = yes
	}
	
	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}

principle_foreign_investment_3 = {
	icon = "gfx/interface/icons/principles_icons/foreign_investment.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_3.dds"
	
	# Members can always invest in power bloc coutries of lower rank
	# Does not generate a tooltip, so a dummy modifier is required to show this effect
	allows_foreign_investment_in_lower_rank = yes
	
	member_modifier = {
		# Modifiers from previous level(s)	
		country_nationalization_cost_non_members_mult = -0.5

		# This modifier is just here to generate a tooltip. It doesn't actually do anything on its own
		country_higher_leverage_from_economic_dependence_bool = yes
	}
	
	power_bloc_modifier = {
		# This modifier has no effects and is only here to generate a tooltip
		power_bloc_allow_foreign_investment_lower_rank_bool = yes 
	}

	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}

### Creative Legislature

principle_creative_legislature_1 = {
	icon = "gfx/interface/icons/principles_icons/creative_legislature.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_1.dds"

	visible = {
		has_dlc_feature = power_bloc_features
	}

	member_modifier = {
		# Laws are less likely to stall during enactment
		country_law_enactment_stall_mult = -0.33
	}
	
	ai_weight = {
		value = 200 # High base value for ideological union, but also generally useful for others
		
		if = {
			limit = {
				power_bloc ?= { NOT = { has_identity = identity:identity_ideological_union } } 			
			}
			multiply = 0.5
		}		
	}
}

principle_creative_legislature_2 = {
	icon = "gfx/interface/icons/principles_icons/creative_legislature.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_2.dds"

	member_modifier = {
		# Modifiers from previous level(s)	
		country_law_enactment_stall_mult = -0.33
		
		# Members political movements to preserve and restore have lower support
		political_movement_preserve_support_mult = -0.33
		political_movement_restore_support_mult = -0.33
	}
	
	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}

principle_creative_legislature_3 = {
	icon = "gfx/interface/icons/principles_icons/creative_legislature.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_3.dds"
	
	member_modifier = {
		# Modifiers from previous level(s)	
		country_law_enactment_stall_mult = -0.33
		political_movement_preserve_support_mult = -0.33
		political_movement_restore_support_mult = -0.33
		
		# Can have one additional setback before failing a law enactment
		country_law_enactment_max_setbacks_add = 1
	}

	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}

### Freedom of Movement

principle_freedom_of_movement_1 = {
	icon = "gfx/interface/icons/principles_icons/freedom_of_movement.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_1.dds"

	visible = {
		has_dlc_feature = power_bloc_features
	}
	
	possible = {
		NOT = { has_law = law_type:law_closed_borders }
	}

	member_modifier = {
		# Increased migration
		state_migration_quota_mult = 0.25
	}
	
	ai_weight = {
		value = 100
		
		if = {
			limit = {
				ig:ig_intelligentsia ?= { is_in_government = yes }
			}	
			add = 100
		}	

		if = {
			limit = {
				OR = {
					country_is_in_north_america = yes
					country_is_in_central_america = yes
					country_is_in_south_america = yes
				}
			}	
			add = 100
		}
		
		if = {
			limit = {
				has_law = law_type:law_migration_controls
			}	
			multiply = 0.5
		}

		if = {
			limit = { has_strategy = ai_strategy_progressive_agenda }
			multiply = 1.5
		}

		if = {
			limit = { 
				OR = {
					has_strategy = ai_strategy_conservative_agenda
					has_strategy = ai_strategy_reactionary_agenda
				}			
			}
			multiply = 0.25
		}		
	}
}

principle_freedom_of_movement_2 = {
	icon = "gfx/interface/icons/principles_icons/freedom_of_movement.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_2.dds"

	member_modifier = {
		# Modifiers from previous level(s)	
		state_migration_quota_mult = 0.25
		
		# Increases chance to be picked for mass migrations
		country_mass_migration_attraction_mult = 0.5	
	}
	
	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}

principle_freedom_of_movement_3 = {
	icon = "gfx/interface/icons/principles_icons/freedom_of_movement.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_3.dds"
	
	member_modifier = {
		# Modifiers from previous level(s)	
		state_migration_quota_mult = 0.25
		country_mass_migration_attraction_mult = 0.5	
	}

	power_bloc_modifier = {
		# Unlocks a new PM for Universities and Art Academies that increases migration attraction, unlocked per trigger in the PM
	
		# Unlocks power-bloc wide migration
		power_bloc_allow_wider_migration_area_bool = yes
	}

	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}

### Divine Economics

principle_divine_economics_1 = {
	icon = "gfx/interface/icons/principles_icons/divine_economy.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_1.dds"

	visible = {
		has_dlc_feature = power_bloc_features
	}

	power_bloc_modifier = {
		# Increased trade route competitiveness for PB trade routes
		power_bloc_religion_trade_route_competitiveness_mult = 0.5
	}
	
	member_modifier = {
		# Higher subject payments from other religions
		country_subject_income_transfer_heathen_mult = 0.5		
	}
	
	ai_weight = {
		value = 200 # Religious PBs should tend towards picking the religious principles
		
		if = {
			limit = {
				ig:ig_devout ?= { is_in_government = yes }
			}	
			add = 100
		}
	}
}

principle_divine_economics_2 = {
	icon = "gfx/interface/icons/principles_icons/divine_economy.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_2.dds"

	power_bloc_modifier = {
		# Modifiers from previous level(s)		
		power_bloc_religion_trade_route_competitiveness_mult = 0.5
	}
	
	member_modifier = {
		# Modifiers from previous level(s)		
		country_subject_income_transfer_heathen_mult = 0.5

		# New PM for Financial Districts/Manor Houses unlocked via trigger
	}	
	
	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}

principle_divine_economics_3 = {
	icon = "gfx/interface/icons/principles_icons/divine_economy.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_3.dds"
	
	power_bloc_modifier = {
		# Modifiers from previous level(s)		
		power_bloc_religion_trade_route_competitiveness_mult = 0.5
	}
	
	member_modifier = {
		# Modifiers from previous level(s)		
		country_subject_income_transfer_heathen_mult = 0.5		
	
		# SoL changes less radical/more loyalist for accepted religion pops
		state_radicals_from_sol_change_accepted_religion_mult = -0.25
		state_loyalists_from_sol_change_accepted_religion_mult = 0.25
		
		# New PM for Financial Districts/Manor Houses unlocked via trigger
	}

	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}

### Exploit Members

principle_exploit_members_1 = {
	icon = "gfx/interface/icons/principles_icons/exploitation_of_members.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_1.dds"

	visible = {
		has_dlc_feature = power_bloc_features
	}

	leader_modifier = {
		# Increase leader country authority
		country_authority_mult = 0.2
	}

	non_leader_modifier = {
		# Reduce non-leader authority
		country_authority_mult = -0.2
	}

	power_bloc_modifier = {
		# Reduce Cohesion
		power_bloc_cohesion_add = -5
	}
	
	ai_weight = {
		value = 0
		
		if = {
			limit = {
				exists = power_bloc
			}
			
			add = {
				value = power_bloc.current_cohesion_number
				subtract = 50
				multiply = 4
			}			
		}
		
		if = {
			limit = {
				NOR = {
					has_strategy = ai_strategy_territorial_expansion
					has_strategy = ai_strategy_economic_imperialism
				}
			}
			multiply = 0.5
		}	
	}
}

principle_exploit_members_2 = {
	icon = "gfx/interface/icons/principles_icons/exploitation_of_members.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_2.dds"

	leader_modifier = {
		# Modifiers from previous level(s)		
		country_authority_mult = 0.2
		# Increase leader influence
		country_influence_mult = 0.2
	}
	
	non_leader_modifier = {
		# Modifiers from previous level(s)		
		country_authority_mult = -0.2
		# Reduce non-leader influence
		country_influence_mult = -0.2
	}

	power_bloc_modifier = {
		# Reduce Cohesion
		power_bloc_cohesion_add = -10
	}
	
	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
		
		if = {
			limit = {
				current_cohesion_number < 50
			}
			multiply = 0.0
		}
	}
}

principle_exploit_members_3 = {
	icon = "gfx/interface/icons/principles_icons/exploitation_of_members.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_3.dds"
	
	leader_modifier = {
		# Modifiers from previous level(s)		
		country_authority_mult = 0.2
		# Increase leader influence
		country_influence_mult = 0.2
	}
	
	non_leader_modifier = {
		# Modifiers from previous level(s)		
		country_authority_mult = -0.2
		# Reduce non-leader influence
		country_influence_mult = -0.2
	}

	power_bloc_modifier = {
		power_bloc_cohesion_add = -20
		# Income transfer from members to leader
		power_bloc_income_transfer_to_leader_factor = 0.05
	}

	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
		
		if = {
			limit = {
				current_cohesion_number < 50
			}
			multiply = 0.0
		}
	}
}

### Sacred Civics

principle_sacred_civics_1 = {
	icon = "gfx/interface/icons/principles_icons/sacred_civics.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_1.dds"

	visible = {
		has_dlc_feature = power_bloc_features
	}

	member_modifier = {
		# Higher diplomatic acceptance from countries with same state religion
		# This modifier actually has no effect and is just here to generate a tooltip, the effects are scripted in diplomactic_actions
		country_higher_diplomatic_acceptance_same_religion_bool = yes
	}
	
	ai_weight = {
		value = 200 # Religious PBs should tend towards picking the religious principles
		
		if = {
			limit = {
				ig:ig_devout ?= { is_in_government = yes }
			}	
			add = 100
		}
		
		if = {
			limit = { 
				power_bloc ?= { NOT = { has_identity = identity:identity_religious } } 
				# State Atheist Ideology bloc wants the power to enforce atheism
				NAND = {
					has_law = law_type:law_state_atheism
					power_bloc ?= { has_identity = identity:identity_ideological_union }				
				}
			}
			multiply = 0.25
		}				
	}
}

principle_sacred_civics_2 = {
	icon = "gfx/interface/icons/principles_icons/sacred_civics.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_2.dds"

	member_modifier = {
		# Modifiers from previous level(s)		
		country_higher_diplomatic_acceptance_same_religion_bool = yes
		
		# Lower liberty desire for subjects with the same religion
		# This modifier actually has no effect and is just here to generate a tooltip, the effects are scripted in scripted_values
		country_reduced_liberty_desire_same_religion_bool = yes
	}
	
	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}

principle_sacred_civics_3 = {
	icon = "gfx/interface/icons/principles_icons/sacred_civics.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_3.dds"
	
	member_modifier = {
		# Modifiers from previous level(s)		
		country_higher_diplomatic_acceptance_same_religion_bool = yes
		country_reduced_liberty_desire_same_religion_bool = yes
	}

	leader_modifier = {
		# Allows leader to impose their own law onto member countries in the church_and_state law group
		country_can_impose_same_lawgroup_church_and_state_in_power_bloc_bool = yes
	}

	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}

### Ideological Truth

principle_ideological_truth_1 = {
	icon = "gfx/interface/icons/principles_icons/ideological_truth.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_1.dds"

	visible = {
		has_dlc_feature = power_bloc_features
	}
	
	member_modifier = {
		# Agitators of non-government IGs have lower popularity
		interest_group_in_opposition_agitator_popularity_add = -33
		
		# Reduces IG bolster and suppression costs
		country_bolster_cost_mult = -0.25
		country_suppression_cost_mult = -0.25		
	}
	
	ai_weight = {
		value = 200 # High base weight for ideological union
		
		if = { 
			limit = { 
				has_radical_leftist_government = yes
			}
			add = 100
		}
		
		if = {
			limit = {
				OR = {
					has_strategy = ai_strategy_world_revolution
					has_strategy = ai_strategy_maintain_power_balance
				}
			}
			multiply = 2.0
		}
	}
}

principle_ideological_truth_2 = {
	icon = "gfx/interface/icons/principles_icons/ideological_truth.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_2.dds"

	member_modifier = {
		# Modifiers from previous level(s)		
		interest_group_in_opposition_agitator_popularity_add = -33
		country_bolster_cost_mult = -0.25
		country_suppression_cost_mult = -0.25			
		
		# Reduces ideological coherence penalty for IGs in same party
		country_party_whip_impact_mult = 0.2
	}
	
	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}

principle_ideological_truth_3 = {
	icon = "gfx/interface/icons/principles_icons/ideological_truth.dds"
	background = "gfx/interface/icons/principles_icons/principle_tier_3.dds"
	
	member_modifier = {
		# Modifiers from previous level(s)		
		interest_group_in_opposition_agitator_popularity_add = -33
		country_bolster_cost_mult = -0.25
		country_suppression_cost_mult = -0.25		
		country_party_whip_impact_mult = 0.2
		
		# Members Legitimacy can't fall under 25
		country_legitimacy_min_add = 25		
	}

	ai_weight = {
		value = 1000 # AI prefers upgrading groups it has already picked to unlocking new ones
	}
}

﻿### See power_bloc_principles for the individual effects

principle_group_construction = {
	levels = {
		principle_construction_1
		principle_construction_2
		principle_construction_3
	}
}

principle_group_internal_trade = {
	primary_for_identity = identity_trade_league
	unlocking_identity = identity_trade_league
	
	levels = {
		principle_internal_trade_1
		principle_internal_trade_2
		principle_internal_trade_3
	}
}

principle_group_market_unification = {
	blocking_identity = identity_trade_league
	
	levels = {
		principle_market_unification_1
		principle_market_unification_2
		principle_market_unification_3
	}
}

principle_group_vassalization = {
	primary_for_identity = identity_sovereign_empire

	levels = {
		principle_vassalization_1
		principle_vassalization_2
		principle_vassalization_3
	}
}

principle_group_advanced_research = {
	levels = {
		principle_advanced_research_1
		principle_advanced_research_2
		principle_advanced_research_3
	}
}

principle_group_defensive_cooperation = {
	primary_for_identity = identity_military_treaty_organization
	
	levels = {
		principle_defensive_cooperation_1
		principle_defensive_cooperation_2
		principle_defensive_cooperation_3
	}
}

principle_group_aggressive_coordination = {
	unlocking_identity = identity_military_treaty_organization
	primary_for_identity = identity_military_treaty_organization

	levels = {
		principle_aggressive_coordination_1
		principle_aggressive_coordination_2
		principle_aggressive_coordination_3
	}
}

principle_group_external_trade = {
	primary_for_identity = identity_trade_league
	
	levels = {
		principle_external_trade_1
		principle_external_trade_2
		principle_external_trade_3
	}
}

principle_group_food_standardization = {
	levels = {
		principle_food_standardization_1
		principle_food_standardization_2
		principle_food_standardization_3
	}
}

principle_group_police_coordination = {
	levels = {
		principle_police_coordination_1
		principle_police_coordination_2
		principle_police_coordination_3
	}
}

principle_group_transport = {
	levels = {
		principle_transport_1
		principle_transport_2
		principle_transport_3
	}
}

principle_group_military_industry = {
	levels = {
		principle_military_industry_1
		principle_military_industry_2
		principle_military_industry_3
	}
}

principle_group_colonial_offices = {
	levels = {
		principle_colonial_offices_1
		principle_colonial_offices_2
		principle_colonial_offices_3
	}
}

principle_group_foreign_investment = {
	levels = {
		principle_foreign_investment_1
		principle_foreign_investment_2
		principle_foreign_investment_3
	}
}

principle_group_creative_legislature = {
	primary_for_identity = identity_ideological_union
	
	levels = {
		principle_creative_legislature_1
		principle_creative_legislature_2
		principle_creative_legislature_3
	}
}

principle_group_freedom_of_movement = {
	levels = {
		principle_freedom_of_movement_1
		principle_freedom_of_movement_2
		principle_freedom_of_movement_3
	}
}

principle_group_divine_economics = {
	unlocking_identity = identity_religious
	primary_for_identity = identity_religious

	levels = {
		principle_divine_economics_1
		principle_divine_economics_2
		principle_divine_economics_3
	}
}

principle_group_exploit_members = {
	primary_for_identity = identity_sovereign_empire
	unlocking_identity = identity_sovereign_empire

	levels = {
		principle_exploit_members_1
		principle_exploit_members_2
		principle_exploit_members_3
	}
}

principle_group_sacred_civics = {
	primary_for_identity = identity_religious

	levels = {
		principle_sacred_civics_1
		principle_sacred_civics_2
		principle_sacred_civics_3
	}
}

principle_group_ideological_truth = {
	primary_for_identity = identity_ideological_union
	unlocking_identity = identity_ideological_union

	levels = {
		principle_ideological_truth_1
		principle_ideological_truth_2
		principle_ideological_truth_3
	}
}

