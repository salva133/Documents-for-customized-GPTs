﻿isolated_states = {}
inactive_trade_routes = {}
states_in_turmoil = {}
high_tensions = {}
secession_growing = {}
diplomatic_pact_in_danger = {}
expiring_obligations = {}
can_decrease_subject_autonomy = {}
unproductive_trade_routes = {}
trade_routes_need_convoys = {}
market_goods_shortages = {}
state_goods_shortages = {}
formation_low_organization = {}
formation_low_max_organization = {}
low_market_access_states = {}
insufficient_tax_capacity_states = {}
expensive_government_goods = {}
expensive_military_goods = {}
low_sol_in_state = {}
companies_losing_prosperity = {}
isolated_colony = {}
﻿# script_context = <script context>	# see later for list of valid script contexts
# texture = <path>					# the path is relative to the "game" folder
# valid = <trigger>					# an invalid alert will not be shown
# open_panel = <panel_name>[|<tab>]	# if specified, this panel will open when the alert is clicked. Cannot specify both open_panel and open_popup
									# an optional tab name can be specified after a | character
# open_popup = <popup_name>			# if specified, this popup will open when the alert is clicked. Cannot specify both open_panel and open_popup
# type = alert | important_action | angry_important_action	# if unspecified or "alert", this will be a standard alert. Otherwise, it will be shown inside the important actions alert (angry_important_action alerts are sorted first)
# alert_group = <alert_group_name>	# if specified, multiple alerts in the same group will be grouped in the important actions alert (if they are "important_action"). "important_actions with unspecified alert_group will never be grouped together
#
# ------------------------------------------------------------------------------
# Valid script contexts
# ------------------------------------------------------------------------------
# player_country
# player_diplomatic_play
# player_diplomatic_pact
# player_diplomatic_action
# player_diplomatic_relations
# player_interest_group
# player_invaded_state
# player_market
# player_naval_invasion
# player_involved_market
# player_state
# player_building
# player_market_goods
# player_commander
# player_military_formation
# player_subject
# player_trade_route

### ALERTS
### these need icons, if you create a new alert or move an important action here use texture = "gfx/interface/icons/alert_icons/placeholder.dds"
### and then ask art to make an icon, you can also check the unused folder if anything fits, you can also use ANY icon in the game if it would fit
### but always check with art to verify it is looking good

country_default = {
 	script_context = player_country
	texture = "gfx/interface/icons/alert_icons/bankruptcy.dds"

	valid = {
		in_default = yes
	}

	open_panel = budget|assets
	type = alert
	color = red
}

has_no_research_alert = {
	script_context = player_country
	texture = "gfx/interface/icons/alert_icons/has_no_research.dds"

	valid = {
		NOT = { is_researching_technology = any }
		has_researchable_technology = yes
	}

	open_panel = tech_tree
	type = alert
	color = green
}

can_establish_company = {
	script_context = player_country
	texture = "gfx/interface/icons/alert_icons/can_establish_company.dds"

	valid = {
		can_establish_company = yes
	}

	open_panel = companies|potential_companies
	type = alert
	color = green
}

free_government_reform = {
	script_context = player_country
	texture = "gfx/interface/icons/alert_icons/reform_government.dds"

	valid = {
		has_free_government_reform = yes
	}

	open_panel = politics|interest_groups
	type = alert
	color = green
}

revolution_alert = {
	script_context = player_country
	texture = "gfx/interface/icons/alert_icons/revolution.dds"

	valid = {
		OR = {
			has_revolution = yes
			is_revolutionary = yes
		}
	}

	open_panel = politics|default
	type = alert
	color = red
}

secession_alert = {
	script_context = player_country
	texture = "gfx/interface/icons/alert_icons/secession.dds"

	valid = {
		has_any_secessionists_broken_out = yes
	}

	open_panel = politics
	type = alert
	color = red
}

is_losing_rank_alert = {
	script_context = player_country
	texture = "gfx/interface/icons/alert_icons/is_losing_rank.dds"

	valid = {
		is_losing_power_rank = yes
	}

	open_panel = diplomatic_overview
	type = alert
	color = red
}

has_no_war_goal_alert = {
	script_context = player_diplomatic_play
	texture = "gfx/interface/icons/alert_icons/has_no_war_goal.dds"

	valid = {
		scope:actor = { should_set_wargoal = yes }
	}

	open_panel = diplomatic_play
	type = alert
	color = red
}

vulnerable_front = {
	script_context = player_front
	texture = "gfx/interface/icons/alert_icons/vulnerable_front.dds"

    valid = {
        is_vulnerable_front = scope:actor
    }

	open_panel = front
	type = alert
	color = red
}

naval_invasion = {
	script_context = player_naval_invasion
	texture = "gfx/interface/icons/alert_icons/naval_invasion_alert.dds"

    valid = {
		is_active = yes
		naval_invasion_defender ?= scope:actor
    }

	open_panel = naval_invasion
	type = alert
	color = red
}

stalled_naval_invasion = {
	script_context = player_naval_invasion
	texture = "gfx/interface/icons/alert_icons/naval_invasion_alert.dds"

    valid = {
		is_active = yes
		is_naval_invasion_stalled_due_to_orders = yes
		naval_invasion_attacker ?= scope:actor
    }

	open_panel = naval_invasion
	type = alert
	color = red
}

high_attrition_alert = {
	script_context = player_military_formation
	texture = "gfx/interface/icons/alert_icons/high_attrition.dds"

	valid = { has_high_attrition = yes }

	open_panel = military_formation
	type = alert
	color = red
}

active_peace_deal_alert = {
	script_context = player_war
	texture = "gfx/interface/icons/alert_icons/active_peace_deal.dds"

	valid = {
		war_has_active_peace_deal = yes
	}

	open_panel = war_panel|peace
	type = alert
	color = red
}

legitimacy_level_illegitimate_alert = {
	script_context = player_country
	texture = "gfx/interface/icons/alert_icons/low_legitimacy.dds"
	
	valid = {
		government_legitimacy < 25
	}
	
	open_panel = politics|interest_groups
	type = alert
	color = red
}

market_goods_shortage_alert = { 
	script_context = player_market_goods
	texture = "gfx/interface/icons/alert_icons/goods_shortage.dds"

	valid = {
		market_goods_shortage_ratio > 0.33
		country_has_local_shortage = scope:actor	 
	}

	open_panel = goods_panel
	type = alert
	color = red
}

isolated_state_alert = {
	texture = "gfx/interface/icons/generic_icons/market_isolated.dds"
	script_context = player_state

	valid = {
		is_isolated_from_market = yes
		NOT = { is_under_colonization = yes }
	}

	open_panel = states_panel
	type = alert
	color = red
	alert_group = isolated_states
}

inactive_trade_route_alert = {
	texture = "gfx/interface/icons/alert_icons/supply_low.dds"
	script_context = player_trade_route

	valid = {
		is_trade_route_active = no
	}

	open_panel = market|trade_routes
	type = alert
	color = red
	alert_group = inactive_trade_routes
}

secession_growing_alert = {
	script_context = player_country
	texture = "gfx/interface/icons/alert_icons/secession_growing.dds"

	valid = {
		has_any_secessionists_growing = yes
		has_any_secessionists_broken_out = no
	}

	open_panel = politics|default
	type = alert
	color = red
	alert_group = secession_growing
}

obligation_expiring = {
	texture = "gfx/interface/icons/generic_icons/obligation.dds"
	script_context = player_diplomatic_relations

	valid = {
		player_owed_obligation_days_left > 0
		player_owed_obligation_days_left <= 365
	}

	open_panel = country_panel|diplomacy
	type = alert
	color = yellow
	alert_group = expiring_obligations
}

overlord_can_decrease_subject_autonomy = {
	texture = "gfx/interface/icons/diplomatic_action_icons/da_decrease_autonomy.dds"
	script_context = player_subject

	valid = {
        overlord_can_decrease_subject_autonomy = yes
	}

	open_panel = diplomatic_overview|subjects
    type = important_action
	color = green
	alert_group = can_decrease_subject_autonomy
}

subject_likely_to_increase_autonomy = {
	texture = "gfx/interface/icons/diplomatic_action_icons/da_increase_autonomy.dds"
    script_context = player_subject

    valid = {
        subject_can_increase_autonomy = yes
    }

    open_panel = diplomatic_overview|subjects
    color = yellow
}

subject_can_increase_autonomy = {
	texture = "gfx/interface/icons/diplomatic_action_icons/da_increase_autonomy.dds"
    script_context = player_country

    valid = {
        subject_can_increase_autonomy = yes
    }

    open_panel = diplomatic_overview
    type = important_action
    color = green
}

has_low_liberty_desire = {
	script_context = player_country
    texture = "gfx/interface/icons/diplomatic_action_icons/da_decrease_autonomy.dds"

	valid = {
        can_own_autonomy_be_decreased = yes
	}

	open_panel = diplomatic_overview
	type = alert
	color = red
}

low_organization_active = { # Formation is at front
	texture = "gfx/interface/icons/alert_icons/organization_alert.dds"
	script_context = player_military_formation

	valid = {
		organization <= define:NMilitary|MILITARY_FORMATION_ORGANIZATION_MIN
		is_on_front = yes
	}

	type = alert
	color = red
	open_panel = military_formation
	alert_group = formation_low_organization
}

### ANGRY IMPORTANT ACTIONS

has_decreasing_interests_alert = {
	script_context = player_country
	texture = "gfx/interface/icons/alert_icons/has_decreasing_interests.dds"

	valid = { has_decreasing_interests = yes }

	open_panel = diplomatic_overview
	type = angry_important_action
	color = yellow
}

low_organization_idle = { # Formation is idle
	texture = "gfx/interface/icons/alert_icons/organization_alert.dds"
	script_context = player_military_formation

	valid = {
		organization <= define:NMilitary|MILITARY_FORMATION_ORGANIZATION_MIN
		is_on_front = no
	}

	type = angry_important_action
	color = yellow
	open_panel = military_formation
	alert_group = formation_low_organization
}

insufficient_construction_for_investment = {
	texture = "gfx/interface/icons/alert_icons/wasted_construction.dds"
	script_context = player_country

	valid = {
		has_sufficient_construction_capacity_for_investment = no
		investment_pool_net_income >= 40000
	}

	type = angry_important_action
	color = yellow
	open_panel = construction|default
}

# Hidden by default
#state_in_turmoil_alert = {
#	script_context = player_state
#
#	valid = {
#		turmoil >= define:NPolitics|TURMOIL_STATE_EFFECTS_THRESHOLD
#	}
#
#	open_panel = states_panel
#	type = angry_important_action
#	color = yellow
#	alert_group = states_in_turmoil
#}

# Hidden by default
#high_tension_alert = {
#	script_context = player_diplomatic_relations
#
#	valid = {
#		scope_tension >= 50
#	}
#
#	open_panel = country_panel|diplomacy
#	type = angry_important_action
#	color = yellow
#	alert_group = high_tensions
#}


diplomatic_pact_in_danger = {
	texture = "gfx/interface/icons/lens_toolbar_icons/diplomatic_actions_break.dds"
	script_context = player_diplomatic_pact

	valid = {
		is_diplomatic_pact_in_danger = yes
	}

	open_panel = diplomatic_overview
	type = angry_important_action
	color = yellow
	alert_group = diplomatic_pact_in_danger
}

# Hidden by default
#has_convoys_being_sunk = {
#	script_context = player_country
#
#	valid = {
#		is_at_war = yes
#		has_convoys_being_sunk = yes
#	}
#
#	open_panel = military|navy
#	type = angry_important_action
#	color = yellow
#}

legitimacy_level_unacceptable_alert = {
	texture = "gfx/interface/icons/alert_icons/low_legitimacy.dds"
	script_context = player_country

	valid = {
		government_legitimacy < 50
		government_legitimacy >= 25
	}

	open_panel = politics|interest_groups
	type = angry_important_action
	color = yellow
}

training_rate_low = {
	texture = "gfx/interface/icons/alert_icons/suboptimal_army.dds"
	script_context = player_country

	valid = {
		budget_low_training_rate = yes
	}

	open_panel = budget
	type = angry_important_action
	color = yellow
}

company_losing_prosperity = {
	texture = "gfx/interface/icons/alert_icons/company_losing_prosperity.dds"
	script_context = player_company

	valid = {
		prosperity >= 100
		weekly_prosperity_change < 0
	}

	open_panel = companies
	type = angry_important_action
	color = yellow
	alert_group = companies_losing_prosperity
}

market_goods_shortage = {
	texture = "gfx/interface/icons/alert_icons/goods_shortage.dds"
	script_context = player_market_goods

	valid = {
		market_goods_has_goods_shortage = yes
	}

	open_panel = goods_panel
	type = angry_important_action
	color = yellow
	alert_group = market_goods_shortages
}

state_goods_shortage = {
	texture = "gfx/interface/icons/alert_icons/goods_shortage.dds"
	script_context = player_state_goods

	valid = {
		state_goods_has_local_goods_shortage = yes
	}

	open_panel = states_panel
	type = angry_important_action
	color = yellow
	alert_group = state_goods_shortages
}

isolated_colony_alert = {
	texture = "gfx/interface/icons/generic_icons/market_isolated.dds"
	script_context = player_state

	valid = {
		is_isolated_from_market = yes
		is_under_colonization = yes
	}

	open_panel = states_panel
	type = angry_important_action
	color = red
	alert_group = isolated_colony
}

### IMPORTANT ACTIONS

can_take_decisions = {
	texture = "gfx/interface/icons/event_icons/event_scales.dds"
	script_context = player_country

	valid = {
		has_possible_decisions = yes
	}

	open_panel = journal
	type = important_action
	color = green
}

low_max_organization = {
	texture = "gfx/interface/icons/alert_icons/organization_alert.dds"
	script_context = player_military_formation

	valid = {
		organization > define:NMilitary|MILITARY_FORMATION_ORGANIZATION_MIN
		max_organization < define:NMilitary|MILITARY_FORMATION_ORGANIZATION_MAX
	}

	type = important_action
	color = yellow
	open_panel = military_formation
	alert_group = formation_low_max_organization
}

# Hidden by default
#unhealthy_economy_alert = {
#	script_context = player_country
#
#	valid = {
#		has_healthy_economy = no
#	}
#
#	open_panel = budget|default
#	type = important_action
#	color = green
#}

stockpiling_gold_alert = {
	texture = "gfx/interface/icons/goods_icons/gold.dds"
	script_context = player_country

	valid = {
		gold_reserves > gold_reserves_limit
		weekly_net_fixed_income > 0
	}

	open_panel = budget|default
	type = important_action
	color = yellow
}

# Hidden by default
#legitimacy_level_contested_alert = {
#	script_context = player_country
#
#	valid = {
#		government_legitimacy < 75
#		government_legitimacy >= 50
#	}
#
#	open_panel = politics|interest_groups
#	type = important_action
#	color = green
#}

# Hidden by default
#unused_interests_alert = {
#	script_context = player_country
#
#	valid = {
#		num_declared_interests < max_num_declared_interests
#	}
#
#	open_panel = diplomatic_overview
#	type = important_action
#	color = green
#}

# Hidden by default
#unproductive_trade_route_alert = {
#	script_context = player_trade_route
#
#	valid = {
#		is_trade_route_productive = no
#		is_trade_route_active = yes
#	}
#
#	open_panel = market|trade_routes
#	type = important_action
#	color = green
#	alert_group = unproductive_trade_routes
#}

low_market_access_alert = {
	texture = "gfx/interface/icons/alert_icons/market_over_capacity.dds"
	script_context = player_state

	valid = {
		market_access < 1
		NOT = { is_isolated_from_market = yes}
	}

	open_panel = states_panel
	type = important_action
	color = yellow
	alert_group = low_market_access_states
}

# Hidden by default
#insufficient_tax_capacity_alert = {
#	script_context = player_state
#
#	valid = {
#		tax_capacity < tax_capacity_usage
#		is_incorporated = yes
#	}
#
#	open_panel = states_panel
#	type = important_action
#	color = green
#	alert_group = insufficient_tax_capacity_states
#}

expensive_government_goods_alert = {
	texture = "gfx/interface/icons/alert_icons/expensive_goods.dds"
	script_context = player_market_goods

	valid = {
		market_goods_pricier > 0.25
		is_consumed_by_government_buildings = yes
		market_goods_buy_orders > 0
	}

	open_panel = goods_panel
	type = important_action
	color = yellow
	alert_group = expensive_government_goods
}

expensive_military_goods_alert = {
	texture = "gfx/interface/icons/alert_icons/expensive_goods.dds"
	script_context = player_market_goods

	valid = {
		market_goods_pricier > 0.25
		is_consumed_by_military_buildings = yes
		market_goods_buy_orders > 0
	}

	open_panel = goods_panel
	type = important_action
	color = yellow
	alert_group = expensive_military_goods
}

low_expected_sol_in_state = {
	texture = "gfx/interface/icons/alert_icons/starving.dds"
	script_context = player_state

	valid = {
		population_below_expected_sol >= 0.25
	}

	open_panel = states_panel
	type = important_action
	color = yellow
	alert_group = low_sol_in_state
}

power_struggle_leader = {
	texture = "gfx/interface/main_hud/powerblocs.dds"
	script_context = player_country

	valid = {
		is_power_bloc_leader = yes
		has_power_struggle = yes
	}

	open_panel = power_bloc_panel
	type = alert
	color = red
}

power_struggle_contender = {
	texture = "gfx/interface/main_hud/powerblocs.dds"
	script_context = player_country

	valid = {
		is_power_bloc_leader = no
		has_power_struggle = yes
	}

	open_panel = power_bloc_panel
	type = alert
	color = green
}

power_bloc_invite_available = {
	texture = "gfx/interface/main_hud/powerblocs.dds"
	script_context = player_country

	valid = {
		is_power_bloc_leader = yes      # if you change this line, remember to change invite_to_power_bloc
		power_bloc ?= {
			can_invite_any_country = yes
		}
	}

	open_panel = power_bloc_panel
	type = important_action
	color = green
}

power_bloc_mandates_available = {
	texture = "gfx/interface/icons/generic_icons/mandate.dds"
	script_context = player_country

	valid = {
		is_power_bloc_leader = yes
		power_bloc ?= {
			num_mandates > 0
		}
	}

	open_panel = power_bloc_panel
	type = important_action
	color = green
}

﻿battle_condition_pursuit = {
	icon = "gfx/interface/icons/battle_conditions/battle_condition_pursuit.dds"

	modifier = {
		unit_morale_loss_mult = -1
		battle_combat_width_mult = 10
	}
	
	instant_switch = {
		NOR = { 
			has_battle_condition = battle_condition_panicked_retreat
			has_battle_condition = battle_condition_controlled_retreat
		}	
		current_manpower > {
			value = opposite_battle_side.current_manpower
			multiply = {
				if = {
					limit = {
						opposite_battle_side = {
							has_battle_condition = battle_condition_panicked_retreat
						}
					}
					add = 2
				}
				else_if = {
					limit = {
						opposite_battle_side = {
							has_battle_condition = battle_condition_controlled_retreat
						}
					}
					add = 4
				}
				else = {
					add = 10
				}
			}
		}
	}
	
	weight = 1
}

battle_condition_panicked_retreat = {
	icon = "gfx/interface/icons/battle_conditions/battle_condition_panicked_retreat.dds"

	modifier = {
		unit_offense_mult = -0.5
		unit_defense_mult = -0.5
		unit_morale_damage_mult = -10
		unit_morale_loss_mult = 0.5
		unit_recovery_rate_add = -0.5
	}
	
	instant_switch = {
		NOR = { 
			has_battle_condition = battle_condition_controlled_retreat 
			opposite_battle_side = {
				has_battle_condition = battle_condition_panicked_retreat
			}
		}
		current_manpower < {
			value = starting_manpower
			if = {
				limit = {
					scope:character ?= { experience_level > 5 }
				}
				multiply = 0.1
			}
			else_if = {
				limit = {
					scope:character ?= { experience_level > 4 }
				}
				multiply = 0.2
			}
			else = {
				multiply = 0.3
			}
		}
	}
	
	weight = 1
}

battle_condition_controlled_retreat = {
	icon = "gfx/interface/icons/battle_conditions/battle_condition_controlled_retreat.dds"

	modifier = {
		unit_morale_loss_mult = 2
		unit_morale_damage_mult = -0.75
		unit_recovery_rate_add = 0.25
	}
	
	instant_switch = {
		NOR = {
			has_battle_condition = battle_condition_panicked_retreat 
			opposite_battle_side = {
				OR = {
					has_battle_condition = battle_condition_panicked_retreat
					has_battle_condition = battle_condition_controlled_retreat
				}
			}
		}
		scope:character ?= { 
			experience_level > 5
		}
		current_manpower < {
			value = starting_manpower
			multiply = 0.2
		}
	}
	
	weight = {
		add = 1
		scope:character ?= {
			add = experience_level
			divide = 3
		}
	}
}

battle_condition_dug_in = { #defender only
	icon = "gfx/interface/icons/battle_conditions/battle_condition_dug_in.dds"

	modifier = {
		unit_morale_loss_mult = -0.1
		unit_army_defense_mult = 0.2
	}
	
	possible = {
		scope:is_advancing_side = no
		exists = scope:character
		scope:character = { 
			has_role = general 
		}
		NOT = { has_battle_condition = battle_condition_aggressive_maneuver }
	}


	weight = {
		value = 1
		multiply = {
			value = 1
			scope:character = {
				add = modifier:character_battle_condition_dug_in_mult
			}
			min = 0
		}
		if = {
			limit = {
				has_battle_condition = battle_condition_camouflaged
			}
			add = 2
		}
		if = {
			limit = {
				has_battle_condition = battle_condition_charted_terrain
			}
			add = 2
		}
	}
}

battle_condition_charted_terrain = {
	icon = "gfx/interface/icons/battle_conditions/battle_condition_charted_terrain.dds"

	modifier = {
		unit_kill_rate_add = 0.15
	}

	possible = {
		exists = scope:character
		scope:character = { 
			has_role = general 
		}
		NOT = { has_battle_condition = battle_condition_blunder }
	}
	
	weight = {
		value = 1
		multiply = {
			value = 1
			scope:character = {
				add = modifier:character_battle_condition_charted_terrain_mult
			}
			min = 0
		}
	}
}

battle_condition_rapid_advance = { #attacker only
	icon = "gfx/interface/icons/battle_conditions/battle_condition_rapid_advance.dds"

	modifier = {
		unit_provinces_captured_mult = 0.2
	}

	possible = {
		scope:is_advancing_side = yes
		exists = scope:character
		scope:character = { 
			has_role = general 
		}
	}
	
	weight = {
		value = 1
		if = {
			limit = {
				scope:character = { 
					has_trait = plains_commander 
				}
				province = { has_label = label_flat }
			}
			add = 2
		}
		if = {
			limit = {
				scope:character = { 
					has_trait = forest_commander 
				}
				province = { has_label = label_forested }
			}
			add = 1
		}
		if = {
			limit = {
				scope:character = { 
					has_trait = mountain_commander 
				}
				province = { has_label = label_elevated }
			}
			add = 1
		}
		
		multiply = {
			value = 1
			scope:character = {
				add = modifier:character_battle_condition_rapid_advance_mult
			}
			min = 0
		}
		if = {
			limit = {
			has_battle_condition = battle_condition_charted_terrain
			}
			add = 2
		}
		else_if = {
			limit = {
				has_battle_condition = battle_condition_aggressive_maneuver
			}
			add = 2
		}
	}
}

battle_condition_camouflaged = { #defender only
	icon = "gfx/interface/icons/battle_conditions/battle_condition_camouflaged.dds"

	modifier = {
		unit_army_defense_mult = 0.1
	}

	possible = {
		scope:is_advancing_side = no
		exists = scope:character
		scope:character = { 
			has_role = general 
		}
	}
	
	weight = {
		value = 1
		if = {
			limit = {
				scope:character = {
					has_trait = plains_commander
				}
				province = { has_label = label_flat }
			}
			add = 1
		}
		if = {
			limit = {
				scope:character = {
					has_trait = forest_commander
				}
				province = { has_label = label_forested }
			}
			add = 2
		}
		if = {
			limit = {
				scope:character = {
					has_trait = mountain_commander
				}
				province = { has_label = label_elevated }
			}
			add = 2
		}
		
		multiply = {
			value = 1
			scope:character = {
				add = modifier:character_battle_condition_camouflaged_mult
			}
			min = 0
		}
		if = {
			limit = {
				has_battle_condition = battle_condition_dug_in
			}
			add = 2
		}
	}
}

battle_condition_logistics_secured = { #attacker only
	icon = "gfx/interface/icons/battle_conditions/battle_condition_logistics_secured.dds"

	modifier = {
		unit_morale_loss_mult = -0.2
	}

	possible = {
		scope:is_advancing_side = yes
		exists = scope:character
		scope:character = { 
			has_role = general 
		}
		NOT = { has_battle_condition = battle_condition_broken_supply_line }
	}
	
	weight = {
		value = 1
		multiply = {
			value = 1
			scope:character = {
				add = modifier:character_battle_condition_logistics_secured_mult
			}
			min = 0
		}
		if = {
			limit = {
				has_battle_condition = battle_condition_careful_maneuver
			}
			add = 2
		}
	}
}

battle_condition_mud = {
	icon = "gfx/interface/icons/battle_conditions/battle_condition_mud.dds"

	modifier = {
		unit_offense_mult = -0.2
		unit_defense_mult = -0.1
		unit_morale_loss_mult = 0.1
	}

	possible = {
		exists = scope:character
		scope:character = { 
			has_role = general 
		}
		NOT = { has_battle_condition = battle_condition_dug_in }
	}
	
	weight = {
		value = 0.5
		if = {
			limit = {
				province = { has_terrain = plains }
			}
			add = 1
		}
		if = {
			limit = {
				province = { has_terrain = desert }
			}
			add = 1
		}
		if = {
			limit = {
				province = { has_terrain = river }
			}
			add = 1
		}
		if = {
			limit = {
				province = { has_terrain = hills }
			}
			add = 0.5
		}
		if = {
			limit = {
				province = { has_terrain = wetland }
			}
			add = 2
		}
		if = {
			limit = {
				province = { has_terrain = pasture }
			}
			add = 1
		}
		if = {
			limit = {
				province = { has_terrain = farmlands }
			}
			add = 1
		}
	}
	
	weight = {
		value = 1
		multiply = {
			value = 1
			scope:character = {
				add = modifier:character_battle_condition_mud_mult
			}
			min = 0
		}
	}
}

battle_condition_broken_supply_line = {
	icon = "gfx/interface/icons/battle_conditions/battle_condition_broken_supply_line.dds"

	modifier = {
		unit_morale_loss_mult = 0.25
	}

	possible = {
		exists = scope:character
		scope:character = { 
			has_role = general 
		}
		NOT = { has_battle_condition = battle_condition_logistics_secured }
	}
	
	weight = {
		value = 0.5
		if = {
			limit = {
				province = { has_label = label_elevated }
			}
			add = 1
		}
		if = {
			limit = {
				province = { has_label = label_hazardous }
			}
			add = 1
		}
		if = {
			limit = {
				province = { has_label = label_water }
			}
			add = 2
		}
		
		multiply = {
			value = 1
			scope:character = {
				add = modifier:character_battle_condition_broken_supply_line_mult
			}
			min = 0
		}
	}
}

battle_condition_exhausted = {
	icon = "gfx/interface/icons/battle_conditions/battle_condition_exhausted.dds"

	modifier = {
		unit_morale_loss_mult = 0.15
	}

	possible = {
		exists = scope:character
		scope:character = { 
			has_role = general 
		}
	}
	
	weight = {
		value = 0.5
		if = {
			limit = {
				province = { has_label = label_elevated }
			}
			add = 1
		}
		if = {
			limit = {
				province = { has_label = label_hazardous }
			}
			add = 1
		}
		
		multiply = {
			value = 1
			scope:character = {
				add = modifier:character_battle_condition_exhausted_mult
			}
			min = 0
		}
		if = {
			limit = {
				has_battle_condition = battle_condition_broken_supply_line
			}
			add = 2
		}
		else_if = {
			limit = {
				has_battle_condition = battle_condition_blunder
			}
			add = 2
		}
		else_if = {
			limit = {
				has_battle_condition = battle_condition_surprise_maneuver
			}
			add = 2
		}
		else_if = {
			limit = {
				has_battle_condition = battle_condition_rapid_advance
			}
			add = 2
		}
		else_if = {
			limit = {
				has_battle_condition = battle_condition_mud
			}
			add = 2
		}
	}
}

battle_condition_lost = { #attacker only
	icon = "gfx/interface/icons/battle_conditions/battle_condition_lost.dds"

	modifier = {
		unit_offense_mult = -0.1
		unit_defense_mult = -0.25
		unit_morale_loss_mult = 0.2
	}

	possible = {
		scope:is_advancing_side = yes
		exists = scope:character
		scope:character = { 
			has_role = general 
		}
	}
	
	weight = {
		value = 0.5
		if = {
			limit = {
				province = { has_terrain = forest }
			}
			add = 1
		}
		if = {
			limit = {
				province = { has_terrain = mountain }
			}
			add = 1
		}
		if = {
			limit = {
				province = { has_terrain = jungle }
			}
			add = 2
		}
		if = {
			limit = {
				province = { has_terrain = desert }
			}
			add = 2
		}
		
		multiply = {
			value = 1
			scope:character = {
				add = modifier:character_battle_condition_lost_mult
			}
			min = 0
		}
		if = {
			limit = {
				has_battle_condition = battle_condition_poor_visibility
			}
			add = 2
		}
	}
}

battle_condition_surprise_maneuver = {
	icon = "gfx/interface/icons/battle_conditions/battle_condition_surprise_maneuver.dds"

	modifier = {
		unit_morale_damage_mult = 0.2
	}

	possible = {
		exists = scope:character
		scope:character = { 
			has_role = general 
		}
		NOT = { has_battle_condition = battle_condition_poor_visibility }
	}
	
	weight = {
		value = 1
		
		multiply = {
			value = 1
			scope:character = {
				add = modifier:character_battle_condition_surprise_maneuver_mult
			}
			min = 0
		}
		if = {
			limit = {
				has_battle_condition = battle_condition_dug_in
			}
			add = 2
		}
		else_if = {
			limit = {
				has_battle_condition = battle_condition_charted_terrain
			}
			add = 2
		}
		else_if = {
			limit = {
				has_battle_condition = battle_condition_rapid_advance
			}
			add = 2
		}
		else_if = {
			limit = {
				has_battle_condition = battle_condition_good_visibility
			}
			add = 2
		}
	}
}

battle_condition_aggressive_maneuver = {
	icon = "gfx/interface/icons/battle_conditions/battle_condition_aggressive_maneuver.dds"

	modifier = {
		battle_casualties_mult = 0.2
		unit_morale_damage_mult = 0.25
	}

	possible = {
		exists = scope:character
	}
	
	weight = {
		value = 1
		
		multiply = {
			value = 1
			scope:character = {
				add = modifier:character_battle_condition_aggressive_maneuver_mult
			}
			min = 0
		}
		if = {
			limit = {
				has_battle_condition = battle_condition_logistics_secured
			}
			add = 2
		}
		else_if = {
			limit = {
				has_battle_condition = battle_condition_mud
			}
			add = 2
		}
	}
}

battle_condition_careful_maneuver = {
	icon = "gfx/interface/icons/battle_conditions/battle_condition_careful_maneuver.dds"

	modifier = {
		battle_casualties_mult = -0.1
		unit_morale_loss_mult = -0.1
	}
	
	possible = {
		exists = scope:character
	}
	
	weight = {
		value = 1
		
		multiply = {
			value = 1
			scope:character = {
				add = modifier:character_battle_condition_careful_maneuver_mult
			}
			min = 0
		}
		if = {
			limit = {
				has_battle_condition = battle_condition_mud
			}
			add = 2
		}
	}
}

battle_condition_blunder = {
	icon = "gfx/interface/icons/battle_conditions/battle_condition_blunder.dds"

	modifier = {
		battle_casualties_mult = 0.2
		unit_morale_loss_mult = 0.15
	}

	possible = {
		exists = scope:character
	}

	weight = {
		value = 0.5
		
		multiply = {
			value = 1
			scope:character = {
				add = modifier:character_battle_condition_blunder_mult
			}
			min = 0
		}
		if = {
			limit = {
				has_battle_condition = battle_condition_rapid_advance
			}
			add = 2
		}
	}
}

battle_condition_poor_visibility = {
	icon = "gfx/interface/icons/battle_conditions/battle_condition_poor_visibility.dds"

	modifier = {
		unit_offense_mult = -0.25
		unit_defense_mult = -0.25
	}

	possible = {
		exists = scope:character
		NOT = { has_battle_condition = battle_condition_good_visibility }
	}
	
	weight = {
		value = 0.5
		multiply = {
			value = 1
			scope:character = {
				add = modifier:character_battle_condition_poor_visibility_mult
			}
			min = 0
		}
	}
}

battle_condition_good_visibility = { #defender only
	icon = "gfx/interface/icons/battle_conditions/battle_condition_good_visibility.dds"

	modifier = {
		unit_morale_loss_mult = -0.05
		unit_defense_mult = 0.25
	}

	possible = {
		scope:is_advancing_side = no
		exists = scope:character
		NOT = { has_battle_condition = battle_condition_poor_visibility }
	}
	
	weight = {
		value = 1
		multiply = {
			value = 1
			scope:character = {
				add = modifier:character_battle_condition_good_visibility_mult
			}
			min = 0
		}
	}
}

battle_condition_rough_waters = {
	icon = "gfx/interface/icons/battle_conditions/battle_condition_rough_waters.dds"

	modifier = {
		unit_morale_loss_mult = 0.15
		unit_navy_offense_mult = -0.2
		unit_navy_defense_mult = -0.2
	}

	possible = {
		exists = scope:character
		scope:character = { 
			has_role = admiral 
		}
	}
	
	weight = {
		value = 0.5
		multiply = {
			value = 1
			scope:character = {
				add = modifier:character_battle_condition_rough_waters_mult
			}
			min = 0
		}
	}
}

battle_condition_strong_winds = {
	icon = "gfx/interface/icons/battle_conditions/battle_condition_strong_winds.dds"

	modifier = {
		unit_navy_offense_mult = -0.1
		unit_navy_defense_mult = -0.1
	}

	possible = {
		exists = scope:character
		scope:character = { 
			has_role = admiral 
		}
	}
	
	weight = {
		value = 1
		multiply = {
			value = 1
			scope:character = {
				add = modifier:character_battle_condition_strong_winds_mult
			}
			min = 0
		}
	}
}

battle_condition_death_from_below = {
	icon = "gfx/interface/icons/battle_conditions/battle_condition_death_from_below.dds"

	modifier = {
		unit_kill_rate_add = 0.2
	}

	possible = {
		exists = scope:character
		scope:character = { 
			has_role = admiral 
			commander_military_formation = {
				formation_navy_unit_type_fraction = {  
					target = unit_type:combat_unit_type_submarine
					value >= 0.2  
				}
			}
		}
		NOT = { has_battle_condition = battle_condition_rough_waters }
	}
		
	weight = {
		value = 2
		multiply = {
			value = 1
			scope:character = {
				add = modifier:character_battle_condition_death_from_below_mult
			}
			min = 0
		}
	}
}

battle_condition_ramming_maneuver = {
	icon = "gfx/interface/icons/battle_conditions/battle_condition_ramming_maneuver.dds"

	modifier = {
		unit_morale_loss_mult = 0.25
		battle_casualties_mult = 0.3
		unit_kill_rate_add = 0.4
	}
	possible = {
		exists = scope:character
		scope:character = { 
			has_role = admiral 
		}
	}

	weight = {
		value = 0.5
		multiply = {
			value = 1
			scope:character = {
				add = modifier:character_battle_condition_ramming_maneuver_mult
			}
			min = 0
		}
		if = {
			limit = {
				has_battle_condition = battle_condition_strong_winds
			}
			add = 2
		}
	}
}

﻿# parent_group = parent_group_key		If set, this group is considered a child of the specified group. Default no parent.
# always_possible = yes/no				If yes, building types in this group are always permitted regardless of resources in state. Default no.
# economy_of_scale = yes/no				If yes, any non-subsistence buildings in or underneath this group will get an economy of scale throughput modifier for each level > 1. Default no.
# is_subsistence = yes/no				If yes, buildings of types in this group are considered subsistence buildings that follow special rules. Default no.
# default_building = building_type_key	Specifies the default building type that will be built unless the state specifies a different one. No default.
# lens = lens_key						If specified, determines the lens buildings in this group will be sorted under. No default.
# auto_place_buildings = yes/no
# capped_by_resources = yes/no
# discoverable_resource = yes/no
# depletable_resource = yes/no
# can_use_slaves = yes/no				Default no, setting yes enables slavery for all contained buildings and groups
# land_usage = urban/rural				Which type of state resource the building uses. urban = Urbanization, rural = Arable Land. Default no state resource usage.
#										If unspecified, will return first non-default land usage type found in parent building group tree.
# cash_reserves_max = number			Maximum amount of £ (per level) that buildings in this group can store into their cash reserves. If unspecified or set to 0, it will use the value from the parent group. Default 0
# inheritable_construction =  yes/no	If yes, a construction of this building group will survive a state changing hands or a split state merging
# stateregion_max_level = yes/no		If yes, any building types in this group with the has_max_level property will consider its level restrictions on state-region rather than state level	
# urbanization = number					The amount of urbanization buildings in this group provides per level
# should_auto_expand = trigger			Under which condition buildings in this group should auto-expand if auto-expand is toggled on (trigger on more specific group or building type overrides)
# 										If this trigger has any contents at all, the game will think the building is potentially auto-expandable, so do not write triggers that can never evaluate to true here
# min_hiring_rate = X					Minimum value for how much of the building's max staffing level can be hired in a single week (default NDefines::NEconomy::DEFAULT_MIN_HIRING_RATE)
# max_hiring_rate = X					Maximum value for how much of the building's max staffing level can be hired in a single week (default NDefines::NEconomy::DEFAULT_MAX_HIRING_RATE)
# proportionality_limit = X				How high is the building's tolerance for pop types being out of proportion? default NDefines::NEconomy::EMPLOYMENT_PROPORTIONALITY_LIMIT)
# hires_unemployed_only = yes			If yes, buildings in this group may only hire from the unemployment pool. Default no.
# is_shown_in_outliner = yes			If no, buildingtypes in this group will not show up in the outliner, this is for special stuff like the monuments
# Manufacturing

bg_manufacturing = {
	category = urban

	always_possible = yes
	
	economy_of_scale = yes
	
	cash_reserves_max = 25000
	
	should_auto_expand = { 
		default_auto_expand_rule = yes
	}
	
	economy_of_scale_ai_factor = 2.0
	foreign_investment_ai_factor = 0.25
}

bg_light_industry = {
	parent_group = bg_manufacturing

	lens = light_industry
	
	urbanization = 20
	infrastructure_usage_per_level = 2
}

bg_heavy_industry = {
	parent_group = bg_manufacturing

	lens = heavy_industry
	
	urbanization = 20
	infrastructure_usage_per_level = 3
}

bg_shipyards = {
	parent_group = bg_heavy_industry
	
	urbanization = 20
	infrastructure_usage_per_level = 1
}

bg_military_shipyards = {
	parent_group = bg_heavy_industry
		
	urbanization = 20
	infrastructure_usage_per_level = 2
}

bg_artillery_foundaries = {
	parent_group = bg_light_industry
		
	urbanization = 20
	infrastructure_usage_per_level = 2
}

bg_arms_industries = {
	parent_group = bg_light_industry
		
	urbanization = 20
	infrastructure_usage_per_level = 2
}

bg_munition_plants = {
	parent_group = bg_heavy_industry
		
	urbanization = 20
	infrastructure_usage_per_level = 3
}

# Agriculture

bg_agriculture = {
	category = rural

	land_usage = rural
	
	lens = agriculture
	
	economy_of_scale = yes
	
	can_use_slaves = yes
	
	urbanization = 5
	infrastructure_usage_per_level = 1
	
	should_auto_expand = { 
		default_auto_expand_rule = yes
	}
	
	economy_of_scale_ai_factor = 1.5
	foreign_investment_ai_factor = 0.75
}

bg_rye_farms = {
	parent_group = bg_agriculture
	
	default_building = building_rye_farm
	
	cash_reserves_max = 25000
}

bg_wheat_farms = {
	parent_group = bg_agriculture
	
	default_building = building_wheat_farm
	
	cash_reserves_max = 25000
}

bg_rice_farms = {
	parent_group = bg_agriculture
	
	default_building = building_rice_farm
	
	cash_reserves_max = 25000
}

bg_maize_farms = {
	parent_group = bg_agriculture
	
	default_building = building_maize_farm
	
	cash_reserves_max = 25000
}

bg_millet_farms = {
	parent_group = bg_agriculture
	
	default_building = building_millet_farm
	
	cash_reserves_max = 25000
}


bg_subsistence_agriculture = {
	parent_group = bg_agriculture

	always_possible = yes
	
	auto_place_buildings = yes

	is_subsistence = yes
	
	default_building = building_subsistence_farms
	
	fired_pops_become_radical = no
	
	hires_unemployed_only = yes
	
	ignores_productivity_when_hiring = yes
}

bg_vineyard_plantations = {
	parent_group = bg_agriculture
	
	default_building = building_vineyard_plantation

	cash_reserves_max = 25000
}

# Ranching

bg_ranching = {
	category = rural

	land_usage = rural
	
	lens = agriculture
	
	economy_of_scale = yes
	
	can_use_slaves = yes
	
	urbanization = 5
	infrastructure_usage_per_level = 1
	
	should_auto_expand = { 
		default_auto_expand_rule = yes
	}
	
	economy_of_scale_ai_factor = 1.5
	foreign_investment_ai_factor = 0.75
}

bg_livestock_ranches = {
	parent_group = bg_ranching
	
	default_building = building_livestock_ranch
	
	cash_reserves_max = 25000
}

bg_subsistence_ranching = {
	parent_group = bg_ranching

	always_possible = yes
	
	auto_place_buildings = yes

	is_subsistence = yes
	
	default_building = building_subsistence_farms
	
	fired_pops_become_radical = no
	
	hires_unemployed_only = yes
}


# Plantations

bg_plantations = {
	category = rural

	land_usage = rural
	
	economy_of_scale = yes
	
	lens = plantation
	
	can_use_slaves = yes
	cash_reserves_max = 25000
	
	urbanization = 5
	infrastructure_usage_per_level = 1
	
	should_auto_expand = { 
		default_auto_expand_rule = yes
	}
	
	economy_of_scale_ai_factor = 1.5
	foreign_investment_ai_factor = 1.25
}

bg_coffee_plantations = {
	parent_group = bg_plantations
	
	default_building = building_coffee_plantation
}


bg_cotton_plantations = {
	parent_group = bg_plantations
	
	default_building = building_cotton_plantation
}

bg_silk_plantations = {
	parent_group = bg_plantations
	
	default_building = building_silk_plantation
}

bg_dye_plantations = {
	parent_group = bg_plantations
	
	default_building = building_dye_plantation
}

bg_opium_plantations = {
	parent_group = bg_plantations
	
	default_building = building_opium_plantation
}

bg_tea_plantations = {
	parent_group = bg_plantations
	
	default_building = building_tea_plantation
}

bg_tobacco_plantations = {
	parent_group = bg_plantations
	
	default_building = building_tobacco_plantation
}

bg_sugar_plantations = {
	parent_group = bg_plantations
	
	default_building = building_sugar_plantation
}

bg_banana_plantations = {
	parent_group = bg_plantations
	
	default_building = building_banana_plantation
}

# Mining

bg_mining = {
	category = rural

	economy_of_scale = yes
	
	capped_by_resources = yes
	
	lens = mine
	
	cash_reserves_max = 25000
	
	urbanization = 10
	infrastructure_usage_per_level = 2
	
	should_auto_expand = { 
		default_auto_expand_rule = yes
	}
	
	economy_of_scale_ai_factor = 2.0
	foreign_investment_ai_factor = 1.0
}

bg_gold_fields = {
	parent_group = bg_mining

	auto_place_buildings = yes

	discoverable_resource = yes
	
	depletable_resource = yes
	
	always_self_owning = yes
	
	pays_taxes = no

	infrastructure_usage_per_level = 0

	default_building = building_gold_fields
	
	fired_pops_become_radical = no
}

bg_gold_mining = {
	parent_group = bg_mining
	
	default_building = building_gold_mine

	can_use_slaves = yes
}

bg_coal_mining = {
	parent_group = bg_mining
	
	default_building = building_coal_mine

	can_use_slaves = yes
}

bg_iron_mining = {
	parent_group = bg_mining
	
	default_building = building_iron_mine

	can_use_slaves = yes
}

bg_lead_mining = {
	parent_group = bg_mining
	
	default_building = building_lead_mine

	can_use_slaves = yes
}

bg_sulfur_mining = {
	parent_group = bg_mining
	
	default_building = building_sulfur_mine

	can_use_slaves = yes
}

# Logging

bg_logging = {
	category = rural

	capped_by_resources = yes
	
	economy_of_scale = yes
	
	can_use_slaves = yes
	
	default_building = building_logging_camp
	
	lens = forestry	
	
	cash_reserves_max = 25000
	
	urbanization = 5
	infrastructure_usage_per_level = 1
	
	should_auto_expand = { 
		default_auto_expand_rule = yes
	}
	
	economy_of_scale_ai_factor = 1.5
	foreign_investment_ai_factor = 1.0
}

bg_rubber = {
	category = rural 
	
	capped_by_resources = yes
	
	economy_of_scale = yes

	can_use_slaves = yes
	
	discoverable_resource = yes
	
	depletable_resource = no
	
	default_building = building_rubber_plantation
	
	lens = forestry	
	
	cash_reserves_max = 25000 
	
	urbanization = 5
	infrastructure_usage_per_level = 1
	
	should_auto_expand = { 
		default_auto_expand_rule = yes
	}
	
	economy_of_scale_ai_factor = 1.5
	foreign_investment_ai_factor = 1.0
}

# Fishing

bg_whaling = {
	category = rural

	capped_by_resources = yes
	
	economy_of_scale = yes
	
	default_building = building_whaling_station
	
	lens = fishing
	
	cash_reserves_max = 25000
	
	urbanization = 5
	infrastructure_usage_per_level = 1
	
	should_auto_expand = { 
		default_auto_expand_rule = yes
	}
	
	economy_of_scale_ai_factor = 2.0
	foreign_investment_ai_factor = 0.75
}

bg_fishing = {
	category = rural

	capped_by_resources = yes
	
	economy_of_scale = yes
	
	default_building = building_fishing_wharf
	
	lens = fishing
	
	cash_reserves_max = 25000
	
	urbanization = 5
	infrastructure_usage_per_level = 1
	
	should_auto_expand = { 
		default_auto_expand_rule = yes
	}
	
	economy_of_scale_ai_factor = 1.5
	foreign_investment_ai_factor = 0.75
}

# Oil Extraction

bg_oil_extraction = {
	category = rural

	capped_by_resources = yes
	
	economy_of_scale = yes
	
	discoverable_resource = yes
	
	default_building = building_oil_rig
	
	lens = mine
	
	cash_reserves_max = 25000
	
	urbanization = 10
	infrastructure_usage_per_level = 2
	
	should_auto_expand = { 
		default_auto_expand_rule = yes
	}
	
	economy_of_scale_ai_factor = 2.0
	foreign_investment_ai_factor = 1.0
}

# Service

bg_service = {
	category = urban
	
	land_usage = urban

	always_possible = yes	
	
	auto_place_buildings = yes	
	
	always_self_owning = yes
	
	economy_of_scale = yes
	
	default_building = building_urban_center
	
	cash_reserves_max = 25000
}

bg_urban_facilities = {
	category = urban
	
	lens = urban

	always_possible = yes
	
	economy_of_scale = yes
	
	cash_reserves_max = 25000
	
	urbanization = 20
	infrastructure_usage_per_level = 2
	
	should_auto_expand = { 
		default_auto_expand_rule = yes
	}
	
	economy_of_scale_ai_factor = 2.0
	foreign_investment_ai_factor = 0.25
}

bg_arts = {
	parent_group = bg_urban_facilities
	infrastructure_usage_per_level = 0.5
}

bg_power = {
	category = development
	
	lens = infrastructure	

	always_possible = yes
	
	economy_of_scale = yes
	
	cash_reserves_max = 25000

	should_auto_expand = { 
		default_auto_expand_rule = yes
	}
	
	economy_of_scale_ai_factor = 1.5
	foreign_investment_ai_factor = 0.5

	infrastructure_usage_per_level = 2
	
	urbanization = 10
}

# Government

bg_government = {
	category = development

	always_possible = yes
	
	is_government_funded = yes
	
	economy_of_scale = yes
	
	lens = government
	
	urbanization = 20
	infrastructure_usage_per_level = 1
	
	economy_of_scale_ai_factor = 2.0
}

bg_technology = {
	parent_group = bg_government
}

bg_bureaucracy = {
	parent_group = bg_government
}

bg_trade = {
	parent_group = bg_urban_facilities
	
	category = urban
	
	lens = trade

	always_possible = yes	
	
	subsidized = yes
	
	always_self_owning = yes
	
	created_by_trade_routes = yes
	
	auto_place_buildings = yes
	
	min_hiring_rate = 1.0
	max_hiring_rate = 1.0
	
	ignores_productivity_when_hiring = yes
	
	proportionality_limit = 1.0
	
	economy_of_scale = no
	
	default_building = building_trade_center
	
	cash_reserves_max = 5000	
	
	urbanization = 5
	
	infrastructure_usage_per_level = 0.1
	
	fired_pops_become_radical = no
	
	should_auto_expand = {
		always = no
	}
}

# Needed for autonomous investment to track investments separately from other ownership buildings
bg_financial_districts = {
	parent_group = bg_owner_buildings
}

# Needed for autonomous investment to track investments separately from other ownership buildings
bg_manor_houses = {
	parent_group = bg_owner_buildings
	
	infrastructure_usage_per_level = 0.0
}

bg_owner_buildings = {
	parent_group = bg_urban_facilities
	
	min_productivity_to_hire = 10.0

	category = urban

	lens = trade

	always_possible = yes
	
	can_use_slaves = yes

	auto_place_buildings = yes

	owns_other_buildings = yes
	
	always_self_owning = yes

	min_hiring_rate = 1.0
	max_hiring_rate = 1.0

	ignores_productivity_when_hiring = yes

	proportionality_limit = 1.0

	economy_of_scale = no

	default_building = building_financial_district

	cash_reserves_max = 10000

	urbanization = 0

	infrastructure_usage_per_level = 0.1

	fired_pops_become_radical = no

	should_auto_expand = {
		always = no
	}
}

# Infrastructure

bg_infrastructure = {
	category = development

	always_possible = yes
	
	lens = infrastructure
	
	stateregion_max_level = yes
	
	economy_of_scale_ai_factor = 1.5
	foreign_investment_ai_factor = 0.75
}

bg_public_infrastructure = {
	parent_group = bg_infrastructure
	
	is_government_funded = yes
	
	urbanization = 5
}

bg_construction = {
	parent_group = bg_public_infrastructure

	infrastructure_usage_per_level = 2

	lens = government

	is_government_funded = yes
	
	can_use_slaves = yes
	
	urbanization = 5
	
	economy_of_scale_ai_factor = 5.0
}

bg_private_infrastructure = {
	parent_group = bg_infrastructure
	
	is_government_funded = no
	subsidized = yes
	
	cash_reserves_max = 25000
	
	urbanization = 5
}

bg_canals = {
	parent_group = bg_infrastructure
	lens = special
	inheritable_construction = yes
	
	urbanization = 100
}

bg_monuments = {
	parent_group = bg_government
	lens = special
	inheritable_construction = yes
	economy_of_scale = no
}

# Military

bg_military = {
	category = development

	always_possible = yes
	
	is_military = yes
	
	is_government_funded = yes

	infrastructure_usage_per_level = 0.2
	
	lens = military
	
	urbanization = 2
}

bg_army = {
	parent_group = bg_military
}

bg_conscription = {
	parent_group = bg_army
	urbanization = 0
	
	fired_pops_become_radical = no
}

bg_navy = {
	parent_group = bg_military
}

bg_skyscraper = {
	parent_group = bg_government
	economy_of_scale = no
}

bg_monuments_hidden = {
	always_possible = yes
	is_shown_in_outliner = no
}

﻿wealth_1 = {
	political_strength = 0.03
	goods = {
		popneed_simple_clothing = 23
		popneed_basic_food = 90
		popneed_heating = 15
		popneed_intoxicants = 23
	}
}
wealth_2 = {
	political_strength = 0.04
	goods = {
		popneed_simple_clothing = 27
		popneed_basic_food = 94
		popneed_heating = 17
		popneed_intoxicants = 27
	}
}
wealth_3 = {
	political_strength = 0.05
	goods = {
		popneed_simple_clothing = 33
		popneed_basic_food = 98
		popneed_heating = 19
		popneed_intoxicants = 31
	}
}
wealth_4 = {
	political_strength = 0.1
	goods = {
		popneed_simple_clothing = 37
		popneed_basic_food = 105
		popneed_heating = 21
		popneed_intoxicants = 37
	}
}
wealth_5 = {
	political_strength = 0.15
	goods = {
		popneed_simple_clothing = 39
		popneed_crude_items = 13
		popneed_basic_food = 106
		popneed_heating = 22
		popneed_intoxicants = 41
	}
}
wealth_6 = {
	political_strength = 0.25
	goods = {
		popneed_simple_clothing = 42
		popneed_crude_items = 19
		popneed_basic_food = 110
		popneed_heating = 23
		popneed_intoxicants = 47
	}
}
wealth_7 = {
	political_strength = 0.35
	goods = {
		popneed_simple_clothing = 43
		popneed_crude_items = 26
		popneed_basic_food = 118
		popneed_heating = 26
		popneed_intoxicants = 52
	}
}
wealth_8 = {
	political_strength = 0.45
	goods = {
		popneed_simple_clothing = 43
		popneed_crude_items = 39
		popneed_basic_food = 121
		popneed_heating = 27
		popneed_intoxicants = 60
	}
}
wealth_9 = {
	political_strength = 0.6
	goods = {
		popneed_simple_clothing = 43
		popneed_crude_items = 48
		popneed_basic_food = 132
		popneed_heating = 29
		popneed_intoxicants = 62
	}
}
wealth_10 = {
	political_strength = 0.75
	goods = {
		popneed_simple_clothing = 41
		popneed_crude_items = 45
		popneed_basic_food = 137
		popneed_heating = 26
		popneed_household_items = 7
		popneed_standard_clothing = 7
		popneed_services = 24
		popneed_intoxicants = 65
		popneed_free_movement = 3
	}
}
wealth_11 = {
	political_strength = 0.9
	goods = {
		popneed_simple_clothing = 38
		popneed_crude_items = 41
		popneed_basic_food = 143
		popneed_heating = 26
		popneed_household_items = 19
		popneed_standard_clothing = 19
		popneed_services = 30
		popneed_intoxicants = 68
		popneed_free_movement = 8
	}
}
wealth_12 = {
	political_strength = 1.4
	goods = {
		popneed_simple_clothing = 34
		popneed_crude_items = 26
		popneed_basic_food = 154
		popneed_heating = 26
		popneed_household_items = 34
		popneed_standard_clothing = 30
		popneed_services = 39
		popneed_intoxicants = 73
		popneed_free_movement = 13
	}
}
wealth_13 = {
	political_strength = 1.9
	goods = {
		popneed_simple_clothing = 18
		popneed_crude_items = 18
		popneed_basic_food = 159
		popneed_heating = 26
		popneed_household_items = 55
		popneed_standard_clothing = 64
		popneed_services = 46
		popneed_intoxicants = 73
		popneed_free_movement = 14
	}
}
wealth_14 = {
	political_strength = 2.4
	goods = {
		popneed_simple_clothing = 11
		popneed_crude_items = 11
		popneed_basic_food = 164
		popneed_heating = 26
		popneed_household_items = 74
		popneed_standard_clothing = 85
		popneed_services = 58
		popneed_intoxicants = 74
		popneed_free_movement = 16
	}
}
wealth_15 = {
	political_strength = 4.6
	goods = {
		popneed_basic_food = 166
		popneed_heating = 26
		popneed_household_items = 86
		popneed_standard_clothing = 102
		popneed_services = 64
		popneed_intoxicants = 75
		popneed_luxury_drinks = 21
		popneed_free_movement = 21
		popneed_luxury_items = 11
	}
}
wealth_16 = {
	political_strength = 6.8
	goods = {
		popneed_basic_food = 168
		popneed_heating = 26
		popneed_household_items = 96
		popneed_standard_clothing = 108
		popneed_services = 75
		popneed_intoxicants = 78
		popneed_luxury_drinks = 30
		popneed_free_movement = 24
		popneed_luxury_items = 24
	}
}
wealth_17 = {
	political_strength = 9
	goods = {
		popneed_basic_food = 171
		popneed_heating = 26
		popneed_household_items = 105
		popneed_standard_clothing = 112
		popneed_services = 86
		popneed_intoxicants = 79
		popneed_luxury_drinks = 46
		popneed_free_movement = 26
		popneed_luxury_items = 39
	}
}
wealth_18 = {
	political_strength = 12
	goods = {
		popneed_basic_food = 173
		popneed_heating = 26
		popneed_household_items = 116
		popneed_standard_clothing = 116
		popneed_services = 98
		popneed_intoxicants = 80
		popneed_luxury_drinks = 65
		popneed_free_movement = 29
		popneed_luxury_items = 58
	}
}
wealth_19 = {
	political_strength = 15
	goods = {
		popneed_basic_food = 173
		popneed_heating = 26
		popneed_household_items = 126
		popneed_standard_clothing = 118
		popneed_services = 110
		popneed_intoxicants = 79
		popneed_luxury_drinks = 86
		popneed_free_movement = 39
		popneed_luxury_items = 79
	}
}
wealth_20 = {
	political_strength = 18
	goods = {
		popneed_basic_food = 163
		popneed_heating = 26
		popneed_household_items = 130
		popneed_standard_clothing = 122
		popneed_services = 122
		popneed_intoxicants = 81
		popneed_luxury_drinks = 98
		popneed_free_movement = 41
		popneed_communication = 16
		popneed_luxury_food = 8
		popneed_luxury_items = 98
		popneed_leisure = 16
	}
}
wealth_21 = {
	political_strength = 22
	goods = {
		popneed_basic_food = 161
		popneed_heating = 26
		popneed_household_items = 126
		popneed_standard_clothing = 134
		popneed_services = 134
		popneed_intoxicants = 90
		popneed_luxury_drinks = 117
		popneed_free_movement = 45
		popneed_communication = 18
		popneed_luxury_food = 18
		popneed_luxury_items = 126
		popneed_leisure = 18
	}
}
wealth_22 = {
	political_strength = 26
	goods = {
		popneed_basic_food = 157
		popneed_heating = 26
		popneed_household_items = 127
		popneed_standard_clothing = 137
		popneed_services = 157
		popneed_intoxicants = 98
		popneed_luxury_drinks = 137
		popneed_free_movement = 49
		popneed_communication = 20
		popneed_luxury_food = 29
		popneed_luxury_items = 157
		popneed_leisure = 20
	}
}
wealth_23 = {
	political_strength = 30
	goods = {
		popneed_basic_food = 159
		popneed_heating = 26
		popneed_household_items = 127
		popneed_standard_clothing = 138
		popneed_services = 170
		popneed_intoxicants = 106
		popneed_luxury_drinks = 159
		popneed_free_movement = 53
		popneed_communication = 21
		popneed_luxury_food = 42
		popneed_luxury_items = 191
		popneed_leisure = 32
	}
}
wealth_24 = {
	political_strength = 34
	goods = {
		popneed_basic_food = 162
		popneed_heating = 26
		popneed_household_items = 139
		popneed_standard_clothing = 139
		popneed_services = 188
		popneed_intoxicants = 116
		popneed_luxury_drinks = 173
		popneed_free_movement = 69
		popneed_communication = 23
		popneed_luxury_food = 58
		popneed_luxury_items = 220
		popneed_leisure = 35
	}
}
wealth_25 = {
	political_strength = 39
	goods = {
		popneed_basic_food = 165
		popneed_heating = 26
		popneed_household_items = 152
		popneed_standard_clothing = 161
		popneed_services = 212
		popneed_intoxicants = 127
		popneed_luxury_drinks = 190
		popneed_free_movement = 76
		popneed_communication = 25
		popneed_luxury_food = 76
		popneed_luxury_items = 254
		popneed_leisure = 38
	}
}
wealth_26 = {
	political_strength = 44
	goods = {
		popneed_basic_food = 167
		popneed_heating = 26
		popneed_household_items = 167
		popneed_standard_clothing = 161
		popneed_services = 240
		popneed_intoxicants = 139
		popneed_luxury_drinks = 209
		popneed_free_movement = 84
		popneed_communication = 28
		popneed_luxury_food = 84
		popneed_luxury_items = 292
		popneed_leisure = 56
	}
}
wealth_27 = {
	political_strength = 49
	goods = {
		popneed_basic_food = 154
		popneed_heating = 26
		popneed_household_items = 184
		popneed_standard_clothing = 161
		popneed_services = 276
		popneed_intoxicants = 154
		popneed_luxury_drinks = 230
		popneed_free_movement = 92
		popneed_communication = 31
		popneed_luxury_food = 107
		popneed_luxury_items = 338
		popneed_leisure = 61
	}
}
wealth_28 = {
	political_strength = 54
	goods = {
		popneed_basic_food = 133
		popneed_heating = 26
		popneed_household_items = 199
		popneed_standard_clothing = 161
		popneed_services = 299
		popneed_intoxicants = 166
		popneed_luxury_drinks = 249
		popneed_free_movement = 116
		popneed_communication = 33
		popneed_luxury_food = 149
		popneed_luxury_items = 382
		popneed_leisure = 83
	}
}
wealth_29 = {
	political_strength = 59
	goods = {
		popneed_basic_food = 108
		popneed_heating = 26
		popneed_household_items = 217
		popneed_standard_clothing = 161
		popneed_services = 344
		popneed_intoxicants = 181
		popneed_luxury_drinks = 271
		popneed_free_movement = 127
		popneed_communication = 36
		popneed_luxury_food = 199
		popneed_luxury_items = 434
		popneed_leisure = 90
	}
}
wealth_30 = {
	political_strength = 65
	goods = {
		popneed_heating = 26
		popneed_household_items = 209
		popneed_standard_clothing = 161
		popneed_services = 397
		popneed_intoxicants = 216
		popneed_luxury_drinks = 292
		popneed_free_movement = 167
		popneed_communication = 63
		popneed_luxury_food = 271
		popneed_luxury_items = 522
		popneed_leisure = 104
	}
}
wealth_31 = {
	political_strength = 71
	goods = {
		popneed_heating = 26
		popneed_household_items = 238
		popneed_standard_clothing = 161
		popneed_services = 453
		popneed_intoxicants = 216
		popneed_luxury_drinks = 317
		popneed_free_movement = 181
		popneed_communication = 91
		popneed_luxury_food = 317
		popneed_luxury_items = 589
		popneed_leisure = 113
	}
}
wealth_32 = {
	political_strength = 77
	goods = {
		popneed_heating = 26
		popneed_household_items = 238
		popneed_standard_clothing = 161
		popneed_services = 495
		popneed_intoxicants = 216
		popneed_luxury_drinks = 347
		popneed_free_movement = 223
		popneed_communication = 124
		popneed_luxury_food = 347
		popneed_luxury_items = 669
		popneed_leisure = 124
	}
}
wealth_33 = {
	political_strength = 83
	goods = {
		popneed_heating = 26
		popneed_household_items = 238
		popneed_standard_clothing = 161
		popneed_services = 550
		popneed_intoxicants = 216
		popneed_luxury_drinks = 385
		popneed_free_movement = 247
		popneed_communication = 137
		popneed_luxury_food = 385
		popneed_luxury_items = 769
		popneed_leisure = 137
	}
}
wealth_34 = {
	political_strength = 89
	goods = {
		popneed_heating = 26
		popneed_household_items = 238
		popneed_standard_clothing = 161
		popneed_services = 609
		popneed_intoxicants = 216
		popneed_luxury_drinks = 426
		popneed_free_movement = 274
		popneed_communication = 152
		popneed_luxury_food = 426
		popneed_luxury_items = 883
		popneed_leisure = 152
	}
}
wealth_35 = {
	political_strength = 95
	goods = {
		popneed_heating = 26
		popneed_household_items = 238
		popneed_standard_clothing = 161
		popneed_services = 662
		popneed_intoxicants = 216
		popneed_luxury_drinks = 430
		popneed_free_movement = 331
		popneed_communication = 199
		popneed_luxury_food = 464
		popneed_luxury_items = 993
		popneed_leisure = 199
	}
}
wealth_36 = {
	political_strength = 102
	goods = {
		popneed_heating = 26
		popneed_household_items = 238
		popneed_standard_clothing = 161
		popneed_services = 732
		popneed_intoxicants = 216
		popneed_luxury_drinks = 476
		popneed_free_movement = 366
		popneed_communication = 220
		popneed_luxury_food = 549
		popneed_luxury_items = 1098
		popneed_leisure = 220
	}
}
wealth_37 = {
	political_strength = 109
	goods = {
		popneed_heating = 26
		popneed_household_items = 238
		popneed_standard_clothing = 161
		popneed_services = 815
		popneed_intoxicants = 216
		popneed_luxury_drinks = 530
		popneed_free_movement = 407
		popneed_communication = 244
		popneed_luxury_food = 611
		popneed_luxury_items = 1222
		popneed_leisure = 244
	}
}
wealth_38 = {
	political_strength = 116
	goods = {
		popneed_heating = 26
		popneed_household_items = 238
		popneed_standard_clothing = 161
		popneed_services = 906
		popneed_intoxicants = 216
		popneed_luxury_drinks = 589
		popneed_free_movement = 453
		popneed_communication = 272
		popneed_luxury_food = 680
		popneed_luxury_items = 1359
		popneed_leisure = 272
	}
}
wealth_39 = {
	political_strength = 123
	goods = {
		popneed_heating = 26
		popneed_household_items = 238
		popneed_standard_clothing = 161
		popneed_services = 998
		popneed_intoxicants = 216
		popneed_luxury_drinks = 649
		popneed_free_movement = 499
		popneed_communication = 349
		popneed_luxury_food = 749
		popneed_luxury_items = 1497
		popneed_leisure = 299
	}
}
wealth_40 = {
	political_strength = 130
	goods = {
		popneed_heating = 26
		popneed_household_items = 238
		popneed_services = 1124
		popneed_intoxicants = 216
		popneed_luxury_drinks = 675
		popneed_free_movement = 562
		popneed_communication = 450
		popneed_luxury_food = 843
		popneed_luxury_items = 1687
		popneed_leisure = 394
	}
}
wealth_41 = {
	political_strength = 140
	goods = {
		popneed_heating = 26
		popneed_household_items = 238
		popneed_services = 1256
		popneed_intoxicants = 216
		popneed_luxury_drinks = 754
		popneed_free_movement = 628
		popneed_communication = 565
		popneed_luxury_food = 879
		popneed_luxury_items = 1822
		popneed_leisure = 440
	}
}
wealth_42 = {
	political_strength = 150
	goods = {
		popneed_heating = 26
		popneed_household_items = 238
		popneed_services = 1377
		popneed_intoxicants = 216
		popneed_luxury_drinks = 826
		popneed_free_movement = 689
		popneed_communication = 689
		popneed_luxury_food = 964
		popneed_luxury_items = 1997
		popneed_leisure = 482
	}
}
wealth_43 = {
	political_strength = 160
	goods = {
		popneed_heating = 26
		popneed_household_items = 238
		popneed_services = 1552
		popneed_intoxicants = 216
		popneed_luxury_drinks = 931
		popneed_free_movement = 776
		popneed_communication = 776
		popneed_luxury_food = 1009
		popneed_luxury_items = 2173
		popneed_leisure = 543
	}
}
wealth_44 = {
	political_strength = 170
	goods = {
		popneed_heating = 26
		popneed_household_items = 238
		popneed_services = 1700
		popneed_intoxicants = 216
		popneed_luxury_drinks = 1020
		popneed_free_movement = 850
		popneed_communication = 850
		popneed_luxury_food = 1105
		popneed_luxury_items = 2380
		popneed_leisure = 680
	}
}
wealth_45 = {
	political_strength = 185
	goods = {
		popneed_heating = 26
		popneed_services = 1960
		popneed_intoxicants = 216
		popneed_luxury_drinks = 1078
		popneed_free_movement = 980
		popneed_communication = 980
		popneed_luxury_food = 1274
		popneed_luxury_items = 2646
		popneed_leisure = 784
	}
}
wealth_46 = {
	political_strength = 200
	goods = {
		popneed_heating = 26
		popneed_services = 2139
		popneed_intoxicants = 216
		popneed_luxury_drinks = 1177
		popneed_free_movement = 1070
		popneed_communication = 1070
		popneed_luxury_food = 1391
		popneed_luxury_items = 2888
		popneed_leisure = 963
	}
}
wealth_47 = {
	political_strength = 215
	goods = {
		popneed_heating = 26
		popneed_services = 2358
		popneed_intoxicants = 216
		popneed_luxury_drinks = 1297
		popneed_free_movement = 1179
		popneed_communication = 1179
		popneed_luxury_food = 1533
		popneed_luxury_items = 3065
		popneed_leisure = 1179
	}
}
wealth_48 = {
	political_strength = 230
	goods = {
		popneed_heating = 26
		popneed_services = 2598
		popneed_intoxicants = 216
		popneed_luxury_drinks = 1429
		popneed_free_movement = 1299
		popneed_communication = 1299
		popneed_luxury_food = 1689
		popneed_luxury_items = 3378
		popneed_leisure = 1299
	}
}
wealth_49 = {
	political_strength = 250
	goods = {
		popneed_heating = 26
		popneed_services = 2891
		popneed_intoxicants = 216
		popneed_luxury_drinks = 1590
		popneed_free_movement = 1446
		popneed_communication = 1446
		popneed_luxury_food = 1879
		popneed_luxury_items = 3614
		popneed_leisure = 1446
	}
}
wealth_50 = {
	political_strength = 275
	goods = {
		popneed_heating = 26
		popneed_services = 3185
		popneed_intoxicants = 216
		popneed_luxury_drinks = 1752
		popneed_free_movement = 1593
		popneed_communication = 1593
		popneed_luxury_food = 2070
		popneed_luxury_items = 3982
		popneed_leisure = 1593
	}
}
wealth_51 = {
	political_strength = 300
	goods = {
		popneed_heating = 26
		popneed_services = 3544
		popneed_intoxicants = 216
		popneed_luxury_drinks = 1772
		popneed_free_movement = 1772
		popneed_communication = 1772
		popneed_luxury_food = 2126
		popneed_luxury_items = 4430
		popneed_leisure = 1949
	}
}
wealth_52 = {
	political_strength = 325
	goods = {
		popneed_heating = 26
		popneed_services = 3864
		popneed_intoxicants = 216
		popneed_luxury_drinks = 1932
		popneed_free_movement = 1932
		popneed_communication = 1932
		popneed_luxury_food = 2319
		popneed_luxury_items = 4830
		popneed_leisure = 2319
	}
}
wealth_53 = {
	political_strength = 350
	goods = {
		popneed_heating = 26
		popneed_services = 4213
		popneed_intoxicants = 216
		popneed_luxury_drinks = 2107
		popneed_free_movement = 2107
		popneed_communication = 2107
		popneed_luxury_food = 2528
		popneed_luxury_items = 5267
		popneed_leisure = 2739
	}
}
wealth_54 = {
	political_strength = 375
	goods = {
		popneed_heating = 26
		popneed_services = 4549
		popneed_intoxicants = 216
		popneed_luxury_drinks = 2275
		popneed_free_movement = 2275
		popneed_communication = 2275
		popneed_luxury_food = 2730
		popneed_luxury_items = 5687
		popneed_leisure = 3412
	}
}
wealth_55 = {
	political_strength = 400
	goods = {
		popneed_heating = 26
		popneed_services = 4759
		popneed_intoxicants = 216
		popneed_luxury_drinks = 2504
		popneed_free_movement = 2504
		popneed_communication = 2504
		popneed_luxury_food = 2755
		popneed_luxury_items = 6261
		popneed_leisure = 4258
	}
}
wealth_56 = {
	political_strength = 425
	goods = {
		popneed_heating = 26
		popneed_services = 5139
		popneed_intoxicants = 216
		popneed_luxury_drinks = 2705
		popneed_free_movement = 2705
		popneed_communication = 2705
		popneed_luxury_food = 2975
		popneed_luxury_items = 6762
		popneed_leisure = 5139
	}
}
wealth_57 = {
	political_strength = 450
	goods = {
		popneed_heating = 26
		popneed_services = 5308
		popneed_intoxicants = 216
		popneed_luxury_drinks = 2949
		popneed_free_movement = 2949
		popneed_communication = 2949
		popneed_luxury_food = 3244
		popneed_luxury_items = 7373
		popneed_leisure = 6193
	}
}
wealth_58 = {
	political_strength = 475
	goods = {
		popneed_heating = 26
		popneed_services = 5735
		popneed_intoxicants = 216
		popneed_luxury_drinks = 3186
		popneed_free_movement = 3186
		popneed_communication = 3186
		popneed_luxury_food = 3505
		popneed_luxury_items = 7965
		popneed_leisure = 7328
	}
}
wealth_59 = {
	political_strength = 500
	goods = {
		popneed_heating = 26
		popneed_services = 5961
		popneed_intoxicants = 216
		popneed_luxury_drinks = 3507
		popneed_free_movement = 3507
		popneed_communication = 3507
		popneed_luxury_food = 3857
		popneed_luxury_items = 8767
		popneed_leisure = 8416
	}
}
wealth_60 = {
	political_strength = 525
	goods = {
		popneed_heating = 26
		popneed_services = 6561
		popneed_intoxicants = 216
		popneed_luxury_drinks = 3859
		popneed_free_movement = 3859
		popneed_communication = 3859
		popneed_luxury_food = 3859
		popneed_luxury_items = 9648
		popneed_leisure = 9648
	}
}
wealth_61 = {
	political_strength = 550
	goods = {
		popneed_heating = 26
		popneed_services = 6860
		popneed_intoxicants = 216
		popneed_luxury_drinks = 4287
		popneed_free_movement = 4287
		popneed_communication = 4287
		popneed_luxury_food = 4287
		popneed_luxury_items = 10718
		popneed_leisure = 10718
	}
}
wealth_62 = {
	political_strength = 575
	goods = {
		popneed_heating = 26
		popneed_services = 7549
		popneed_intoxicants = 216
		popneed_luxury_drinks = 4718
		popneed_free_movement = 4718
		popneed_communication = 4718
		popneed_luxury_food = 4718
		popneed_luxury_items = 11795
		popneed_leisure = 11795
	}
}
wealth_63 = {
	political_strength = 600
	goods = {
		popneed_heating = 26
		popneed_services = 7862
		popneed_intoxicants = 216
		popneed_luxury_drinks = 5241
		popneed_free_movement = 5241
		popneed_communication = 5241
		popneed_luxury_food = 5241
		popneed_luxury_items = 13103
		popneed_leisure = 13103
	}
}
wealth_64 = {
	political_strength = 625
	goods = {
		popneed_heating = 26
		popneed_services = 8651
		popneed_intoxicants = 216
		popneed_luxury_drinks = 5768
		popneed_free_movement = 5768
		popneed_communication = 5768
		popneed_luxury_food = 5768
		popneed_luxury_items = 14419
		popneed_leisure = 14419
	}
}
wealth_65 = {
	political_strength = 650
	goods = {
		popneed_heating = 26
		popneed_services = 9520
		popneed_intoxicants = 216
		popneed_luxury_drinks = 6347
		popneed_free_movement = 6347
		popneed_communication = 6347
		popneed_luxury_food = 6347
		popneed_luxury_items = 15866
		popneed_leisure = 15866
	}
}
wealth_66 = {
	political_strength = 675
	goods = {
		popneed_heating = 26
		popneed_services = 10475
		popneed_intoxicants = 216
		popneed_luxury_drinks = 6983
		popneed_free_movement = 6983
		popneed_communication = 6983
		popneed_luxury_food = 6983
		popneed_luxury_items = 17459
		popneed_leisure = 17459
	}
}
wealth_67 = {
	political_strength = 700
	goods = {
		popneed_heating = 26
		popneed_services = 11526
		popneed_intoxicants = 216
		popneed_luxury_drinks = 7684
		popneed_free_movement = 7684
		popneed_communication = 7684
		popneed_luxury_food = 7684
		popneed_luxury_items = 19210
		popneed_leisure = 19210
	}
}
wealth_68 = {
	political_strength = 725
	goods = {
		popneed_heating = 26
		popneed_services = 12682
		popneed_intoxicants = 216
		popneed_luxury_drinks = 8455
		popneed_free_movement = 8455
		popneed_communication = 8455
		popneed_luxury_food = 8455
		popneed_luxury_items = 21136
		popneed_leisure = 21136
	}
}
wealth_69 = {
	political_strength = 750
	goods = {
		popneed_heating = 26
		popneed_services = 13953
		popneed_intoxicants = 216
		popneed_luxury_drinks = 9302
		popneed_free_movement = 9302
		popneed_communication = 9302
		popneed_luxury_food = 9302
		popneed_luxury_items = 23255
		popneed_leisure = 23255
	}
}
wealth_70 = {
	political_strength = 775
	goods = {
		popneed_heating = 26
		popneed_services = 15352
		popneed_intoxicants = 216
		popneed_luxury_drinks = 10235
		popneed_free_movement = 10235
		popneed_communication = 10235
		popneed_luxury_food = 10235
		popneed_luxury_items = 25586
		popneed_leisure = 25586
	}
}
wealth_71 = {
	political_strength = 800
	goods = {
		popneed_heating = 26
		popneed_services = 16890
		popneed_intoxicants = 216
		popneed_luxury_drinks = 11260
		popneed_free_movement = 11260
		popneed_communication = 11260
		popneed_luxury_food = 11260
		popneed_luxury_items = 28150
		popneed_leisure = 28150
	}
}
wealth_72 = {
	political_strength = 825
	goods = {
		popneed_heating = 26
		popneed_services = 18583
		popneed_intoxicants = 216
		popneed_luxury_drinks = 12388
		popneed_free_movement = 12388
		popneed_communication = 12388
		popneed_luxury_food = 12388
		popneed_luxury_items = 30971
		popneed_leisure = 30971
	}
}
wealth_73 = {
	political_strength = 850
	goods = {
		popneed_heating = 26
		popneed_services = 20444
		popneed_intoxicants = 216
		popneed_luxury_drinks = 13629
		popneed_free_movement = 13629
		popneed_communication = 13629
		popneed_luxury_food = 13629
		popneed_luxury_items = 34074
		popneed_leisure = 34074
	}
}
wealth_74 = {
	political_strength = 875
	goods = {
		popneed_heating = 26
		popneed_services = 22492
		popneed_intoxicants = 216
		popneed_luxury_drinks = 14995
		popneed_free_movement = 14995
		popneed_communication = 14995
		popneed_luxury_food = 14995
		popneed_luxury_items = 37486
		popneed_leisure = 37486
	}
}
wealth_75 = {
	political_strength = 900
	goods = {
		popneed_heating = 26
		popneed_services = 24744
		popneed_intoxicants = 216
		popneed_luxury_drinks = 16496
		popneed_free_movement = 16496
		popneed_communication = 16496
		popneed_luxury_food = 16496
		popneed_luxury_items = 41240
		popneed_leisure = 41240
	}
}
wealth_76 = {
	political_strength = 925
	goods = {
		popneed_heating = 26
		popneed_services = 27222
		popneed_intoxicants = 216
		popneed_luxury_drinks = 18148
		popneed_free_movement = 18148
		popneed_communication = 18148
		popneed_luxury_food = 18148
		popneed_luxury_items = 45370
		popneed_leisure = 45370
	}
}
wealth_77 = {
	political_strength = 950
	goods = {
		popneed_heating = 26
		popneed_services = 29947
		popneed_intoxicants = 216
		popneed_luxury_drinks = 19965
		popneed_free_movement = 19965
		popneed_communication = 19965
		popneed_luxury_food = 19965
		popneed_luxury_items = 49912
		popneed_leisure = 49912
	}
}
wealth_78 = {
	political_strength = 975
	goods = {
		popneed_heating = 26
		popneed_services = 32946
		popneed_intoxicants = 216
		popneed_luxury_drinks = 21964
		popneed_free_movement = 21964
		popneed_communication = 21964
		popneed_luxury_food = 21964
		popneed_luxury_items = 54909
		popneed_leisure = 54909
	}
}
wealth_79 = {
	political_strength = 1000
	goods = {
		popneed_heating = 26
		popneed_services = 36243
		popneed_intoxicants = 216
		popneed_luxury_drinks = 24162
		popneed_free_movement = 24162
		popneed_communication = 24162
		popneed_luxury_food = 24162
		popneed_luxury_items = 60406
		popneed_leisure = 60406
	}
}
wealth_80 = {
	political_strength = 1025
	goods = {
		popneed_heating = 26
		popneed_services = 39871
		popneed_intoxicants = 216
		popneed_luxury_drinks = 26581
		popneed_free_movement = 26581
		popneed_communication = 26581
		popneed_luxury_food = 26581
		popneed_luxury_items = 66452
		popneed_leisure = 66452
	}
}
wealth_81 = {
	political_strength = 1050
	goods = {
		popneed_heating = 26
		popneed_services = 43861
		popneed_intoxicants = 216
		popneed_luxury_drinks = 29241
		popneed_free_movement = 29241
		popneed_communication = 29241
		popneed_luxury_food = 29241
		popneed_luxury_items = 73102
		popneed_leisure = 73102
	}
}
wealth_82 = {
	political_strength = 1075
	goods = {
		popneed_heating = 26
		popneed_services = 48251
		popneed_intoxicants = 216
		popneed_luxury_drinks = 32167
		popneed_free_movement = 32167
		popneed_communication = 32167
		popneed_luxury_food = 32167
		popneed_luxury_items = 80418
		popneed_leisure = 80418
	}
}
wealth_83 = {
	political_strength = 1100
	goods = {
		popneed_heating = 26
		popneed_services = 53079
		popneed_intoxicants = 216
		popneed_luxury_drinks = 35386
		popneed_free_movement = 35386
		popneed_communication = 35386
		popneed_luxury_food = 35386
		popneed_luxury_items = 88465
		popneed_leisure = 88465
	}
}
wealth_84 = {
	political_strength = 1125
	goods = {
		popneed_heating = 26
		popneed_services = 58390
		popneed_intoxicants = 216
		popneed_luxury_drinks = 38927
		popneed_free_movement = 38927
		popneed_communication = 38927
		popneed_luxury_food = 38927
		popneed_luxury_items = 97317
		popneed_leisure = 97317
	}
}
wealth_85 = {
	political_strength = 1150
	goods = {
		popneed_heating = 26
		popneed_services = 64233
		popneed_intoxicants = 216
		popneed_luxury_drinks = 42822
		popneed_free_movement = 42822
		popneed_communication = 42822
		popneed_luxury_food = 42822
		popneed_luxury_items = 107055
		popneed_leisure = 107055
	}
}
wealth_86 = {
	political_strength = 1175
	goods = {
		popneed_heating = 26
		popneed_services = 70659
		popneed_intoxicants = 216
		popneed_luxury_drinks = 47106
		popneed_free_movement = 47106
		popneed_communication = 47106
		popneed_luxury_food = 47106
		popneed_luxury_items = 117765
		popneed_leisure = 117765
	}
}
wealth_87 = {
	political_strength = 1200
	goods = {
		popneed_heating = 26
		popneed_services = 77728
		popneed_intoxicants = 216
		popneed_luxury_drinks = 51819
		popneed_free_movement = 51819
		popneed_communication = 51819
		popneed_luxury_food = 51819
		popneed_luxury_items = 129547
		popneed_leisure = 129547
	}
}
wealth_88 = {
	political_strength = 1225
	goods = {
		popneed_heating = 26
		popneed_services = 85505
		popneed_intoxicants = 216
		popneed_luxury_drinks = 57003
		popneed_free_movement = 57003
		popneed_communication = 57003
		popneed_luxury_food = 57003
		popneed_luxury_items = 142508
		popneed_leisure = 142508
	}
}
wealth_89 = {
	political_strength = 1250
	goods = {
		popneed_heating = 26
		popneed_services = 94058
		popneed_intoxicants = 216
		popneed_luxury_drinks = 62706
		popneed_free_movement = 62706
		popneed_communication = 62706
		popneed_luxury_food = 62706
		popneed_luxury_items = 156764
		popneed_leisure = 156764
	}
}
wealth_90 = {
	political_strength = 1275
	goods = {
		popneed_heating = 26
		popneed_services = 103468
		popneed_intoxicants = 216
		popneed_luxury_drinks = 68978
		popneed_free_movement = 68978
		popneed_communication = 68978
		popneed_luxury_food = 68978
		popneed_luxury_items = 172446
		popneed_leisure = 172446
	}
}
wealth_91 = {
	political_strength = 1300
	goods = {
		popneed_heating = 26
		popneed_services = 113818
		popneed_intoxicants = 216
		popneed_luxury_drinks = 75878
		popneed_free_movement = 75878
		popneed_communication = 75878
		popneed_luxury_food = 75878
		popneed_luxury_items = 189696
		popneed_leisure = 189696
	}
}
wealth_92 = {
	political_strength = 1325
	goods = {
		popneed_heating = 26
		popneed_services = 125203
		popneed_intoxicants = 216
		popneed_luxury_drinks = 83468
		popneed_free_movement = 83468
		popneed_communication = 83468
		popneed_luxury_food = 83468
		popneed_luxury_items = 208671
		popneed_leisure = 208671
	}
}
wealth_93 = {
	political_strength = 1350
	goods = {
		popneed_heating = 26
		popneed_services = 137726
		popneed_intoxicants = 216
		popneed_luxury_drinks = 91817
		popneed_free_movement = 91817
		popneed_communication = 91817
		popneed_luxury_food = 91817
		popneed_luxury_items = 229544
		popneed_leisure = 229544
	}
}
wealth_94 = {
	political_strength = 1375
	goods = {
		popneed_heating = 26
		popneed_services = 151502
		popneed_intoxicants = 216
		popneed_luxury_drinks = 101001
		popneed_free_movement = 101001
		popneed_communication = 101001
		popneed_luxury_food = 101001
		popneed_luxury_items = 252503
		popneed_leisure = 252503
	}
}
wealth_95 = {
	political_strength = 1400
	goods = {
		popneed_heating = 26
		popneed_services = 166656
		popneed_intoxicants = 216
		popneed_luxury_drinks = 111104
		popneed_free_movement = 111104
		popneed_communication = 111104
		popneed_luxury_food = 111104
		popneed_luxury_items = 277759
		popneed_leisure = 277759
	}
}
wealth_96 = {
	political_strength = 1425
	goods = {
		popneed_heating = 26
		popneed_services = 183324
		popneed_intoxicants = 216
		popneed_luxury_drinks = 122216
		popneed_free_movement = 122216
		popneed_communication = 122216
		popneed_luxury_food = 122216
		popneed_luxury_items = 305541
		popneed_leisure = 305541
	}
}
wealth_97 = {
	political_strength = 1450
	goods = {
		popneed_heating = 26
		popneed_services = 201660
		popneed_intoxicants = 216
		popneed_luxury_drinks = 134440
		popneed_free_movement = 134440
		popneed_communication = 134440
		popneed_luxury_food = 134440
		popneed_luxury_items = 336100
		popneed_leisure = 336100
	}
}
wealth_98 = {
	political_strength = 1475
	goods = {
		popneed_heating = 26
		popneed_services = 221829
		popneed_intoxicants = 216
		popneed_luxury_drinks = 147886
		popneed_free_movement = 147886
		popneed_communication = 147886
		popneed_luxury_food = 147886
		popneed_luxury_items = 369716
		popneed_leisure = 369716
	}
}
wealth_99 = {
	political_strength = 1500
	goods = {
		popneed_heating = 26
		popneed_services = 244016
		popneed_intoxicants = 216
		popneed_luxury_drinks = 162677
		popneed_free_movement = 162677
		popneed_communication = 162677
		popneed_luxury_food = 162677
		popneed_luxury_items = 406693
		popneed_leisure = 406693
	}
}


﻿canal_suez = {
	texture = "gfx/interface/icons/building_icons/suez_canal.dds"

	possible = {
		has_technology_researched = colonization
		owns_treaty_port_in = STATE_SINAI
		custom_tooltip = {
			text = suez_survey_complete_tooltip
			has_variable = suez_survey_complete
		}
		
	}

	state_region = STATE_SINAI
}

canal_panama = {
	texture = "gfx/interface/icons/building_icons/panama_canal.dds"

	possible = {
		has_technology_researched = civilizing_mission
		owns_treaty_port_in = STATE_PANAMA

		custom_tooltip = {
			text = panama_survey_complete_tooltip
			has_variable = panama_survey_complete
		}
	}

	state_region = STATE_PANAMA
}

﻿sgcat_tutorial = {
	is_exclusive = no
	is_repeatable = no
}

sgcat_economic_dominance = {
	is_exclusive = no
	is_repeatable = no
}

sgcat_egalitarian_society = {
	is_exclusive = no
	is_repeatable = no
}

sgcat_hegemon = {
	is_exclusive = no
	is_repeatable = no
}

sgcat_great_game = {
	is_exclusive = no
	is_repeatable = no
}
﻿cohesion_level_very_low = {
	threshold = 0
	
	modifier = {
		power_bloc_leverage_generation_mult = -0.5
		power_bloc_mandate_progress_mult = -0.6
	}
	
	background_texture = "gfx/interface/icons/diplomatic_action_icons/diplomatic_action_backgrounds/subject_liberty_low.dds"
	
	# AI implications for Power Blocs: very low unification support for countries in a power bloc with very low cohesion
	ai_unification_support_score = -20
}

cohesion_level_low = {
	threshold = 20
	
	modifier = {
		power_bloc_leverage_generation_mult = -0.2
		power_bloc_mandate_progress_mult = -0.3
	}
	
	background_texture = "gfx/interface/icons/diplomatic_action_icons/diplomatic_action_backgrounds/subject_liberty_low.dds"
	
	# AI implications for Power Blocs: low unification support for countries in a power bloc with low cohesion
	ai_unification_support_score = -10
}

cohesion_level_moderate = {
	threshold = 40

	modifier = {
		power_bloc_mandate_progress_mult = -0.1
	}
	
	background_texture = "gfx/interface/icons/diplomatic_action_icons/diplomatic_action_backgrounds/subject_liberty_moderate.dds"
}

cohesion_level_high = {
	threshold = 60

	modifier = {
		power_bloc_leverage_generation_mult = 0.1
		power_bloc_mandate_progress_mult = 0.10
	}
	
	background_texture = "gfx/interface/icons/diplomatic_action_icons/diplomatic_action_backgrounds/subject_liberty_moderate.dds"
	
	# AI implications for Power Blocs: high unification support for countries in a power bloc with high cohesion
	ai_unification_support_score = 10
}

cohesion_level_very_high = {
	threshold = 80
	
	modifier = {
		power_bloc_leverage_generation_mult = 0.20
		power_bloc_mandate_progress_mult = 0.25
	}
	
    background_texture = "gfx/interface/icons/diplomatic_action_icons/diplomatic_action_backgrounds/subject_liberty_high.dds"
	
	# AI implications for Power Blocs: very high unification support for countries in a power bloc with very high cohesion
	ai_unification_support_score = 20
}
﻿combat_unit_regular = {
	max_manpower = 1000
	type = army
	icon = "gfx/interface/icons/generic_icons/battalions.dds"

	# List images in priority order, since only the first matching image will be chosen
	combat_unit_image = {
		trigger = {
			building = {
				has_active_production_method = pm_mobile_warfare_tactics
			}	
		}
		texture = "gfx/unit_illustrations/unused/unit_battalion_mechanized_infantry.dds"
	}
	
	combat_unit_image = {
		trigger = {
			building = {
				OR = {
					has_active_production_method = pm_training_streamlining
					has_active_production_method = pm_nco_incorporation
				}
			}
		}
		texture = "gfx/unit_illustrations/unused/unit_battalion_trench_infantry.dds"
	}
	
	combat_unit_image = {
		trigger = {
			AND = {
				building = {
					OR = {
						has_active_production_method = pm_general_training
						has_active_production_method = pm_advanced_tactics_training
					}
				}	
				culture = {
					has_culture_graphics = african
				}
			}
		}
		texture = "gfx/unit_illustrations/unused/unit_battalion_line_infantry_african.dds"
	}

	combat_unit_image = {
		trigger = {
			AND = {
				building = {
					OR = {
						has_active_production_method = pm_general_training
						has_active_production_method = pm_advanced_tactics_training
					}
				}	
				culture = {
					has_culture_graphics = east_asian
				}
			}
		}
		texture = "gfx/unit_illustrations/unused/unit_battalion_line_infantry_asian.dds"
	}
	
	combat_unit_image = {
		trigger = {
			AND = {
				building = {
					OR = {
						has_active_production_method = pm_general_training
						has_active_production_method = pm_advanced_tactics_training
					}
				}	
				culture = {
					has_culture_graphics = european
				}
			}
		}
		texture = "gfx/unit_illustrations/unused/unit_battalion_line_infantry_european.dds"
	}
	
	combat_unit_image = {
		trigger = {
			AND = {
				building = {
					OR = {
						has_active_production_method = pm_general_training
						has_active_production_method = pm_advanced_tactics_training
					}
				}	
				culture = {
					has_culture_graphics = arabic
				}
			}
		}
		texture = "gfx/unit_illustrations/unused/unit_battalion_line_infantry_mideast_indian.dds"
	}
	
	combat_unit_image = {
		trigger = {
			building = {
				OR = {
					has_active_production_method = pm_general_training
					has_active_production_method = pm_advanced_tactics_training
				}
			}
		}
		texture = "gfx/unit_illustrations/unused/unit_battalion_line_infantry_generic.dds"
	}
	
	combat_unit_image = {
		trigger = {
			AND = {
				building = {
					has_active_production_method = pm_no_organization
				}
				culture = {
					has_culture_graphics = african
				}
			}
		}
		texture = "gfx/unit_illustrations/unused/unit_battalion_irregular_infantry_african.dds"
	}

	combat_unit_image = {
		trigger = {
			AND = {
				building = {
					has_active_production_method = pm_no_organization
				}
				culture = {
					has_culture_graphics = east_asian
				}
			}
		}
		texture = "gfx/unit_illustrations/unused/unit_battalion_irregular_infantry_asian.dds"
	}

	combat_unit_image = {
		trigger = {
			AND = {
				building = {
					has_active_production_method = pm_no_organization
				}				
				culture = {
					has_culture_graphics = arabic
				}
			}
		}
		texture = "gfx/unit_illustrations/unused/unit_battalion_irregular_infantry_mideast_indian.dds"
	}
	
	combat_unit_image = {
		trigger = {
			AND = {
				building = {
					has_active_production_method = pm_no_organization
				}	
				culture = {
					has_culture_graphics = european
				}
			}
		}
		texture = "gfx/unit_illustrations/unused/unit_battalion_irregular_infantry_european.dds"
	}
	
	combat_unit_image = {
		trigger = {
			building = {
				has_active_production_method = pm_no_organization
			}
		}
		texture = "gfx/unit_illustrations/unused/unit_battalion_line_infantry_generic.dds"
	}
	
	# Fallback if nothing else matches
	combat_unit_image = {
		trigger = { always = yes }
		texture = "gfx/unit_illustrations/unused/unit_battalion_line_infantry_generic.dds"
	}
}

combat_unit_conscript = {
	max_manpower = 1000
	type = army
	icon = "gfx/interface/icons/generic_icons/battalions.dds"
	
	
	# List images in priority order, since only the first matching image will be chosen
	combat_unit_image = {
		trigger = {
			building = {
				has_active_production_method = pm_mobile_warfare_tactics_conscription
			}	
		}
		texture = "gfx/unit_illustrations/unused/unit_battalion_mechanized_infantry.dds"
	}
	
	combat_unit_image = {
		trigger = {
			building = {
				OR = {
					has_active_production_method = pm_training_streamlining_conscription
					has_active_production_method = pm_nco_incorporation_conscription
				}
			}	
		}
		texture = "gfx/unit_illustrations/unused/unit_battalion_trench_infantry.dds"
	}
	
	combat_unit_image = {
		trigger = {
			AND = {
				building = {
					OR = {
						has_active_production_method = pm_general_training_conscription
						has_active_production_method = pm_advanced_tactics_training_conscription
					}
				}	
				culture = {
					has_culture_graphics = african
				}
			}
		}
		texture = "gfx/unit_illustrations/unused/unit_battalion_line_infantry_african.dds"
	}

	combat_unit_image = {
		trigger = {
			AND = {
				building = {
					OR = {
						has_active_production_method = pm_general_training_conscription
						has_active_production_method = pm_advanced_tactics_training_conscription
					}
				}
				
				culture = {
					has_culture_graphics = east_asian
				}
			}
		}
		texture = "gfx/unit_illustrations/unused/unit_battalion_line_infantry_asian.dds"
	}
	
	combat_unit_image = {
		trigger = {
			AND = {
				building = {
					OR = {
						has_active_production_method = pm_general_training_conscription
						has_active_production_method = pm_advanced_tactics_training_conscription
					}
				}
				culture = {
					has_culture_graphics = european
				}
			}
		}
		texture = "gfx/unit_illustrations/unused/unit_battalion_line_infantry_european.dds"
	}
	
	combat_unit_image = {
		trigger = {
			AND = {
				building = {
					OR = {
						has_active_production_method = pm_general_training_conscription
						has_active_production_method = pm_advanced_tactics_training_conscription
					}
				}
				culture = {
					has_culture_graphics = arabic
				}
			}
		}
		texture = "gfx/unit_illustrations/unused/unit_battalion_line_infantry_mideast_indian.dds"
	}
	
	combat_unit_image = {
		trigger = {
			building = {
				OR = {
					has_active_production_method = pm_general_training_conscription
					has_active_production_method = pm_advanced_tactics_training_conscription
				}
			}	
		}
		texture = "gfx/unit_illustrations/unused/unit_battalion_line_infantry_generic.dds"
	}
	
	combat_unit_image = {
		trigger = {
			AND = {
				building = {
					has_active_production_method = pm_no_organization_conscription
				}
				culture = {
					has_culture_graphics = african
				}
			}
		}
		texture = "gfx/unit_illustrations/unused/unit_battalion_irregular_infantry_african.dds"
	}

	combat_unit_image = {
		trigger = {
			AND = {
				building = {
					has_active_production_method = pm_no_organization_conscription
				}	
				culture = {
					has_culture_graphics = east_asian
				}
			}
		}
		texture = "gfx/unit_illustrations/unused/unit_battalion_irregular_infantry_asian.dds"
	}
	
	combat_unit_image = {
		trigger = {
			AND = {
				building = {
					has_active_production_method = pm_no_organization_conscription
				}
				culture = {
					has_culture_graphics = european
				}
			}
		}
		texture = "gfx/unit_illustrations/unused/unit_battalion_irregular_infantry_european.dds"
	}
	
	combat_unit_image = {
		trigger = {
			AND = {
				building = {
					has_active_production_method = pm_no_organization_conscription
				}
				culture = {
					has_culture_graphics = arabic
				}
			}
		}
		texture = "gfx/unit_illustrations/unused/unit_battalion_irregular_infantry_mideast_indian.dds"
	}
	
	combat_unit_image = {
		trigger = {
			building = {
				has_active_production_method = pm_no_organization_conscription
			}
		}
		texture = "gfx/unit_illustrations/unused/unit_battalion_line_infantry_generic.dds"
	}
	
	# Fallback if nothing else matches
	combat_unit_image = {
		trigger = { always = yes }
		texture = "gfx/unit_illustrations/unused/unit_battalion_line_infantry_generic.dds"
	}
}

combat_unit_flotilla = {
	max_manpower = 1000
	type = navy
    	icon = "gfx/interface/icons/generic_icons/flotillas.dds"

	combat_unit_image = {
		trigger = { always = yes } 
		texture = "gfx/unit_illustrations/unused/unit_flotilla_battleship.dds"
	}
}

﻿no_veterancy = {
	level = 0
	icon = "gfx/interface/icons/military_icons/unit_veterancy/no_veterancy.dds"
}

veterancy1 = {
	level = 1
	icon = "gfx/interface/icons/military_icons/unit_veterancy/veterancy1.dds"
	needed_experience = 100
	unit_modifier = {
        unit_offense_mult = 0.05
        unit_defense_mult = 0.05
	}
}

veterancy2 = {
	level = 2
	icon = "gfx/interface/icons/military_icons/unit_veterancy/veterancy2.dds"
	needed_experience = 100
	unit_modifier = {
        unit_offense_mult = 0.1
        unit_defense_mult = 0.1
	}
}

veterancy3 = {
	level = 3
	icon = "gfx/interface/icons/military_icons/unit_veterancy/veterancy3.dds"
	needed_experience = 200
	unit_modifier = {
        unit_offense_mult = 0.15
        unit_defense_mult = 0.15
	}
}

veterancy4 = {
	level = 4
	icon = "gfx/interface/icons/military_icons/unit_veterancy/veterancy4.dds"
	needed_experience = 400
	unit_modifier = {
        unit_offense_mult = 0.25
        unit_defense_mult = 0.25
		unit_morale_damage_mult = 0.5
	}
}

﻿african = {}

east_asian = {}

south_asian = {}

european = {}

arabic = {}

decentralised_americas = {}
﻿# texture = filename								The icon that will show up in the Lens and on the map when this Focus is deployed
# modifier											The effects this Decree has on its state
# cost												The cost in AUT to set this Decree on a state (scales with Power Rank)
# unlocking_technologies							A list of technologies, at least one of which must be known to the country to use this Focus
# unlocking_laws									A list of laws, at least one which must be active in the country to use this Focus. If the country switches away from all unlocking laws the Focus will be removed
# valid												A trigger in state context that determines if the Decree is permitted or not; should invalidate the Decree on a weekly basis if found invalid 
# ai_weight											Scripted value which determines the chance of getting the Decree by AI

decree_road_maintenance = {
	texture = "gfx/interface/icons/decree/decree_road_maintenance.dds"
	modifier = {
		state_infrastructure_from_population_add = 1
		state_infrastructure_from_population_max_add = 20
		state_construction_mult = 0.10
	}
	unlocking_technologies = { 
		centralization
	}
	cost = 100

	ai_weight = {
		value = 25		
		
		if = {
			limit = { 
				OR = {
					relative_infrastructure < 1 
					AND = {
						has_decree = decree_road_maintenance
						relative_infrastructure < 1.25
					}
				}
			
			}
			add = 100
		}

		if = {
			limit = { 
				OR = {
					relative_infrastructure < 0.5
					AND = {
						has_decree = decree_road_maintenance
						relative_infrastructure < 0.75
					}
				}
			
			}
			add = 100
		}

		if = {
			limit = { 
				OR = {
					relative_infrastructure < 0.25 
					AND = {
						has_decree = decree_road_maintenance
						relative_infrastructure < 0.5
					}
				}
			
			}
			add = 100
		}		
		
		if = {
			limit = { 
				OR = {
					relative_infrastructure >= 1.25
					AND = {
						has_decree = decree_road_maintenance
						relative_infrastructure >= 1.5
					}
				}
			
			}
			multiply = 0
		}			
	}
}

decree_violent_suppression = {
	texture = "gfx/interface/icons/decree/decree_violent_suppression.dds"		
	
	unlocking_technologies = {
		standing_army
	}
	
	valid = {
		owner = { NOT = { has_law = law_type:law_guaranteed_liberties } }
		turmoil >= 0.25	
	}
	modifier = {
		state_turmoil_effects_mult = -0.5
		state_mortality_turmoil_mult = 0.02
	}
	cost = 100
	
	ai_weight = {
		value = 100
		
		if = {
			limit = { 
				turmoil >= 0.5	
			
			}
			add = 100
		}
		if = {
			limit = { 
				turmoil >= 0.75	
			
			}
			add = 100
		}
		if = {
			limit = {
				scope:country = {
					OR = {
						has_strategy = ai_strategy_egalitarian_agenda
						has_strategy = ai_strategy_progressive_agenda
					}
				}
			}
			multiply = 0.5
		}	
	}
}


decree_emergency_relief = {
	texture = "gfx/interface/icons/decree/decree_emergency_relief.dds"
	unlocking_technologies = {
		centralization
	}
	modifier = {
		state_welfare_payments_add = 0.5
	}
	cost = 100
	
	ai_weight = {
		value = 0
		
		if = {
			limit = { 
				average_sol < average_expected_sol
			}
			add = 100
		}
		if = {
			limit = {
				scope:country = {
					OR = {
						has_strategy = ai_strategy_nationalist_agenda
						has_strategy = ai_strategy_reactionary_agenda
					}
				}
			}
			multiply = 0.5
		}	
	}
}

decree_promote_social_mobility = {
	texture = "gfx/interface/icons/decree/decree_promote_social_mobility.dds"
	modifier = {
		state_education_access_add = 0.25
		state_pop_qualifications_mult = 0.25
	}
	cost = 100
	
	ai_weight = {
		value = 0

		if = {
			limit = { 
				literacy_rate < 0.25
			}
			add = 75
		}		
		if = {
			limit = { 
				literacy_rate < 0.5
			}
			add = 75
		}
		if = {
			limit = { 
				literacy_rate < 0.75
			}
			add = 50
		}		
		if = {
			limit = {
				scope:country = {
					OR = {
						has_strategy = ai_strategy_reactionary_agenda
						has_strategy = ai_strategy_conservative_agenda
						has_strategy = ai_strategy_maintain_mandate_of_heaven
					}
				}
			}
			multiply = 0.5
		}
		if = {
			limit = {
				scope:country = {
					OR = {
						has_strategy = ai_strategy_progressive_agenda
						has_strategy = ai_strategy_egalitarian_agenda
					}
				}
			}
			multiply = 1.5
		}			
	}
}

decree_promote_national_values = {
	texture = "gfx/interface/icons/decree/decree_promote_national_values.dds"
	unlocking_technologies = {
		centralization
	}
	valid = {
		OR = {
			has_assimilating_pops = yes
			has_converting_pops = yes
		}	
	}
	modifier = {
		state_assimilation_mult = 1
		state_conversion_mult = 1
	}
	cost = 100
	
	ai_weight = {
		value = 0
		if = {
			limit = {
				scope:country = {
					OR = {
						has_strategy = ai_strategy_reactionary_agenda
						has_strategy = ai_strategy_maintain_mandate_of_heaven
					}
				}
			}
			add = 100
		}
		if = {
			limit = {
				scope:country = {
					has_strategy = ai_strategy_nationalist_agenda
				}
			}
			add = 200
		}		
		if = {
			limit = {
				state_population < 100000
			}
			multiply = 0
		}
		if = {
			limit = {
				state_population < 300000
			}
			multiply = 0.5
		}	
		if = {
			limit = {
				scope:country = {
					OR = {
						has_strategy = ai_strategy_reactionary_agenda
						has_strategy = ai_strategy_conservative_agenda
						has_strategy = ai_strategy_maintain_mandate_of_heaven
					}
				}
			}
			multiply = 0.5
		}
		if = {
			limit = {
				scope:country = {
					OR = {
						has_strategy = ai_strategy_progressive_agenda
						has_strategy = ai_strategy_egalitarian_agenda
					}
				}
			}
			multiply = 1.5
		}		
	}
}

decree_encourage_manufacturing_industry = {
	texture = "gfx/interface/icons/decree/decree_encourage_manufacturing_industry.dds"
	unlocking_technologies = {
		manufacturies
	}	
	valid = {
		NOR = { 
			has_decree = decree_encourage_agricultural_industry
			has_decree = decree_encourage_resource_industry
		}
	}	
	modifier = {
		building_group_bg_manufacturing_throughput_add = 0.2
		building_group_bg_service_throughput_add = 0.2
	}
	cost = 100
	
	ai_weight = {
		value = 0
		if = {
			limit = {
				any_scope_building = {
					is_building_group = bg_manufacturing
				}
			}
			add = 50
		}
		if = {
			limit = {
				any_scope_building = {
					is_building_group = bg_manufacturing
					count >= 3
				}				
			}
			add = 50
		}
		if = {
			limit = {
				any_scope_building = {
					is_building_group = bg_manufacturing
					count >= 5
				}			
			}
			add = 50
		}
		if = {
			limit = {
				scope:country = {
					has_strategy = ai_strategy_industrial_expansion
				}
			}
			multiply = 1.5
		}		
	}
}

decree_encourage_agricultural_industry = {
	texture = "gfx/interface/icons/decree/decree_encourage_agricultural_industry.dds"
	unlocking_technologies = {
		enclosure
	}	
	valid = {
		NOR = { 
			has_decree = decree_encourage_manufacturing_industry 
			has_decree = decree_encourage_resource_industry
		}
	}		
	modifier = {
		building_group_bg_agriculture_throughput_add = 0.2
		building_group_bg_plantations_throughput_add = 0.2
		building_group_bg_ranching_throughput_add = 0.2
	}
	cost = 100
	
	ai_weight = {
		value = 0
		if = {
			limit = {
				any_scope_building = {
					OR = {
						is_building_group = bg_agriculture
						is_building_group = bg_ranching
						is_building_group = bg_plantations
					}				
				}
			}
			add = 50
		}
		if = {
			limit = {
				any_scope_building = {
					OR = {
						is_building_group = bg_agriculture
						is_building_group = bg_ranching
						is_building_group = bg_plantations
					}
					count >= 3
				}		
			}
			add = 50
		}
		if = {
			limit = {
				any_scope_building = {
					OR = {
						is_building_group = bg_agriculture
						is_building_group = bg_ranching
						is_building_group = bg_plantations
					}	
					count >= 5
				}			
			}
			add = 50
		}
		if = {
			limit = {
				scope:country = {
					OR = {
						has_strategy = ai_strategy_plantation_economy
						has_strategy = ai_strategy_agricultural_expansion
					}					
				}
			}
			multiply = 1.5
		}		
	}
}

decree_encourage_resource_industry = {
	texture = "gfx/interface/icons/decree/decree_encourage_resource_industry.dds"
	unlocking_technologies = {
		shaft_mining
	}	
	valid = {
		NOR = { 
			has_decree = decree_encourage_manufacturing_industry 
			has_decree = decree_encourage_agricultural_industry
		}
	}		
	modifier = {
		building_group_bg_mining_throughput_add = 0.2
		building_group_bg_logging_throughput_add = 0.2
		building_group_bg_fishing_throughput_add = 0.2
		building_group_bg_whaling_throughput_add = 0.2
		building_group_bg_oil_extraction_throughput_add = 0.2
		building_group_bg_rubber_throughput_add = 0.2
	}
	cost = 100
	
	ai_weight = {
		value = 0
		if = {
			limit = {
				any_scope_building = {
					OR = {
						is_building_group = bg_mining
						is_building_group = bg_logging
						is_building_group = bg_fishing
						is_building_group = bg_whaling
						is_building_group = bg_oil_extraction
					}				
				}
			}
			add = 50
		}
		if = {
			limit = {
				any_scope_building = {
					OR = {
						is_building_group = bg_mining
						is_building_group = bg_logging
						is_building_group = bg_fishing
						is_building_group = bg_whaling
						is_building_group = bg_oil_extraction
					}	
					count >= 3
				}			
			}
			add = 50
		}
		if = {
			limit = {
				any_scope_building = {
					OR = {
						is_building_group = bg_mining
						is_building_group = bg_logging
						is_building_group = bg_fishing
						is_building_group = bg_whaling
						is_building_group = bg_oil_extraction
					}	
					count >= 5
				}			
			}
			add = 50
		}
		if = {
			limit = {
				scope:country = {
					has_strategy = ai_strategy_resource_expansion				
				}
			}
			multiply = 1.5
		}		
	}
}

decree_greener_grass_campaign = {
	texture = "gfx/interface/icons/decree/decree_greener_grass_campaign.dds"
	valid = {
		is_isolated_from_market = no
	}
	modifier = {
		state_migration_pull_add = 20
		state_migration_pull_mult = 0.25
	}
	unlocking_technologies = { 
		romanticism
	}
	cost = 100

	ai_weight = {
		value = 0
		if = {
			limit = { 
				any_scope_building = {
					is_subsistence_building = yes
					occupancy < 0.75
				}
			}
			add = 50
		}
		if = {
			limit = { 
				any_scope_building = {
					is_subsistence_building = yes
					occupancy < 0.5
				}
			}
			add = 50
		}
		if = {
			limit = { 
				any_scope_building = {
					is_subsistence_building = yes
					occupancy < 0.25
				}
			}
			add = 50
		}		
		if = {
			limit = { 
				is_incorporated = no
				scope:country = { NOT = { has_law = law_type:law_colonial_resettlement } } # Already gives a hefty migration bonus
			}
			multiply = 2.0
		}		
		if = {
			limit = { 
				state_unemployment_rate >= 0.1 
			}
			multiply = 0
		}
	}
}

decree_enlistment_efforts = {
	texture = "gfx/interface/icons/decree/decree_enlistment_efforts.dds"			
	modifier = {
		state_conscription_rate_add = 0.05
		building_training_rate_mult = 0.25
	}
	unlocking_technologies = {
		mandatory_service
	}
	cost = 100
	
	ai_weight = {
		value = 0	
		if = {
			limit = {
				any_scope_building = {
					is_building_type = building_barracks
					count >= 25
				}				
			}
			add = 50
		}
		if = {
			limit = {
				any_scope_building = {
					is_building_type = building_barracks
					count >= 50
				}			
			}
			add = 50
		}
		if = {
			limit = {
				any_scope_building = {
					is_building_type = building_naval_base
					count >= 25
				}
			}
			add = 50
		}
		if = {
			limit = {
				any_scope_building = {
					is_building_type = building_naval_base
					count >= 50
				}			
			}
			add = 50
		}		
	}
}


