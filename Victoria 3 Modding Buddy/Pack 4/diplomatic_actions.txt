﻿increase_relations = {
	groups= {
		general
	}
	
	requires_approval = no
	show_confirmation_box = no
	
	selectable = {
		NOT = { is_country_type = decentralized }
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
		}
	}

	possible = {
		NOT = { has_diplomatic_pact = { who = scope:target_country type = damage_relations } }	
	}	

	pact = {	
		cost = 150
		is_two_sided_pact = no
		show_in_outliner = yes	
		
		relations_progress_per_day = 3 # At 100, +1 relations
		relations_improvement_max = 50
		
		first_modifier = {
			country_pact_leverage_generation_add = 300
		}		
		
		requirement_to_maintain = {
			trigger = {
				has_diplomatic_relevance = scope:target_country
			}
		}
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_AT_PEACE"
					NOT = { has_war_with = scope:target_country }
				}			
			}
		}		
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NOT_DECENTRALIZED"
					NOT = { is_country_type = decentralized }
					scope:target_country = {
						NOT = { is_country_type = decentralized }
					}				
				}
			}
		}			
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = DIPLO_ACTION_RELATIONS_AMICABLE_OR_GREATER_NOT
					OR = {
						scope:target_country = { is_power_bloc_leader = yes }
						scope:target_country.relations:root < relations_threshold:amicable
					}
				}
			}
		}
		
		requirement_to_maintain = {
			trigger = {
				NOT = { has_diplomats_expelled = scope:target_country }
			}
		}
		
		requirement_to_maintain = {
			trigger = {				
				NOT = { scope:target_country = { has_diplomats_expelled = root } }
			}
		}		
	}
	
	ai = {
		max_influence_spending_fraction = 0.25
	
		evaluation_chance = {
			value = 0.5
		}	
	
		propose_score = {
			value = 5

			if = {
				limit = {	
					has_attitude = {
						who = scope:target_country
						attitude = protective
					}						
				}
				
				add = 5
			}
			
			if = {
				limit = {
					has_attitude = {
						who = scope:target_country
						attitude = conciliatory
					}					
				}
				
				add = 20
			}
			
			add = {
				value = scope:target_country.country_rank
				multiply = 3
			}
			
			if = {
				limit = {	
					OR = {
						is_subject_of = scope:target_country
						scope:target_country = { is_subject_of = root }
					}		
				}
				
				multiply = 2
			}				
		}		
	
		will_propose = { 
			OR = {
				AND = {
					has_attitude = {
						who = scope:target_country
						attitude = cooperative
					}
					country_rank <= scope:target_country.country_rank				
				}
				has_attitude = {
					who = scope:target_country
					attitude = conciliatory
				}	
				has_attitude = {
					who = scope:target_country
					attitude = genial
				}
				has_attitude = {
					who = scope:target_country
					attitude = protective
				}					
			}
		}	
		
		will_break = {
			OR = {
				NOR = {
					has_attitude = {
						who = scope:target_country
						attitude = genial
					}	
					has_attitude = {
						who = scope:target_country
						attitude = conciliatory
					}	
					has_attitude = {
						who = scope:target_country
						attitude = cooperative
					}
					has_attitude = {
						who = scope:target_country
						attitude = protective
					}					
				}			
				AND = {
					scope:target_country.relations:root >= relations_threshold:amicable	
					OR = {
						country_rank >= rank_value:minor_power
						NOT = {
							has_attitude = {
								who = scope:target_country
								attitude = genial
							}					
						}						
					}
				}
			}
		
		}
	}
}

damage_relations = {	
	groups= {
		general
	}
	
	requires_approval = no
	show_confirmation_box = no
	
	selectable = {
		NOT = { is_country_type = decentralized }	
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
		}
	}
	
	possible = {
		NOT = { has_diplomatic_pact = { who = scope:target_country type = increase_relations } }
	}

	pact = {	
		cost = 100
		is_hostile = yes
		is_two_sided_pact = no
		infamy_affects_maintenance = no
		show_in_outliner = yes
		
		relations_progress_per_day = -3 # At -100, -1 relations
		relations_improvement_min = -50
		
		requirement_to_maintain = {
			trigger = {
				has_diplomatic_relevance = scope:target_country
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = DIPLO_ACTION_RELATIONS_COLD_OR_LESS_NOT
					scope:target_country.relations:root > relations_threshold:cold
				}
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NOT_DECENTRALIZED"
					NOT = { is_country_type = decentralized }
					scope:target_country = {
						NOT = { is_country_type = decentralized }
					}				
				}
			}
		}			
	}
	
	ai = {
		max_influence_spending_fraction = 0.15
	
		evaluation_chance = {
			value = 0.5
		}	
	
		propose_score = {
			value = 10
			
			if = {
				limit = {
					OR = {
						has_attitude = {
							who = scope:target_country
							attitude = belligerent
						}	
						has_attitude = {
							who = scope:target_country
							attitude = domineering
						}	
						has_attitude = {
							who = scope:target_country
							attitude = rebellious
						}						
					}			
				}
				
				add = 10
			}	

			if = {
				limit = {	
					OR = {
						is_subject_of = scope:target_country
						scope:target_country = { is_subject_of = root }
					}		
				}
				
				multiply = 5
			}

			if = {
				limit = {
					AND = {
						has_radical_leftist_government = no			
						scope:target_country = {
							has_radical_leftist_government = yes
						}
					}
					
				}
				multiply = 2
			}
	
			if = {
				limit = {
					AND = {
						has_radical_leftist_economy = no			
						scope:target_country = {
							has_radical_leftist_economy = yes
						}
					}
					
				}
				multiply = 2
			}									
		}	
	
		will_propose = { 
			OR = {
				AND = {
					has_attitude = {
						who = scope:target_country
						attitude = antagonistic
					}				
					scope:target_country.relations:root > 0
				}				
				has_attitude = {
					who = scope:target_country
					attitude = belligerent
				}
				has_attitude = {
					who = scope:target_country
					attitude = domineering
				}					
				has_attitude = {
					who = scope:target_country
					attitude = rebellious
				}		
			}
			scope:target_country.relations:root > relations_threshold:poor
		}
		
		will_break = { 
			OR = {
				NOR = {
					has_attitude = {
						who = scope:target_country
						attitude = belligerent
					}
					has_attitude = {
						who = scope:target_country
						attitude = domineering
					}				
					has_attitude = {
						who = scope:target_country
						attitude = antagonistic
					}				
					has_attitude = {
						who = scope:target_country
						attitude = rebellious
					}						
				}	
				scope:target_country.relations:root <= relations_threshold:poor
			}
		}
	}
}


﻿expel_diplomats = {
	groups= {
		general
	}
	
	requires_approval = no
	should_notify_third_parties = no
	show_effect_in_tooltip = yes
	
	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
			is_revolutionary = no
		}
	}
	
	possible = {	
		NOT = { has_war_with = scope:target_country }	
		is_revolutionary = no
		has_diplomatic_relevance = scope:target_country
		NOT = { has_diplomatic_pact = { who = scope:target_country type = increase_relations } }
		NOT = { has_diplomats_expelled = scope:target_country }
		OR = {
			NOT = {
				is_subject_of = scope:target_country
			}
			liberty_desire >= 75
		}
	}
	
	accept_effect = {
		change_relations = { country = scope:target_country value = -30 }
		set_diplomats_expelled = scope:target_country
		change_infamy = 10
		if = {
			limit = {
				scope:target_country = {
					is_in_power_bloc = yes
					is_power_bloc_leader = yes
				}
			}
			custom_tooltip = {
				text = expel_diplomats_leverage_generation_tt
			}
		}

	}
	
	ai = {
		evaluation_chance = {
			value = 0.25
		}	
	
		propose_score = {
			value = 100
		}
	
		will_propose = {
			scope:target_country.relations:root >= relations_threshold:cordial
			
			OR = {
				AND = {
					country_rank >= rank_value:great_power
					scope:target_country = { infamy >= infamy_threshold:pariah }					
				}
				AND = {
					OR = {
						has_attitude = {
							who = scope:target_country
							attitude = domineering
						}	
						has_attitude = {
							who = scope:target_country
							attitude = belligerent
						}			
					}	
					scope:target_country.relations:root >= relations_threshold:cordial
					infamy < infamy_threshold:infamous
					OR = {
						influence < 200 # Not enough to damage relations normally	
						scope:target_country = { # They are countering damage relations with improve relations
							has_diplomatic_pact = { who = root type = increase_relations }
						}
					}							
				}
			}
		}
	}
}
﻿take_on_debt = {
	groups= {
		general
	}
	
	requires_approval = yes
	should_notify_third_parties = yes
	show_effect_in_tooltip = yes

	unlocking_technologies = {
		central_banking
	}
	
	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
			is_revolutionary = no
		}
	}
	
	possible = {	
		NOT = { has_war_with = scope:target_country }
		has_diplomatic_relevance = scope:target_country
		scope:target_country = {
			scaled_debt > 0
		}
		can_take_on_scaled_debt = {
			who = scope:target_country
			value = scope:target_country.scaled_debt
		}
		is_revolutionary = no
	}
	
	accept_effect = {
		take_on_scaled_debt = {
			who = scope:target_country
			value = scope:target_country.scaled_debt
		}	
		if = {
			limit = {
				root = {
					owes_obligation_to = scope:target_country			
				}			
			}
			root = { set_owes_obligation_to = { country = scope:target_country setting = no } }
		}		
		else_if = {
			limit = {
				scope:target_country = {
					NOT = { owes_obligation_to = root }					
				}			
			}
			scope:target_country = { set_owes_obligation_to = { country = root setting = yes } }
		}
		else = {
			change_relations = { country = scope:target_country value = 30 }
		}
		
		hidden_effect = {
			scope:target_country = {
				set_variable = {
					name = debt_bought_out_recently
					value = yes
					days = 7300
				}				
			}	
		}		
	}
	
	ai = {
		evaluation_chance = {
			value = 0.25
		}		
	
		propose_score = {
			value = 100				
		}
	
		will_propose = { 
			is_at_war = no
			scaled_debt <= 0
			scope:target_country = {
				scaled_debt >= 0.25
				NOT = { has_variable = debt_bought_out_recently }
			}			
			has_attitude = {
				who = scope:target_country
				attitude = protective
			}
			# We want to have at least five times their income, and at least 50k income in general
			OR = {
				AND = {
					weekly_net_fixed_income >= 50000
					scope:target_country.weekly_net_fixed_income <= 10000
				}
				AND = {
					weekly_net_fixed_income >= 75000
					scope:target_country.weekly_net_fixed_income <= 15000
				}				
				AND = {
					weekly_net_fixed_income >= 100000
					scope:target_country.weekly_net_fixed_income <= 20000
				}
				AND = {
					weekly_net_fixed_income >= 125000
					scope:target_country.weekly_net_fixed_income <= 25000
				}
				AND = {
					weekly_net_fixed_income >= 150000
					scope:target_country.weekly_net_fixed_income <= 30000
				}	
				AND = {
					weekly_net_fixed_income >= 175000
					scope:target_country.weekly_net_fixed_income <= 35000
				}
				AND = {
					weekly_net_fixed_income >= 200000
					scope:target_country.weekly_net_fixed_income <= 40000
				}
				AND = {
					weekly_net_fixed_income >= 225000
					scope:target_country.weekly_net_fixed_income <= 45000
				}	
				AND = {
					weekly_net_fixed_income >= 250000
					scope:target_country.weekly_net_fixed_income <= 50000
				}					
			}					
		}			
		
		accept_score = {
			value = 0
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					max = 20
				}					
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 1
					min = -40
				}					
			}			
							
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = genial
							}						
							has_attitude = {
								who = scope:actor
								attitude = loyal
							}						
						}
					}
					value = 50
				}
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}
							has_attitude = {
								who = scope:actor
								attitude = cooperative
							}							
						}
					}
					value = 25
				}				
				if = {
					limit = {
						OR = {					
							has_attitude = {
								who = scope:actor
								attitude = cautious
							}
							has_attitude = {
								who = scope:actor
								attitude = protective
							}	
						}
					}
					value = -50
				}					
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = domineering
							}	
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}	
							has_attitude = {
								who = scope:actor
								attitude = rebellious
							}							
						}
					}
					value = -1000
				}							
			}			

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"
				if = {
					limit = {
						"relations(scope:actor)" <= relations_threshold:hostile
					}
					value = -100
				}				
				if = {
					limit = {
						"relations(scope:actor)" > relations_threshold:hostile
						"relations(scope:actor)" <= relations_threshold:cold
					}
					value = -50
				}					
				if = {
					limit = {
						"relations(scope:actor)" > relations_threshold:cold
						"relations(scope:actor)" <= relations_threshold:poor
					}
					value = -25
				}				
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:cordial
						"relations(scope:actor)" < relations_threshold:amicable
					}
					value = 10
				}
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 25
				}
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_DEBT"
				
				if = {
					limit = {
						scaled_debt < 0.1
					}
					value = -100
				}
				if = {
					limit = {
						scaled_debt >= 0.1
						scaled_debt < 0.2
					}
					value = -50
				}
				if = {
					limit = {
						scaled_debt >= 0.2
						scaled_debt < 0.3
					}
					value = -25
				}	
				if = {
					limit = {
						scaled_debt >= 0.3
						scaled_debt < 0.4
					}
					value = -10
				}				
				if = {
					limit = {
						scaled_debt >= 0.5
						scaled_debt < 0.6
					}
					value = 10
				}
				if = {
					limit = {
						scaled_debt >= 0.6
						scaled_debt < 0.7
					}
					value = 25
				}
				if = {
					limit = {
						scaled_debt >= 0.7
						scaled_debt < 0.8
					}
					value = 40
				}		
				if = {
					limit = {
						scaled_debt >= 0.8
						scaled_debt < 0.9
					}
					value = 55
				}	
				if = {
					limit = {
						scaled_debt >= 0.9
						in_default = no
					}
					value = 70
				}						
				if = {
					limit = {
						in_default = yes
					}
					value = 100
				}					
			}
			
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}	
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RANK"
	
				if = {
					limit = { scope:actor = { country_rank > root.country_rank } }
					value = 10
				}
				
				if = {
					limit = { scope:actor = { country_rank < root.country_rank } }
					value = -20
				}				
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_PRINCIPLE_SACRED_CIVICS"

				if = {
					limit = {
						AND = {
							scope:actor.power_bloc ?= {
								OR = {
									has_principle = principle:principle_sacred_civics_1
									has_principle = principle:principle_sacred_civics_2
									has_principle = principle:principle_sacred_civics_3
								}
							}
							scope:actor.religion = root.religion
						}
					}
					add = 20
				}
			}
		}	
	}
}

redeem_obligation = {
	groups= {
		general
	}
	
	requires_approval = no
	
	potential = {
		NOT = { is_country_type = decentralized }
		scope:target_country = {
			NOT = { is_country_type = decentralized }
		}
		scope:target_country = {
			owes_obligation_to = root			
		}	
	}
	
	possible = {
		is_revolutionary = no
		scope:target_country = {
			is_revolutionary = no
		}
	}

	accept_effect = {
		change_relations = { country = scope:target_country value = 30 }
		scope:target_country = { set_owes_obligation_to = { country = root setting = no } }
	}
	
	ai = {
		evaluation_chance = {
			value = 0.25
		}	
	
		propose_score = {
			value = 10
		}	
	
		will_propose = { 
			always = no
		}
	}
}

﻿violate_sovereignty = {
	groups= {
		general
	}
	requires_approval = yes
	should_notify_third_parties = yes
	violates_sovereignty = yes
	can_use_obligations = yes
	
	selectable = {
		NOT = { is_country_type = decentralized }
	}
	
	potential = {
		is_at_war = yes

		scope:target_country = {
			NOT = { 
				is_country_type = decentralized 
				is_subject_of = ROOT
			}
		}
		NOT = {
			has_war_with = scope:target_country
			is_in_war_together = scope:target_country
		}
	}

	possible = {
		# this localization only makes sense if you are already at war
		trigger_if = {
			limit = {
				is_at_war = yes
			}
			custom_tooltip = {
				text = "violate_sovereignty_trigger_not"
				any_scope_war = {
					is_warleader = root
					violate_sovereignty_war_check = yes
				}
			}
		}
		
		scope:target_country.relations:root < relations_threshold:amicable

		is_revolutionary = no
		
		scope:target_country = {
			is_revolutionary = no
		}				
	}
	
	accept_effect = {
		create_incident = {
			value = 15
			country = scope:target_country
		}

		scope:target_country = {
			violate_sovereignty_join = {
				violator = root
				target = scope:target_country
				join_violator = yes
			}
		}		
	}

	decline_effect = {
		save_scope_as = initiator
		
		create_incident = {
			value = 10
			country = scope:target_country
		}

		scope:target_country = {
			violate_sovereignty_join = {
				violator = root
				target = scope:target_country
				join_violator = no
			}
		}

		# could potentially be several wars but only show one in situation for now
		random_scope_violate_sovereignty_wars = {
			save_scope_as = war
		}

		# send situation to all relevant countries asking them to help scope:target_country out
		every_scope_violate_sovereignty_interested_parties = {
			trigger_event = { id = diplomatic_events.1 days = 0 }
		}
	}
	
	ai = {
		evaluation_chance = {
			value = 0
			
			if = {
				limit = { 
					is_at_war = yes 
					any_scope_war = {
						is_warleader = root
					}				
				}
				add = 1
			}
		}	
	
		propose_score = {
			value = 100
		}	
	
		accept_score = {
			value = 0
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}	

			if = {
				limit = { 
					has_strategy = ai_strategy_armed_isolationism 
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ISOLATIONIST"
					add = -25
				}
			}						
			
			if = {
				limit = {
					"scope:actor.ai_army_comparison(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ARMY_STRENGTH"
					value = "scope:actor.ai_army_comparison(root)"
					multiply = 2
					max = 50
				}				
			}
			else = {
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ARMY_STRENGTH"
					value = -1000
				}			
			}	

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					max = 20
				}					
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 1
					min = -40
				}					
			}							
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = genial
							}
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}							
							has_attitude = {
								who = scope:actor
								attitude = loyal
							}	
							has_attitude = {
								who = scope:actor
								attitude = cooperative
							}							
						}
					}
					value = 15
				}			
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = cautious
						}
					}
					value = -25
				}					
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = domineering
							}	
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}	
							has_attitude = {
								who = scope:actor
								attitude = rebellious
							}
							has_attitude = {
								who = scope:actor
								attitude = protective
							}							
						}
					}
					value = -50
				}							
			}			

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"	
				if = {
					limit = {
						"relations(scope:actor)" < relations_threshold:cordial
					}
					value = -25
				}					
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:cordial
						"relations(scope:actor)" < relations_threshold:amicable
					}
					value = 10
				}					
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 25
				}	
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}				
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}	
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}					
			}					

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RANK"
	
				if = {
					limit = { scope:actor = { country_rank > root.country_rank } }
					value = 20
				}
				
				if = {
					limit = { scope:actor = { country_rank < root.country_rank } }
					value = -20
				}				
			}	

			if = {
				limit = {
					has_powerful_protectors = yes
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_POWERFUL_PROTECTORS_THEM"
					value = -50
				}	
			}				
		}
	}
}

﻿trade_states = {
	groups= {
		general
	}
	
	requires_approval = yes
	should_notify_third_parties = yes
	show_effect_in_tooltip = yes

	# Either country should have an available state. Trade State is used as a
	# catch all possibilities Diplomatic Action because Grant/Take State are currently
	# limited to Overlords/Subjects.
	state_selection = any_required

	first_state_list = first_country
	second_state_list = second_country
	can_use_obligations = yes
	
	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
		is_subject = no
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
			is_revolutionary = no
		}
	}
	
	possible = {
		is_diplomatic_play_committed_participant = no
		scope:target_country = { is_diplomatic_play_committed_participant = no }
		custom_tooltip = {
			text = DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT
			scope:target_country.relations:root > relations_threshold:poor
		}
		has_diplomatic_relevance = scope:target_country
		is_revolutionary = no
		in_default = no	
		
		# Must have a connection to the state received even after the trade happens
		trigger_if = {
			limit = {
				exists = scope:first_state
				exists = scope:second_state
			}
		
			custom_tooltip = {
				text = DIPLO_ACTION_TRADE_STATES_NOT_SAME_REGION
				NOT = {
					scope:first_state.state_region = scope:second_state.state_region
				}
			}
			
			custom_tooltip = {
				text = DIPLO_ACTION_TRADE_STATES_WOULD_BREAK_CONNECTION
				scope:actor = { 
					any_scope_state = {
						NOT = { this = scope:first_state }	
						OR = {
							any_neighbouring_state = { this = scope:second_state }
							AND = {
								is_coastal = yes
								scope:second_state = { is_coastal = yes }
							}
						}						
					}					
				}					
				scope:target_country = { 
					any_scope_state = {
						NOT = { this = scope:second_state }	
						OR = {
							any_neighbouring_state = { this = scope:first_state }
							AND = {
								is_coastal = yes
								scope:first_state = { is_coastal = yes }
							}
						}						
					}					
				}						
			}
		}
	}
	
	accept_effect = {
		if = {
			limit = { exists = scope:first_state }
			scope:first_state = { set_state_owner = scope:target_country }
		}
		if = {
			limit = { exists = scope:second_state }
			scope:second_state = { set_state_owner = root }
		}		
	}
	
	first_state_trigger = {
		owner = scope:country
		is_capital = no
		is_under_colonization = no
		OR = {
			scope:target_country = { is_adjacent_to_state = root }
			AND = {
				is_coastal = yes		
				scope:target_country = { has_port = yes }
			}
		}
	}
	
	second_state_trigger = {
		owner = scope:target_country
		is_capital = no
		is_under_colonization = no
		OR = {
			scope:country = { is_adjacent_to_state = root }
			AND = {
				is_coastal = yes		
				scope:country = { has_port = yes }
			}
		}		
	}	
	
	ai = {
		check_acceptance_for_will_propose = yes
		
		evaluation_chance = {
			value = 0.1
		}			
	
		propose_score = {
			value = 10
		}
		
		# Selection triggers exist only to pre-filter which state combinations the AI looks at
		# This is done for performance reasons - the more open ended these triggers are, the more it will impact performance
		will_select_as_first_state = {
			is_split_state = yes
			is_under_colonization = no
			is_incorporated = no
			NOT = { is_homeland_of_country_cultures = owner }
			state_is_in_africa = yes
			NOT = { state_region = s:STATE_INDIAN_OCEAN_TERRITORY } # Special exception to african state trading
		}
		
		will_select_as_second_state = {
			is_split_state = yes
			is_under_colonization = no
			is_incorporated = no
			NOT = { is_homeland_of_country_cultures = owner }
			state_is_in_africa = yes
			NOT = { state_region = s:STATE_INDIAN_OCEAN_TERRITORY } # Special exception to african state trading
		}		
		
		will_propose_with_states = {
			exists = scope:first_state
			exists = scope:second_state	
			NOT = { scope:first_state.state_region = scope:second_state.state_region }
			scope:first_state = { 
				is_split_state = yes	
				state_region = { 
					any_scope_state = { owner = scope:target_country }
				}
			}	
			scope:second_state = { 
				is_split_state = yes
				state_region = { 
					any_scope_state = { owner = root }
				}
			}			
		}	
		
		accept_score = {
			value = 0	
			
			if = {
				limit = {
					NOR = {
						exists = scope:first_state
						exists = scope:second_state
					}
				}
				
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_STATES_NOT_SET"
					value = -1000
				}				
			}
			else = {
				if = {
					limit = {
						exists = scope:second_state
					}
					subtract = {
						value = scope:second_state.ai_state_value:root	
						desc = "DIPLOMATIC_ACCEPTANCE_TRADE_STATE_SECOND_STATE"
						min = 10
					}
				}	
				else_if = {		
					add = {
						value = 100	
						desc = "DIPLOMATIC_ACCEPTANCE_GIVING_AWAY_LAND"						
					}			
				}			

				if = {
					limit = {
						exists = scope:first_state				
					}
					if = {
						limit = { scope:first_state.ai_state_value:root > 0 }
						add = {
							value = scope:first_state.ai_state_value:root	
							desc = "DIPLOMATIC_ACCEPTANCE_TRADE_STATE_FIRST_STATE"						
						}				
					}
					else = {
						add = {
							value = -1000	
							desc = "DIPLOMATIC_ACCEPTANCE_DOES_NOT_WANT_FIRST_STATE"						
						}					
					}
				}

				if = {
					limit = {
						exists = scope:first_state
						exists = scope:second_state						
						scope:first_state = { 
							is_split_state = yes
							state_region = { 
								any_scope_state = { owner = root }
							}
						}	
						scope:second_state = { 
							is_split_state = yes
							state_region = { 
								any_scope_state = { owner = scope:actor }
							}
						}						
					}

					add = {
						value = 25
						desc = "DIPLOMATIC_ACCEPTANCE_TRADE_STATE_SPLIT_STATE_EXCHANGE"						
					}						
				}
			}	
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_PRINCIPLE_SACRED_CIVICS"

				if = {
					limit = {
						AND = {
							scope:actor.power_bloc ?= {
								OR = {
									has_principle = principle:principle_sacred_civics_1
									has_principle = principle:principle_sacred_civics_2
									has_principle = principle:principle_sacred_civics_3
								}
							}
							scope:actor.religion = root.religion
						}
					}
					add = 10
				}
			}			
		}
		
		use_obligation_chance = {
			value = 10
			
			if = {
				limit = {
					scope:target_country = { country_rank > root.country_rank }
				}				
				add = 20
			}				
		}
		
		owe_obligation_chance = {
			value = 0	

			if = {
				limit = {
					scope:target_country = { country_rank > root.country_rank }
				}				
				add = 10
			}				
		}		
	}
}
﻿guarantee_independence = {
	groups= {
		general
	}
	requires_approval = no
	should_notify_third_parties = no

	unlocking_technologies = {
		international_relations
	}
	
	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}
	
	potential = {
		is_subject = no
		scope:target_country = {
			NOT = { is_country_type = decentralized }
			is_subject = no
		}
	}

	possible = {}
	
	pact = {	
		cost = 100
	
		is_two_sided_pact = no
		forced_duration = 12
		show_in_outliner = yes
		can_be_used_in_sway_offers = yes
		is_guarantee_independence = yes
		sway_maneuvers_cost = 10
		
		second_modifier = {
			country_pact_leverage_generation_add = 200
		}

		relations_progress_per_day = 1 # At 100, +1 relations
		relations_improvement_max = 80
		
		requirement_to_maintain = {
			trigger = {
				has_diplomatic_relevance = scope:target_country
			}
		}
		
		requirement_to_maintain = {
			trigger = {
				is_subject = no
				scope:target_country = { is_subject = no }
			}
		}
		
	 	requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT
					scope:target_country.relations:root > relations_threshold:poor
				}		
			}
			
			show_about_to_break_warning = {
				scope:target_country.relations:root <= -17 # this is: poor + 3
				scope:target_country.relations_change_rate:root < 0
			}					
		}	

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NOT_DECENTRALIZED"
					NOT = { is_country_type = decentralized }
					scope:target_country = {
						NOT = { is_country_type = decentralized }
					}				
				}
			}
		}				
	
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_AT_PEACE"
					NOT = { has_war_with = scope:target_country }
				}			
			}
		}		

		requirement_to_maintain = {
			trigger = {
				country_rank > scope:target_country.country_rank
			}
		}

		requirement_to_maintain = {
			trigger = {
				in_default = no
			}
		}	

		manual_break_effect = {
			create_unidirectional_truce = { country = scope:target_country months = 12 }
		}
	}
	
	ai = {
		max_influence_spending_fraction = 0.20
		
		evaluation_chance = {
			value = 0.0
			
			if = {
				limit = { country_rank >= rank_value:major_power }
				add = {
					value = country_rank
					multiply = 0.1
				}				
			}			
		}		
		
		# This is only used for determining the value of a bankroll in sways, so it follows different logic from normal action acceptance
		# The format here is as if scope:actor was asking if root wants a guarantee
		accept_score = {
			value = 0
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = 5
			}				
			
			if = {
				limit = {
					"ai_ideological_opinion(scope:actor)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "ai_ideological_opinion(scope:actor)"
					multiply = 0.33
					max = 10
				}					
			}
			else_if = {
				limit = {
					"ai_ideological_opinion(scope:actor)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "ai_ideological_opinion(scope:actor)"
					multiply = 0.33
					min = -10
				}					
			}			
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ARMY_STRENGTH"
				value = "ai_army_comparison(scope:actor)"
				divide = 2
				min = -25
				max = 25
			}
		}		
	
		# This is only used for determining the value of a guarantee in sways, so it follows different logic from normal action acceptance
		# The format here is as if scope:actor was asking for a guarantee from root
		junior_accept_score = {
			value = 0

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -10
			}			
			
			if = {
				limit = {
					"ai_ideological_opinion(scope:actor)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "ai_ideological_opinion(scope:actor)"
					multiply = 0.5
					max = 20
				}					
			}
			else_if = {
				limit = {
					"ai_ideological_opinion(scope:actor)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "ai_ideological_opinion(scope:actor)"
					multiply = 0.5
					min = -20
				}					
			}					

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ARMY_STRENGTH"
				value = "ai_army_comparison(scope:actor)"
				divide = 2
				min = -25
				max = 25
			}							
		}	
	
		propose_score = {
			value = 0
			
			if = {
				limit = {
					scope:target_country.relations:root >= relations_threshold:friendly					
				}
				add = 15
			}
			else_if = {
				limit = {
					scope:target_country.relations:root >= relations_threshold:amicable					
				}
				add = 10
			}	
			else_if = {
				limit = {
					scope:target_country.relations:root >= relations_threshold:cordial				
				}
				add = 5
			}	
			
			if = {
				limit = { country_rank < rank_value:great_power }
				add = -5
			}

			if = {
				limit = {
					scope:target_country = { is_country_type = unrecognized }				
				}
				add = -5
			}
			
			if = {
				limit = {
					NOT = { has_strategic_adjacency = scope:target_country }			
				}
				add = -5
			}			
		}
	
		will_propose = { 
			is_at_war = no
			country_rank >= rank_value:major_power		
			has_attitude = {
				who = scope:target_country
				attitude = protective
			}
			can_reach_target_country = yes
		}
		
		will_break = { 
			OR = {
				NOT = {
					has_attitude = {
						who = scope:target_country
						attitude = protective
					}
					country_rank < rank_value:major_power		
					can_reach_target_country = no
				}			
			}
		}			
	}
}


﻿alliance = {
	groups= {
		general
	}
	requires_approval = yes
	can_use_obligations = yes

	unlocking_technologies = {
		international_relations
	}
	
	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
			is_revolutionary = no
		}
	}
	
	possible = {
		OR = {
			has_technology_researched = multilateral_alliances
			num_alliances < 1
		}

		scope:target_country = {
			OR = {
				has_technology_researched = multilateral_alliances
				num_alliances < 1
			}
			custom_tooltip = {
				text = "alliance_support_independence_subject"
				NOT = {
					any_subject_or_below = {
						ROOT = {
							has_diplomatic_pact = {
								who = prev
								type = support_independence
							}
						}
					}
				}
			}
		}

		custom_tooltip = {
			text = "alliance_support_independence_subject"
			NOT = {
				any_subject_or_below = {
					has_diplomatic_pact = {
						who = scope:target_country
						type = support_independence
					}
				}
			}
		}
	}
	
	accept_effect = {
		if = {
			limit = {
				scope:target_country = {
					has_diplomatic_pact = {
						who = root
						type = guarantee_independence
					}									
				}			
			}
			
			scope:target_country = {
				remove_diplomatic_pact = {
					country = root
					type = guarantee_independence
				}			
			}
		}	
		else_if = {
			limit = {
				has_diplomatic_pact = {
					who = scope:target_country
					type = guarantee_independence
				}		
			}
			
			remove_diplomatic_pact = {
				country = scope:target_country
				type = guarantee_independence
			}
		}		
		
		if = {
			limit = {
				scope:target_country = {
					has_diplomatic_pact = {
						who = root
						type = defensive_pact
					}									
				}			
			}
			
			remove_diplomatic_pact = {
				country = scope:target_country
				type = defensive_pact
			}

			add_lobby_appeasement_from_diplomacy_bidirectional = { 
				FIRST = root
				SECOND = scope:target_country 
				PRO_AMOUNT = 1
				ANTI_AMOUNT = -1
				FACTOR = appeasement_alliance_formed
			}				
		}	
		else = {
			add_lobby_appeasement_from_diplomacy_bidirectional = { 
				FIRST = root
				SECOND = scope:target_country 
				PRO_AMOUNT = 4
				ANTI_AMOUNT = -4
				FACTOR = appeasement_alliance_formed
			}
		}
	}

	pact = {
		cost = 200
	
		is_alliance = yes
		
		relations_progress_per_day = 1.5 # At 100, +1 relations
		relations_improvement_max = 80		

		first_modifier = {
			country_pact_leverage_generation_add = 300
		}

		second_modifier = {
			country_pact_leverage_generation_add = 300
		}
		
		requirement_to_maintain = {
			trigger = {
				has_diplomatic_relevance = scope:target_country
			}
		}
			
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NOT_DECENTRALIZED"
					NOT = { is_country_type = decentralized }
					scope:target_country = {
						NOT = { is_country_type = decentralized }
					}				
				}
			}
		}		
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_DIPLOMATIC_AUTONOMY"
					aggressive_diplomatic_plays_permitted = yes
					scope:target_country = { aggressive_diplomatic_plays_permitted = yes }					
				}
			}
		}		

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NO_SUBJECT_RELATION"
					NOT = {
						is_subject_of = scope:target_country
						scope:target_country = { is_subject_of = root }
					}				
				}
			}
		}			

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = DIPLO_ACTION_RELATIONS_CORDIAL_OR_GREATER
					scope:target_country.relations:root >= relations_threshold:cordial
				}	
			}
			
			show_about_to_break_warning = {
				scope:target_country.relations:root < 23 # this is: cordial + 3
				scope:target_country.relations_change_rate:root < 0
			}		
		}	
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_AT_PEACE"
					NOT = { has_war_with = scope:target_country }
				}			
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NO_SUPPORT_FOR_INDEPENDENCE"
					NOT = {
						any_subject_or_below = {
							ROOT = {
								has_diplomatic_pact = {
									who = prev
									type = support_independence
								}
							}
						}
					}
				}
			}
		}

		manual_break_effect = {
			change_relations = { country = scope:target_country value = -30 }
			create_bidirectional_truce = { country = scope:target_country months = 12 }
			add_lobby_appeasement_from_diplomacy_bidirectional = { 
				FIRST = root
				SECOND = scope:target_country 
				PRO_AMOUNT = -4
				ANTI_AMOUNT = 4
				FACTOR = appeasement_alliance_broken
			}		
		}
		
		auto_break_effect = {
			create_bidirectional_truce = { country = scope:target_country months = 12 }
			if = {
				limit = { 
					NOR = { 
						is_subject_of = scope:target_country 
						scope:target_country = { is_subject_of = root }
					}
				}
				
				add_lobby_appeasement_from_diplomacy_bidirectional = { 
					FIRST = root
					SECOND = scope:target_country 
					PRO_AMOUNT = -4
					ANTI_AMOUNT = 4
					FACTOR = appeasement_alliance_broken
				}				
			}									
		}
	}

	ai = {
		check_acceptance_for_will_break = yes
		check_acceptance_for_will_propose = yes
		
		evaluation_chance = {
			value = 0.1
			
			add = {
				value = country_rank
				multiply = 0.05
			}			
		}			
	
		accept_score = {
			value = 0
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}

			if = {
				limit = {
					has_strategic_adjacency = scope:actor
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_NEIGHBORS"
					value = 10
				}	
			}			

			if = {
				limit = { 
					has_strategy = ai_strategy_armed_isolationism 
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ISOLATIONIST"
					add = -50
				}
			}			
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ARMY_STRENGTH"
				value = "scope:actor.ai_army_comparison(root)"
				min = -50
				max = 50
			}	

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					max = 20
				}					
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					min = -20
				}					
			}						
							
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = genial
							}
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}							
							has_attitude = {
								who = scope:actor
								attitude = loyal
							}
							has_attitude = {
								who = scope:actor
								attitude = protective
							}							
						}
					}
					value = 50
				}
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = cooperative
						}
					}
					value = 25
				}				
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = cautious
						}
					}
					value = -50
				}					
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = domineering
							}	
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}	
							has_attitude = {
								who = scope:actor
								attitude = rebellious
							}							
						}
					}
					value = -1000
				}							
			}			

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"			
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 25
				}	
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}				
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}	
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}					
			}					

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RANK"
	
				if = {
					limit = { scope:actor = { country_rank > root.country_rank } }
					value = 20
				}
				
				if = {
					limit = { scope:actor = { country_rank < root.country_rank } }
					value = -20
				}				
			}	

			if = {
				limit = {
					"num_alliances_and_defensive_pacts_with_rivals(scope:actor)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ALLIED_TO_RIVALS"
					value = "num_alliances_and_defensive_pacts_with_rivals(scope:actor)"
					multiply = -25
				}	
			}	

			if = {
				limit = {
					"num_alliances_and_defensive_pacts_with_allies(scope:actor)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ALLIED_TO_ALLIES"
					value = "num_alliances_and_defensive_pacts_with_allies(scope:actor)"
					multiply = 10
				}	
			}

			if = {
				limit = {
					"num_shared_rivals(scope:actor)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_SHARED_RIVALS"
					value = "num_shared_rivals(scope:actor)"
					multiply = 10
					max = 30
				}	
			}				

			if = {
				limit = {
					NOT = {
						has_diplomatic_pact = {
							who = root
							type = alliance
						}					
					}	
					"num_alliances" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_NUM_ALLIES"
					value = "num_alliances"
					multiply = -10
				}					
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_PRO_LOBBY_CLOUT"					
				value = "scope:actor.lobby_foreign_pro_clout(scope:target_country)"
				multiply = 50
				max = 25
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_ANTI_LOBBY_CLOUT"					
				value = "scope:actor.lobby_foreign_anti_clout(scope:target_country)"
				multiply = -50
				min = -25
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_TARGET_PRO_LOBBY_CLOUT"					
				value = "scope:target_country.lobby_foreign_pro_clout(scope:actor)"
				multiply = 100
				max = 25
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_TARGET_ANTI_LOBBY_CLOUT"					
				value = "scope:target_country.lobby_foreign_anti_clout(scope:actor)"
				multiply = -100
				min = -25
			}	
			
			if = {
				limit = {
					scope:actor = {
						has_variable = pro_lobby_proposal_alliance
						var:pro_lobby_opportunity_target ?= scope:target_country
					}
				}
				add = {
					desc = "LOBBY_OPPORTUNITY_BONUS"
					value = 100
				}
			}

			if = {
				limit = {
					scope:actor = {
						has_variable = anti_lobby_proposal_alliance
						var:anti_lobby_opportunity_target ?= scope:target_country
					}
				}
				add = {
					desc = "LOBBY_OPPORTUNITY_BONUS"
					value = 50
				}
			}
			
			if = {
				limit = {
					exists = power_bloc
					exists = scope:actor.power_bloc			
				}
				if = {
					limit = {
						power_bloc = scope:actor.power_bloc
					}
					add = {
						desc = "DIPLOMATIC_ACCEPTANCE_SAME_POWER_BLOC"
						value = 15
					}					
				}
				else = {
					add = {
						desc = "DIPLOMATIC_ACCEPTANCE_DIFFERENT_POWER_BLOC"
						value = -25
					}					
				}				
			}			

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_PRINCIPLE_SACRED_CIVICS"

				if = {
					limit = {
						AND = {
							scope:actor.power_bloc ?= {
								OR = {
									has_principle = principle:principle_sacred_civics_1
									has_principle = principle:principle_sacred_civics_2
									has_principle = principle:principle_sacred_civics_3
								}
							}
							scope:actor.religion = root.religion
						}
					}
					add = 10
				}
			}
		}

		propose_score = {
			value = 10

			if = {
				limit = {
					country_has_primary_culture = cu:british
					asian_ally_against_russia_trigger = yes
				}
				add = {
					value = 50
				}
			}
			
			add = {
				value = scope:target_country.country_rank
				multiply = 3
			}			
		}

		propose_break_score = {
			value = 10
		}
		
		use_obligation_chance = {
			value = 0
	
			add = {
				if = {
					limit = {
						scope:target_country = { country_rank = root.country_rank }
					}					
					value = 25
				}			
			}
	
			add = {
				if = {
					limit = {
						scope:target_country = { country_rank > root.country_rank }
					}					
					value = 50
				}			
			}

			if = {
				limit = {
					country_has_primary_culture = cu:british
					asian_ally_against_russia_trigger = yes
				}
				add = {
					value = 50
				}
			}
		}
		
		owe_obligation_chance = {
			value = 0
	
			add = {
				if = {
					limit = {
						scope:target_country = { country_rank = root.country_rank }
					}				
					value = 5
				}	
			}			
	
			add = {
				if = {
					limit = {
						scope:target_country = { country_rank > root.country_rank }
					}				
					value = 10
				}	
			}	

			if = {
				limit = {
					country_has_primary_culture = cu:british
					asian_ally_against_russia_trigger = yes
				}
				add = {
					value = 25
				}
			}		
		}	
	}
}
﻿defensive_pact = {
	groups= {
		general
	}
	requires_approval = yes
	can_use_obligations = yes

	unlocking_technologies = {
		international_relations
	}
	
	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
			is_revolutionary = no
		}
	}
	
	possible = {
		scope:target_country = {
			NOT = {
				has_diplomatic_pact = {
					who = root
					type = alliance
				}					
			}					
		}					
	}
	
	accept_effect = {
		if = {
			limit = {
				scope:target_country = {
					has_diplomatic_pact = {
						who = root
						type = guarantee_independence
					}									
				}			
			}
			
			scope:target_country = {
				remove_diplomatic_pact = {
					country = root
					type = guarantee_independence
				}			
			}
		}	
		else_if = {
			limit = {
				has_diplomatic_pact = {
					who = scope:target_country
					type = guarantee_independence
				}		
			}
			
			remove_diplomatic_pact = {
				country = scope:target_country
				type = guarantee_independence
			}
		}	
		
		add_lobby_appeasement_from_diplomacy_bidirectional = { 
			FIRST = root
			SECOND = scope:target_country 
			PRO_AMOUNT = 3
			ANTI_AMOUNT = -3
			FACTOR = appeasement_defensive_pact_formed
		}	
	}

	pact = {
		cost = 150
	
		is_defensive_pact = yes
		
		relations_progress_per_day = 1 # At 100, +1 relations
		relations_improvement_max = 80		
	
		first_modifier = {
			country_pact_leverage_generation_add = 250
		}

		second_modifier = {
			country_pact_leverage_generation_add = 250
		}

 		requirement_to_maintain = {
			trigger = {
				has_diplomatic_relevance = scope:target_country
			}
		}
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NOT_DECENTRALIZED"
					NOT = { is_country_type = decentralized }
					scope:target_country = {
						NOT = { is_country_type = decentralized }
					}				
				}
			}
		}		
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_DIPLOMATIC_AUTONOMY"
					aggressive_diplomatic_plays_permitted = yes
					scope:target_country = { aggressive_diplomatic_plays_permitted = yes }					
				}
			}
		}		

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NO_SUBJECT_RELATION"
					NOT = {
						is_subject_of = scope:target_country
						scope:target_country = { is_subject_of = root }
					}				
				}
			}
		}		

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = DIPLO_ACTION_RELATIONS_CORDIAL_OR_GREATER
					scope:target_country.relations:root >= relations_threshold:cordial
				}	
			}
			
			show_about_to_break_warning = {
				scope:target_country.relations:root < 23 # this is: cordial + 3
				scope:target_country.relations_change_rate:root < 0
			}		
		}	
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_AT_PEACE"
					NOT = { has_war_with = scope:target_country }
				}			
			}
		}	

		manual_break_effect = {
			change_relations = { country = scope:target_country value = -30 }
			create_bidirectional_truce = { country = scope:target_country months = 12 }
			add_lobby_appeasement_from_diplomacy_bidirectional = { 
				FIRST = root
				SECOND = scope:target_country 
				PRO_AMOUNT = -3
				ANTI_AMOUNT = 3
				FACTOR = appeasement_defensive_pact_broken
			}			
		}
		
		auto_break_effect = {
			create_bidirectional_truce = { country = scope:target_country months = 12 }	
			if = {
				limit = { 
					NOR = { 
						is_subject_of = scope:target_country 
						scope:target_country = { is_subject_of = root }
					}
				}
				
				add_lobby_appeasement_from_diplomacy_bidirectional = { 
					FIRST = root
					SECOND = scope:target_country 
					PRO_AMOUNT = -3
					ANTI_AMOUNT = 3
					FACTOR = appeasement_defensive_pact_broken
				}				
			}				
		}		
	}

	ai = {
		check_acceptance_for_will_break = yes
		check_acceptance_for_will_propose = yes
		
		evaluation_chance = {
			value = 0.1
			
			add = {
				value = country_rank
				multiply = 0.05
			}			
		}		
	
		accept_score = {
			value = 0
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}
			
			if = {
				limit = {
					has_strategic_adjacency = scope:actor
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_NEIGHBORS"
					value = 10
				}	
			}			

			if = {
				limit = { 
					has_strategy = ai_strategy_armed_isolationism 
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ISOLATIONIST"
					add = -25
				}
			}			
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ARMY_STRENGTH"
				value = "scope:actor.ai_army_comparison(root)"
				add = 0.5
				min = -25
				max = 50
			}	

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					max = 20
				}					
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					min = -20
				}					
			}				
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"			
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = protective
						}	
					}
					value = 75
				}
				else_if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = genial
							}
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}							
							has_attitude = {
								who = scope:actor
								attitude = loyal
							}						
						}
					}
					value = 50
				}
				else_if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = cooperative
						}
					}
					value = 25
				}				
				else_if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = cautious
						}
					}
					value = -50
				}					
				else_if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = domineering
							}	
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}	
							has_attitude = {
								who = scope:actor
								attitude = rebellious
							}							
						}
					}
					value = -1000
				}							
			}			

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"			
				if = {
					limit = {
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 0
				}
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 25
				}	
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}				
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}	
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}					
			}					

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RANK"
	
				if = {
					limit = { scope:actor = { country_rank > root.country_rank } }
					value = 20
				}
				
				if = {
					limit = { scope:actor = { country_rank < root.country_rank } }
					value = -10
				}				
			}	

			if = {
				limit = {
					"num_alliances_and_defensive_pacts_with_rivals(scope:actor)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ALLIED_TO_RIVALS"
					value = "num_alliances_and_defensive_pacts_with_rivals(scope:actor)"
					multiply = -15
				}	
			}	

			if = {
				limit = {
					"num_alliances_and_defensive_pacts_with_allies(scope:actor)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ALLIED_TO_ALLIES"
					value = "num_alliances_and_defensive_pacts_with_allies(scope:actor)"
					multiply = 10
				}	
			}

			if = {
				limit = {
					"num_shared_rivals(scope:actor)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_SHARED_RIVALS"
					value = "num_shared_rivals(scope:actor)"
					multiply = 10
					max = 30
				}	
			}				

			if = {
				limit = {
					NOT = {
						has_diplomatic_pact = {
							who = root
							type = defensive_pact
						}					
					}	
					"num_defensive_pacts" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_NUM_DEFENSIVE_PACTS"
					value = "num_defensive_pacts"
					multiply = -5
				}					
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_PRO_LOBBY_CLOUT"					
				value = "scope:actor.lobby_foreign_pro_clout(scope:target_country)"
				multiply = 50
				max = 25
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_ANTI_LOBBY_CLOUT"					
				value = "scope:actor.lobby_foreign_anti_clout(scope:target_country)"
				multiply = -50
				min = -25
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_TARGET_PRO_LOBBY_CLOUT"					
				value = "scope:target_country.lobby_foreign_pro_clout(scope:actor)"
				multiply = 100
				max = 25
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_TARGET_ANTI_LOBBY_CLOUT"					
				value = "scope:target_country.lobby_foreign_anti_clout(scope:actor)"
				multiply = -100
				min = -25
			}	

			if = {
				limit = {
					scope:actor = {
						has_variable = pro_lobby_proposal_defensive_pact
						var:pro_lobby_opportunity_target ?= scope:target_country
					}
				}
				add = {
					desc = "LOBBY_OPPORTUNITY_BONUS"
					value = 100
				}	
			}
			
			if = {
				limit = {
					scope:actor = {
						has_variable = anti_lobby_proposal_defensive_pact
						var:anti_lobby_opportunity_target ?= scope:target_country
					}
				}
				add = {
					desc = "LOBBY_OPPORTUNITY_BONUS"
					value = 50
				}	
			}
			
			if = {
				limit = {
					exists = power_bloc
					exists = scope:actor.power_bloc			
				}
				if = {
					limit = {
						power_bloc = scope:actor.power_bloc
					}
					add = {
						desc = "DIPLOMATIC_ACCEPTANCE_SAME_POWER_BLOC"
						value = 15
					}					
				}
				else = {
					add = {
						desc = "DIPLOMATIC_ACCEPTANCE_DIFFERENT_POWER_BLOC"
						value = -25
					}					
				}				
			}			
			

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_PRINCIPLE_SACRED_CIVICS"

				if = {
					limit = {
						AND = {
							scope:actor.power_bloc ?= {
								OR = {
									has_principle = principle:principle_sacred_civics_1
									has_principle = principle:principle_sacred_civics_2
									has_principle = principle:principle_sacred_civics_3
								}
							}
							scope:actor.religion = root.religion
						}
					}
					add = 20
				}
			}	
		}

		propose_score = {
			value = 10
			
			if = {
				limit = {
					country_has_primary_culture = cu:british
					asian_ally_against_russia_trigger = yes
				}
				add = {
					value = 50
				}
			}
			
			add = {
				value = scope:target_country.country_rank
				multiply = 3
			}			
		}

		propose_break_score = {
			value = 10
		}
		
		use_obligation_chance = {
			value = 0
	
			add = {
				if = {
					limit = {
						scope:target_country = { country_rank = root.country_rank }
					}					
					value = 25
				}			
			}
	
			add = {
				if = {
					limit = {
						scope:target_country = { country_rank > root.country_rank }
					}					
					value = 50
				}			
			}

			if = {
				limit = {
					country_has_primary_culture = cu:british
					asian_ally_against_russia_trigger = yes
				}
				add = {
					value = 50
				}
			}
		}
		
		owe_obligation_chance = {
			value = 0
	
			add = {
				if = {
					limit = {
						scope:target_country = { country_rank = root.country_rank }
					}				
					value = 5
				}	
			}			
	
			add = {
				if = {
					limit = {
						scope:target_country = { country_rank > root.country_rank }
					}				
					value = 10
				}	
			}	

			if = {
				limit = {
					country_has_primary_culture = cu:british
					asian_ally_against_russia_trigger = yes
				}
				add = {
					value = 25
				}
			}		
		}	
	}
}
﻿rivalry = {
	groups= {
		general
	}
	requires_approval = no
	should_notify_third_parties = yes

	unlocking_technologies = {
		international_relations
	}
	
	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
			is_revolutionary = no
		}
	}
	
	possible = {
		# Might have these despite low relations due to a forced pact
		NOT = { has_diplomatic_pact = { who = scope:target_country type = alliance } }	
		NOT = { has_diplomatic_pact = { who = scope:target_country type = defensive_pact } }	
	}
	
	accept_effect = {
		add_lobby_appeasement_from_diplomacy_unidirectional = { 
			FIRST = root
			SECOND = scope:target_country 
			PRO_AMOUNT = -4
			ANTI_AMOUNT = 4
			FACTOR = appeasement_rivalry_declared
		}	
		hidden_effect = {
			scope:target_country = {
				create_diplomatic_catalyst = {
					type = catalyst_rivalry_declared
					target = root
				}		
			}
		}
	}
	
	pact = {
		is_hostile = yes
		is_rivalry = yes		
		is_two_sided_pact = no
		forced_duration = 12
		
		relations_progress_per_day = -1 # At -100, -1 relations
		relations_improvement_min = -20
		
		second_modifier = {
			country_pact_leverage_generation_mult = -0.9
		}

	 	requirement_to_maintain = {
			trigger = {
				has_diplomatic_relevance = scope:target_country
			}
		}
		
	 	requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = DIPLO_ACTION_RELATIONS_CORDIAL_OR_GREATER_NOT
					scope:target_country.relations:root < relations_threshold:cordial
				}		
			}
			
			show_about_to_break_warning = {
				scope:target_country.relations:root >= 17 # this is: cordial - 3
				scope:target_country.relations_change_rate:root > 0
			}					
		}
	
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NOT_DECENTRALIZED"
					NOT = { is_country_type = decentralized }
					scope:target_country = {
						NOT = { is_country_type = decentralized }
					}				
				}
			}
		}		
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_DIPLOMATIC_AUTONOMY"
					aggressive_diplomatic_plays_permitted = yes
					scope:target_country = { aggressive_diplomatic_plays_permitted = yes }					
				}
			}
		}		

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NO_SUBJECT_RELATION"
					NOT = {
						is_subject_of = scope:target_country
						scope:target_country = { is_subject_of = root }
					}
				}
			}
		}
		
	 	requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_VALID_RIVALS"
					countries_are_valid_rivals = yes
				}					
			}
		}
		
		manual_break_effect = {
			add_lobby_appeasement_from_diplomacy_unidirectional = { 
				FIRST = root
				SECOND = scope:target_country 
				PRO_AMOUNT = 4
				ANTI_AMOUNT = -4
				FACTOR = appeasement_rivalry_ended
			}		
		}
		
		auto_break_effect = {
			every_political_lobby = {
				limit = {
					is_political_lobby_type = lobby_pro_country
					target = scope:target_country
				}
				change_appeasement = {
					amount = 4
					factor = appeasement_rivalry_ended
				}
			}			
		
			if = {
				limit = { country_rank > scope:target_country.country_rank }				
				every_political_lobby = {
					limit = {
						is_political_lobby_type = lobby_anti_country
						target = scope:target_country
					}
					
					change_appeasement = {
						amount = 2
						factor = appeasement_rival_surpassed
					}
				}			
			}
			else = {
				every_political_lobby = {
					limit = {
						is_political_lobby_type = lobby_anti_country
						target = scope:target_country
					}
					
					change_appeasement = {
						amount = -4
						factor = appeasement_rivalry_ended
					}
				}				
			}
		}	
	}
	
	ai = {
		check_acceptance_for_will_break = no
		
		evaluation_chance = {
			value = 0.1
			
			add = {
				value = country_rank
				multiply = 0.05
			}			
		}		
	
		propose_score = {
			value = 10
		}
	
		will_propose = { 
			OR = {
				AND = {
					country_rank > rank_value:insignificant_power
					num_rivals < 2
				}
				AND = {
					country_rank > rank_value:minor_power
					num_rivals < 3
				}				
				num_rivals < 1
			}
			OR = {
				AND = {
					army_size >= 10
					has_attitude = {
						who = scope:target_country
						attitude = antagonistic
					}				
					OR = {
						AND = {
							country_rank >= scope:target_country.country_rank
							has_strategic_adjacency = scope:target_country					
						}
						AND = {
							country_rank = scope:target_country.country_rank
							OR = {
								country_rank = rank_value:great_power
								capital.region = scope:target_country.capital.region
							}				
						}					
					}						
				}
				AND = {
					NOT = {
						has_attitude = {
							who = scope:target_country
							attitude = conciliatory
						}						
					}
					scope:target_country = {
						has_diplomatic_pact = {
							who = root
							type = rivalry
						}										
					}					
				}
			}			
		}
		
		will_break = { 
			NOR = {
				has_attitude = {
					who = scope:target_country
					attitude = antagonistic
				}
				has_attitude = {
					who = scope:target_country
					attitude = belligerent
				}				
			}
			NAND = {
				NOT = {
					has_attitude = {
						who = scope:target_country
						attitude = conciliatory
					}						
				}
				scope:target_country = {
					has_diplomatic_pact = {
						who = root
						type = rivalry
					}										
				}					
			}
		}			
	}
}


﻿embargo = {
	groups= {
		general
	}
	requires_approval = no
	should_notify_third_parties = yes

	unlocking_technologies = {
		international_trade
	}
	
	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
			is_revolutionary = no
		}
	}
	
	possible = {
		# Might have these despite low relations due to a forced pact
		NOT = { has_diplomatic_pact = { who = scope:target_country type = trade_agreement } }	

		# You cannot embargo somebody who has secured foreign investment rights in your country
		NOT = { has_diplomatic_pact = { who = scope:target_country type = foreign_investment_rights } }

		# You cannot embargo somebody with whom you have foreign investment agreements
		NOT = { has_diplomatic_pact = { who = scope:target_country type = foreign_investment_agreement } }

		# Might be disallowed by power bloc
		NOT = {
			custom_tooltip = {
				text = "power_bloc_disallow_embargo_bool"
				is_in_same_power_bloc = scope:target_country
				power_bloc ?= {
					modifier:power_bloc_disallow_embargo_bool = yes
				}
			}
		}
	}

	accept_effect = {
		add_lobby_appeasement_from_diplomacy_unidirectional = { 
			FIRST = root
			SECOND = scope:target_country 
			PRO_AMOUNT = -2
			ANTI_AMOUNT = 2
			FACTOR = appeasement_embargo_declared
		}			
	}
	
	pact = {
		cost = 100
		forced_duration = 12
	
		is_hostile = yes
		is_embargo = yes		
		is_two_sided_pact = no
		
		relations_progress_per_day = -1 # At -100, -1 relations

		first_modifier = {
			country_pact_leverage_generation_mult = -0.5
		}
		
		requirement_to_maintain = {
			trigger = {
				has_diplomatic_relevance = scope:target_country
			}
		}	
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NOT_DECENTRALIZED"
					NOT = { is_country_type = decentralized }
					scope:target_country = {
						NOT = { is_country_type = decentralized }
					}				
				}
			}
		}		
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_DIPLOMATIC_AUTONOMY"
					aggressive_diplomatic_plays_permitted = yes
					scope:target_country = { aggressive_diplomatic_plays_permitted = yes }					
				}
			}
		}		

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NO_SUBJECT_RELATION"
					NOT = {
						is_subject_of = scope:target_country
						scope:target_country = { is_subject_of = root }
					}				
				}
			}
		}
		
	 	requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT
					scope:target_country.relations:root <= relations_threshold:poor
				}		
			}
			
			show_about_to_break_warning = {
				scope:target_country.relations:root >= -23 # this is: poor - 3
				scope:target_country.relations_change_rate:root > 0
			}					
		}	

		requirement_to_maintain = {
			trigger = {
				NOT = { has_law = law_type:law_isolationism }
			}
		}	

		requirement_to_maintain = {
			trigger = {
				NOT = { scope:target_country = { has_law = law_type:law_isolationism } }
			}
		}	

		requirement_to_maintain = {
			trigger = {
				is_junior_in_customs_union = no
			}
		}	

		requirement_to_maintain = {
			trigger = {
				scope:target_country = { is_junior_in_customs_union = no }
			}
		}	

		requirement_to_maintain = {
			trigger = {
				NOT = { scope:target_country = { has_treaty_port_in_country = root } }
			}
		}

		requirement_to_maintain = {
			trigger = {
				NOT = { 
					scope:target_country = { 
						has_diplomatic_pact = {
							who = root
							type = foreign_investment_rights
						}
					} 
				}
			}
		}

		requirement_to_maintain = {
			trigger = {
				NOT = { 
					scope:target_country = { 
						has_diplomatic_pact = {
							who = root
							type = foreign_investment_agreement
						}
					} 
				}
			}
		}			
		
		manual_break_effect = {
			add_lobby_appeasement_from_diplomacy_unidirectional = { 
				FIRST = root
				SECOND = scope:target_country 
				PRO_AMOUNT = 2
				ANTI_AMOUNT = -2
				FACTOR = appeasement_embargo_ended
			}		
		}
		
		
		auto_break_effect = {
			add_lobby_appeasement_from_diplomacy_unidirectional = { 
				FIRST = root
				SECOND = scope:target_country 
				PRO_AMOUNT = 2
				ANTI_AMOUNT = -2
				FACTOR = appeasement_embargo_ended
			}			
		}
	}
	
	ai = {
		check_acceptance_for_will_break = no
		max_influence_spending_fraction = 0.2
		
		evaluation_chance = {
			value = 0.1
			
			add = {
				value = country_rank
				multiply = 0.05
			}			
		}	
	
		propose_score = {
			value = 10

			if = {
				limit = {
					AND = {
						has_radical_leftist_government = no			
						scope:target_country = {
							has_radical_leftist_government = yes
						}
					}
					
				}
				multiply = 2
			}
	
			if = {
				limit = {
					AND = {
						has_radical_leftist_economy = no			
						scope:target_country = {
							has_radical_leftist_economy = yes
						}
					}
					
				}
				multiply = 2
			}	
		}
	
		will_propose = { 
			"scope:target_country.num_mutual_trade_route_levels_with_country(root)" > 0
			NOT = {
				has_attitude = {
					who = scope:target_country
					attitude = conciliatory
				}				
			}
			OR = {
				scope:target_country.relations:root <= relations_threshold:hostile
				scope:target_country.infamy >= infamy_threshold:pariah
				scope:target_country = {
					has_diplomatic_pact = {
						who = root
						type = embargo
					}				
				}						
			}
		}
		
		will_break = { 
			OR = {
				has_attitude = {
					who = scope:target_country
					attitude = conciliatory
				}				
				NOR = {
					scope:target_country.relations:root <= relations_threshold:hostile	
					scope:target_country.infamy >= infamy_threshold:pariah
					scope:target_country = {
						has_diplomatic_pact = {
							who = root
							type = embargo
						}				
					}				
				}			
			}
		}			
	}
}


﻿trade_agreement = {
	groups= {
		general
	}
	requires_approval = yes
	can_use_obligations = yes
	
	unlocking_technologies = {
		international_trade
	}
	
	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
			is_revolutionary = no
		}
	}
	
	possible = {
		NOT = {
			is_in_customs_union_with = scope:target_country
		}
			is_market_reachable_for_trade = scope:target_country.market
	}
	
	accept_effect = {
		add_lobby_appeasement_from_diplomacy_bidirectional = { 
			FIRST = root
			SECOND = scope:target_country
			PRO_AMOUNT = 2
			ANTI_AMOUNT = -2
			FACTOR = appeasement_trade_agreement_formed
		}	
	}
	
	pact = {
		cost = 50
	
		first_modifier = {
			country_pact_leverage_generation_add = 100
		}

		second_modifier = {
			country_pact_leverage_generation_add = 100
		}

		is_trade_agreement = yes
		can_be_used_in_sway_offers = yes
		sway_maneuvers_cost = 10
		
		relations_progress_per_day = 1 # At 100, +1 relations
		relations_improvement_max = 80	
	
		requirement_to_maintain = {
			trigger = {
				has_diplomatic_relevance = scope:target_country
			}
		}	
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NOT_DECENTRALIZED"
					NOT = { is_country_type = decentralized }
					scope:target_country = {
						NOT = { is_country_type = decentralized }
					}				
				}
			}
		}		
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_DIPLOMATIC_AUTONOMY"
					aggressive_diplomatic_plays_permitted = yes
					scope:target_country = { aggressive_diplomatic_plays_permitted = yes }					
				}
			}
		}		

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NO_SUBJECT_RELATION"
					NOT = {
						is_subject_of = scope:target_country
						scope:target_country = { is_subject_of = root }
					}
				}
			}
		}	
		
	 	requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT
					scope:target_country.relations:root > relations_threshold:poor
				}		
			}
			
			show_about_to_break_warning = {
				scope:target_country.relations:root <= -17 # this is: poor + 3
				scope:target_country.relations_change_rate:root < 0
			}					
		}	

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_AT_PEACE"
					NOT = { has_war_with = scope:target_country }
				}			
			}
		}	
		
		requirement_to_maintain = {
			trigger = {
				NOT = { has_law = law_type:law_isolationism }
			}
		}	

		requirement_to_maintain = {
			trigger = {
				NOT = { scope:target_country = { has_law = law_type:law_isolationism } }
			}
		}	

		requirement_to_maintain = {
			trigger = {
				is_junior_in_customs_union = no
			}
		}	

		requirement_to_maintain = {
			trigger = {
				scope:target_country = { is_junior_in_customs_union = no }
			}
		}			

		manual_break_effect = {
			change_relations = { country = scope:target_country value = -10 }
			add_lobby_appeasement_from_diplomacy_bidirectional = { 
				FIRST = root
				SECOND = scope:target_country 
				PRO_AMOUNT = -2
				ANTI_AMOUNT = 2
				FACTOR = appeasement_trade_agreement_broken
			}			
		}
		
		auto_break_effect = {
			if = {
				limit = { 
					NOR = { 
						is_subject_of = scope:target_country 
						scope:target_country = { is_subject_of = root }
					}
				}
				
				add_lobby_appeasement_from_diplomacy_bidirectional = { 
					FIRST = root
					SECOND = scope:target_country 
					PRO_AMOUNT = -2
					ANTI_AMOUNT = 2
					FACTOR = appeasement_trade_agreement_broken
				}				
			}		
		}
	}

	ai = {
		check_acceptance_for_will_break = yes
		check_acceptance_for_will_propose = yes
		
		evaluation_chance = {
			value = 0.1
			
			add = {
				value = country_rank
				multiply = 0.05
			}			
		}	
	
		accept_score = {
			value = 0
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}			
			
			if = {
				limit = { 
					"scope:actor.num_mutual_trade_route_levels_with_country(root)" < 1
				}
				
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_NO_MUTUAL_TRADE_ROUTES"
					value = -1000
				}				
			}
			else = {
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_MUTUAL_TRADE_ROUTES"
					value = "scope:actor.num_mutual_trade_route_levels_with_country(root)"
					multiply = 2
					max = 75
				}				
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_GDP"
				value = "scope:actor.ai_gdp_comparison(root)"
				multiply = 2
				min = -10
				max = 10
			}	

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.25
					max = 10
				}					
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.25
					min = -10
				}					
			}							
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = genial
							}
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}							
							has_attitude = {
								who = scope:actor
								attitude = loyal
							}
							has_attitude = {
								who = scope:actor
								attitude = protective
							}							
						}
					}
					value = 50
				}
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = cooperative
						}
					}
					value = 25
				}				
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = cautious
						}
					}
					value = -50
				}					
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = domineering
							}	
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}	
							has_attitude = {
								who = scope:actor
								attitude = rebellious
							}							
						}
					}
					value = -1000
				}							
			}			

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"								
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:cordial
						"relations(scope:actor)" < relations_threshold:amicable
					}
					value = 10
				}				
				else_if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 25
				}
				else_if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}				
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}	
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}					
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INCOMPATIBLE_ECONOMIC_SYSTEMS"
				if = {
					limit = {
						OR = {
							AND = {
								scope:actor = { has_radical_leftist_economy = no }		
								scope:target_country = { has_radical_leftist_economy = yes }							
							}
							AND = {
								scope:actor = { has_radical_leftist_economy = yes }		
								scope:target_country = { has_radical_leftist_economy = no }							
							}							
						}	
					}
					value = -50
				}
			}	
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_PRO_LOBBY_CLOUT"					
				value = "scope:actor.lobby_foreign_pro_clout(scope:target_country)"
				multiply = 50
				max = 25
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_ANTI_LOBBY_CLOUT"					
				value = "scope:actor.lobby_foreign_anti_clout(scope:target_country)"
				multiply = -50
				min = -25
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_TARGET_PRO_LOBBY_CLOUT"					
				value = "scope:target_country.lobby_foreign_pro_clout(scope:actor)"
				multiply = 100
				max = 25
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_TARGET_ANTI_LOBBY_CLOUT"					
				value = "scope:target_country.lobby_foreign_anti_clout(scope:actor)"
				multiply = -100
				min = -25
			}	

			if = {
				limit = {
					scope:actor = {
						has_variable = pro_lobby_proposal_trade_agreement
						var:pro_lobby_opportunity_target ?= scope:target_country
					}
				}
				add = {
					desc = "LOBBY_OPPORTUNITY_BONUS"
					value = 100
				}	
			}	
			
			if = {
				limit = {
					scope:actor = {
						has_variable = anti_lobby_proposal_trade_agreement
						var:anti_lobby_opportunity_target ?= scope:target_country
					}
				}
				add = {
					desc = "LOBBY_OPPORTUNITY_BONUS"
					value = 50
				}	
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_PRINCIPLE_SACRED_CIVICS"

				if = {
					limit = {
						AND = {
							scope:actor.power_bloc ?= {
								OR = {
									has_principle = principle:principle_sacred_civics_1
									has_principle = principle:principle_sacred_civics_2
									has_principle = principle:principle_sacred_civics_3
								}
							}
							scope:actor.religion = root.religion
						}
					}
					add = 20
				}
			}
		}	

		propose_score = {
			value = 10
		}

		propose_break_score = {
			value = 10
		}
		
		use_obligation_chance = {
			value = 0
	
			add = {
				if = {
					limit = {
						scope:target_country = { country_rank = root.country_rank }
					}					
					value = 25
				}			
			}
	
			add = {
				if = {
					limit = {
						scope:target_country = { country_rank > root.country_rank }
					}					
					value = 50
				}			
			}
		}
		
		owe_obligation_chance = {
			value = 0			
		}	
	}
}
﻿bankroll = {
	groups= {
		general
	}
	requires_approval = no
	should_notify_third_parties = no

	unlocking_technologies = {
		central_banking
	}
	
	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
		}
	}
	
	possible = {}
	
	pact = {	
		cost = 100
	
		is_two_sided_pact = no
		show_in_outliner = yes
		can_be_used_in_sway_offers = yes
		sway_maneuvers_cost = 10

		relations_progress_per_day = 3 # At 100, +1 relations
		relations_improvement_max = 80
		
		income_transfer = 0.20
		second_country_gets_income_transfer = yes
		income_transfer_based_on_second_country = yes
		
		second_modifier = {
			country_pact_leverage_generation_add = 200
		}
		
		weekly_effect = {
			if = {
				limit = { 
					NOT = { scope:diplomatic_pact ?= { is_forced_pact = yes } }
				}		
				custom_tooltip = {
					text = bankroll_weekly_obligation_effect
					if = {
						limit = {
							root = {
								owes_obligation_to = scope:target_country			
							}						
						}
						random_list = { 
							998 = {}
							2 = { root = { set_owes_obligation_to = { country = scope:target_country setting = no } } }
						}				
					}		
					else_if = {
						limit = {
							NOT = { 
								scope:target_country = {
									owes_obligation_to = root			
								}						
							}
						}
						random_list = { 
							998 = {}
							2 = { scope:target_country = { set_owes_obligation_to = { country = root setting = yes } } }
						}
					}				
				}			
			}
		} 
		
		requirement_to_maintain = {
			trigger = {
				has_diplomatic_relevance = scope:target_country
			}
		}

	 	requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT
					scope:target_country.relations:root > relations_threshold:poor
				}		
			}
			
			show_about_to_break_warning = {
				scope:target_country.relations:root <= -17 # this is: poor + 3
				scope:target_country.relations_change_rate:root < 0
			}					
		}	

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NOT_DECENTRALIZED"
					NOT = { is_country_type = decentralized }
					scope:target_country = {
						NOT = { is_country_type = decentralized }
					}				
				}
			}
		}				
	
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_AT_PEACE"
					NOT = { has_war_with = scope:target_country }
				}			
			}
		}		

		requirement_to_maintain = {
			trigger = {
				country_rank >= scope:target_country.country_rank
			}
		}

		requirement_to_maintain = {
			trigger = {
				in_default = no
			}
		}			
	}
	
	ai = {
		max_influence_spending_fraction = 0.20
		
		evaluation_chance = {
			value = 0.0
			
			if = {
				limit = { country_rank >= rank_value:major_power }
				add = {
					value = country_rank
					multiply = 0.05
				}				
			}			
		}		
		
		# This is only used for determining the value of a bankroll in sways, so it follows different logic from normal action acceptance
		# The format here is as if scope:actor was asking if root wants a bankroll
		accept_score = {
			value = 0

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = 5
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RANK"
	
				if = {
					limit = { scope:actor = { country_rank < root.country_rank } }
					value = -5
				}
				
				if = {
					limit = { scope:actor = { country_rank > root.country_rank } }
					value = 5
				}				
			}		
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_GDP"
				value = "scope:actor.ai_gdp_comparison(root)"
				max = 20
				min = -20
			}
			
			if = {
				limit = { scaled_debt >= 0.05 }
				
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_DEBT"
					value = scaled_debt
					multiply = 30	
					min = 1
				}					
			}
			else_if = {
				limit = { scaled_gold_reserves >= 0.05 }
				
				subtract = {
					desc = "DIPLOMATIC_ACCEPTANCE_GOLD_RESERVES"				
					value = scaled_gold_reserves
					multiply = 20
					min = 1
				}						
			}
		}		
	
		# This is only used for determining the value of a bankroll in sways, so it follows different logic from normal action acceptance
		# The format here is as if scope:actor was asking for a bankroll from root
		junior_accept_score = {
			value = 0

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -10
			}			
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RANK"
	
				if = {
					limit = { scope:actor = { country_rank > root.country_rank } }
					value = -5
				}
				
				if = {
					limit = { scope:actor = { country_rank < root.country_rank } }
					value = 5
				}				
			}				

			subtract = {
				value = 10
				multiply = scope:actor.num_income_transfer_pacts
			}

			subtract = {
				value = 10
				multiply = num_income_transfer_pacts
			}				
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_GDP"
				value = "scope:actor.ai_gdp_comparison(root)"
				add = 2
				multiply = -10
				min = -100
				max = 0
			}
			
			if = {
				limit = { scaled_debt >= 0.05 }
				
				subtract = {
					desc = "DIPLOMATIC_ACCEPTANCE_DEBT"
					value = scaled_debt
					multiply = 100	
					min = 1
				}					
			}
			else_if = {
				limit = { scaled_gold_reserves >= 0.05 }
				
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_GOLD_RESERVES"				
					value = scaled_gold_reserves
					multiply = 25
					min = 1
				}						
			}
		}	
	
		propose_score = {
			value = 10

			if = {
				limit = {
					exists = c:CIR
					has_journal_entry = je_great_game_control
					country_has_primary_culture = cu:british
					scope:target_country = {
						c:CIR ?= this
					}
				}
				add = {
					value = 50
				}		
			}
		}
	
		will_propose = { 
			scaled_debt <= 0
			is_at_war = no
			weekly_net_fixed_income > 0	
			has_attitude = {
				who = scope:target_country
				attitude = protective
			}
			OR = {
				num_income_transfer_pacts < 1
				AND = {
					num_income_transfer_pacts < 2
					income >= 200000
				}
				AND = {
					num_income_transfer_pacts < 3
					income >= 400000
				}				
			}
			
			OR = {
				root = {
					owes_obligation_to = scope:target_country			
				}	
				NOT = { 
					scope:target_country = {
						owes_obligation_to = root			
					}						
				}
				AND = {
					is_at_war = no
					scope:target_country = { is_at_war = yes }
				}			
			}		
			# We want to have at least five times their income, and at least 50k income in general
			OR = {
				AND = {
					income >= 50000
					weekly_net_fixed_income >= 4000
					scope:target_country.income <= 10000
				}
				AND = {
					income >= 75000
					weekly_net_fixed_income >= 6000
					scope:target_country.income <= 15000
				}				
				AND = {
					income >= 100000
					weekly_net_fixed_income >= 8000
					scope:target_country.income <= 20000
				}
				AND = {
					income >= 125000
					weekly_net_fixed_income >= 10000
					scope:target_country.income <= 25000
				}
				AND = {
					income >= 150000
					weekly_net_fixed_income >= 12000
					scope:target_country.income <= 30000
				}	
				AND = {
					income >= 175000
					weekly_net_fixed_income >= 14000
					scope:target_country.income <= 35000
				}
				AND = {
					income >= 200000
					weekly_net_fixed_income >= 16000
					scope:target_country.income <= 40000
				}
				AND = {
					income >= 225000
					weekly_net_fixed_income >= 18000
					scope:target_country.income <= 45000
				}	
				AND = {
					income >= 250000
					weekly_net_fixed_income >= 20000
					scope:target_country.income <= 50000
				}					
			}			
		}
		
		will_break = { 
			NOT = {
				AND = {
					has_variable = forced_bankroll_time
					var:forced_bankroll_time ?= scope:target_country
				}
			}
			OR = {		
				scaled_debt > 0.25
				AND = {
					scaled_debt > 0
					OR = {
						weekly_net_fixed_income < 0	
						is_at_war = yes
					}				
				}				
				NOT = {
					has_attitude = {
						who = scope:target_country
						attitude = protective
					}				
				}
				num_income_transfer_pacts > 3
				AND = {
					num_income_transfer_pacts > 1
					OR = {
						weekly_net_fixed_income < -10000	
						income < 300000
					}			
				}
				AND = {
					num_income_transfer_pacts > 2
					OR = {
						weekly_net_fixed_income < -5000					
						income < 500000
					}
				}				
				NOR = {
					root = {
						owes_obligation_to = scope:target_country			
					}	
					NOT = { 
						scope:target_country = {
							owes_obligation_to = root			
						}						
					}
					AND = {
						is_at_war = no
						scope:target_country = { is_at_war = yes }
					}			
				}							
				# Threshold for breaking off a bankroll is higher than for starting it
				# We also don't look at weekly_net_fixed_income here since starting a bankroll changes it
				NOR = {
					AND = {
						income >= 40000
						scope:target_country.income <= 12500
					}				
					AND = {
						income >= 50000
						scope:target_country.income <= 15000
					}
					AND = {
						income >= 75000
						scope:target_country.income <= 20000
					}				
					AND = {
						income >= 100000
						scope:target_country.income <= 25000
					}
					AND = {
						income >= 125000
						scope:target_country.income <= 30000
					}
					AND = {
						income >= 150000
						scope:target_country.income <= 35000
					}	
					AND = {
						income >= 175000
						scope:target_country.income <= 40000
					}
					AND = {
						income >= 200000
						scope:target_country.income <= 45000
					}
					AND = {
						income >= 225000
						scope:target_country.income <= 50000
					}
					AND = {
						income >= 250000
						scope:target_country.income <= 55000
					}					
				}						
			}
		}			
	}
}


﻿war_reparations = {
	groups= {
		general
	}
	requires_approval = no
	should_notify_third_parties = no
	show_in_lens = no
	can_select_to_break = no

	selectable = {
		always = no
	}
	
	pact = {	
		is_two_sided_pact = no
		
		income_transfer = 0.1
		second_country_gets_income_transfer = no
		income_transfer_based_on_second_country = yes

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_DURATION_NOT_EXPIRED"
					always = no # always auto breaks when forced duration is over
				}			
			}
		}		
	}
	
	ai = {
		evaluation_chance = {
			value = 0
		}				
	}	
}


﻿humiliation = {
	groups= {
		general
	}
	requires_approval = no
	should_notify_third_parties = no
	show_in_lens = no
	can_select_to_break = no

	selectable = {
		always = no
	}
	
	pact = {	
		is_two_sided_pact = no
		is_humiliation = yes
	
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_DURATION_NOT_EXPIRED"
					always = no # always auto breaks when forced duration is over
				}			
			}
		}	
	}
	
	ai = {
		evaluation_chance = {
			value = 0
		}				
	}
}


﻿protectorate = {
	groups= {
		general
	}
	show_in_lens = no

	potential = {  # Only created through diplomatic demands
		always = no
	}
	
	pact = {	
		cost = 25
		has_junior_participant = yes
		recipient_pays_maintenance = no	
		
		relations_progress_per_day = 1
		relations_improvement_max = 50
		
		subject_type = subject_type_protectorate	
		
		second_modifier = {
			country_convoy_contribution_to_market_owner_add = 0.25
		}
		
		actor_can_break = {
			is_diplomatic_play_committed_participant = no
		}

		target_can_break = { # Has to use diplomatic play to break
			always = no
		}

		manual_break_effect = {
			create_bidirectional_truce = { country = scope:target_country months = 60 }
		}
		
		auto_break_effect = {
			create_bidirectional_truce = { country = scope:target_country months = 60 }
		}
	}
	
	ai = {
		evaluation_chance = {
			value = 0
		}	
	
		will_break = {
			always = no			
		}		
	}	
}

﻿puppet = {
	groups= {
		general # for breaking only
	}
	show_in_lens = no

	potential = { # Only created through diplomatic plays
		always = no
	}

	pact = {
		cost = 25
		has_junior_participant = yes
		recipient_pays_maintenance = no
		income_transfer = 0.3
		second_country_gets_income_transfer = no
		income_transfer_based_on_second_country = yes
		
		relations_progress_per_day = 1
		relations_improvement_max = 50

		subject_type = subject_type_puppet
		
		second_modifier = {
			country_law_enactment_imposition_success_add = 0.1
			country_convoy_contribution_to_market_owner_add = 0.5
		}
		
		actor_can_break = {
			is_diplomatic_play_committed_participant = no
		}

		target_can_break = { # Has to use diplomatic play to break
			always = no
		}		

		manual_break_effect = {
			create_bidirectional_truce = { country = scope:target_country months = 60 }
		}
		
		auto_break_effect = {
			create_bidirectional_truce = { country = scope:target_country months = 60 }
		}		
	}
	
	ai = {
		evaluation_chance = {
			value = 0
		}		
	
		will_break = {
			always = no			
		}		
	}
}

﻿dominion = {
	groups= {
		general # for breaking only
	}
	show_in_lens = no

	potential = { # Only created through diplomatic plays
		always = no
	}
	
	pact = {
		cost = 25
	
		has_junior_participant = yes
		recipient_pays_maintenance = no
		income_transfer = 0.25
		second_country_gets_income_transfer = no
		income_transfer_based_on_second_country = yes
		
		relations_progress_per_day = 1
		relations_improvement_max = 50

		subject_type = subject_type_dominion
		
		second_modifier = {
			country_convoy_contribution_to_market_owner_add = 0.5
		}
		
		actor_can_break = {
			is_diplomatic_play_committed_participant = no
		}

		target_can_break = { # Has to use diplomatic play to break
			always = no
		}
		
		manual_break_effect = {
			create_bidirectional_truce = { country = scope:target_country months = 60 }
		}
		
		auto_break_effect = {
			create_bidirectional_truce = { country = scope:target_country months = 60 }
		}		
	}
	
	ai = {
		evaluation_chance = {
			value = 0
		}		
	
		will_break = {
			always = no			
		}		
	}
}

﻿personal_union = {
	groups= {
		general # for breaking only
	}
	show_in_lens = no

	potential = { # Only created through diplomatic plays
		always = no
	}
	
	pact = {
		cost = 25
		has_junior_participant = yes
		recipient_pays_maintenance = no
		
		relations_progress_per_day = 1
		relations_improvement_max = 50
		
		subject_type = subject_type_personal_union
		
		second_modifier = {
			country_law_enactment_imposition_success_add = 0.1
			country_convoy_contribution_to_market_owner_add = 0.5
		}
		
		actor_can_break = {
			is_diplomatic_play_committed_participant = no
		}

		target_can_break = { # Has to use diplomatic play to break
			always = no
		}	
		
		requirement_to_maintain = {
			trigger = { has_law = law_type:law_monarchy }
		}
		
		requirement_to_maintain = {
			trigger = { scope:target_country = { has_law = law_type:law_monarchy } }
		}	
		
		manual_break_effect = {
			create_bidirectional_truce = { country = scope:target_country months = 60 }
		}
		
		auto_break_effect = {
			create_bidirectional_truce = { country = scope:target_country months = 60 }
		}		
	}
	
	ai = {
		evaluation_chance = {
			value = 0
		}		
	
		will_break = {
			always = no			
		}		
	}
}

﻿vassal = {
	groups= {
		general # for breaking only
	}
	show_in_lens = no

	potential = { # Only created through diplomatic plays
		always = no
	}
	
	pact = {
		cost = 25
		has_junior_participant = yes
		recipient_pays_maintenance = no
		income_transfer = 0.3
		second_country_gets_income_transfer = no
		income_transfer_based_on_second_country = yes
		
		relations_progress_per_day = 1
		relations_improvement_max = 50
		
		subject_type = subject_type_vassal
		
		second_modifier = {
			country_convoy_contribution_to_market_owner_add = 0.5
		}
		
		actor_can_break = {
			is_diplomatic_play_committed_participant = no
		}

		target_can_break = { # Has to use diplomatic play to break
			always = no
		}	
		
		manual_break_effect = {
			create_bidirectional_truce = { country = scope:target_country months = 60 }
		}
		
		auto_break_effect = {
			create_bidirectional_truce = { country = scope:target_country months = 60 }
		}		
	}
	
	ai = {
		evaluation_chance = {
			value = 0
		}		
	
		will_break = {
			always = no			
		}		
	}
}

﻿tributary = {
	groups= {
		general # for breaking only
	}
	show_in_lens = no

	potential = { # Only created through diplomatic plays
		always = no
	}

	pact = {	
		cost = 25
		has_junior_participant = yes
		recipient_pays_maintenance = no

		income_transfer = 0.2
		second_country_gets_income_transfer = no
		income_transfer_based_on_second_country = yes
		
		relations_progress_per_day = 1
		relations_improvement_max = 50

		subject_type = subject_type_tributary
		
		second_modifier = {
			country_convoy_contribution_to_market_owner_add = 0.25
		}
		
		actor_can_break = {
			is_diplomatic_play_committed_participant = no
		}

		target_can_break = { # Has to use diplomatic play to break
			always = no
		}			

		manual_break_effect = {
			create_bidirectional_truce = { country = scope:target_country months = 60 }
		}
		
		auto_break_effect = {
			create_bidirectional_truce = { country = scope:target_country months = 60 }
		}		
	}
	
	ai = {
		evaluation_chance = {
			value = 0
		}		
	
		will_break = {
			always = no			
		}		
	}	
}

﻿colonization_rights = {
	groups= {
		general
	}
	requires_approval = no
	should_notify_third_parties = no
	show_in_lens = no
	can_select_to_break = no

	selectable = {
		always = no
	}
	
	pact = {	
		is_two_sided_pact = no
		is_colonization_rights = yes
	
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_DURATION_NOT_EXPIRED"
					always = no # always auto breaks when forced duration is over
				}			
			}
		}		
	}
	
	ai = {
		evaluation_chance = {
			value = 0		
		}	
	}
}


﻿join_power_bloc = {
	requires_approval = yes
	can_use_obligations = yes
	should_notify_third_parties = yes
	groups = { general }
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/power_bloc_join_request"

	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
		is_subject = no
	}

	potential = {
		scope:target_country = {
			is_power_bloc_leader = yes
		}		
	}

	possible = {
		# Must not be able to immediately start a power struggle
		custom_tooltip = {
			text = "NO_POWER_STRUGGLE_BLOC_JOIN"
			OR = {
				prestige < scope:target_country.prestige
				country_rank < scope:target_country.country_rank
			}		
		}	
	
		scope:target_country.power_bloc ?= {
			leverage_advantage = {
				target = root
				value >= leverage_threshold_to_invite
			}

			NOT = {
				any_power_bloc_member = {
					is_diplomatic_play_enemy_of = root
				}
			}
		}
	}

	accept_effect = {
		join_power_bloc = scope:target_country
	}
	
	decline_effect = {
		change_relations = { country = scope:target_country value = -20 } 
		
		# Remove the entire leverage advantage if they say no
		scope:target_country.power_bloc ?= { 
			add_leverage = { 
				target = scope:actor 
				value = {
					value = "leverage_advantage(scope:actor)"
					multiply = -1
				}
			} 
		}
	}		

	ai = {
		evaluation_chance = {
			value = 0.01 # AI shouldn't volunteer into power blocs all that often
		}		
	
		accept_score = {
			value = 0
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_LEVERAGE_OF_TARGET"
				value = "power_bloc.leverage_advantage(scope:actor)"
				multiply = 0.5
				min = 0
				max = 200
			}

			### Impact on Cohesion
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_DECREASED_COHESION"
				value = "power_bloc.predicted_cohesion_percentage_with(scope:actor)"
				subtract = "power_bloc.current_cohesion_number"
				multiply = 2 # -2 acceptance for each lost point of cohesion
				
				if = {
					limit = { "power_bloc.current_cohesion_number" <= 20 }
					multiply = 5
				}
				else_if = {
					limit = { "power_bloc.current_cohesion_number" <= 40 }
					multiply = 2
				}			
				
				max = 0
			}

			### How we fit their selected identity
			add = ai_accept_join_request_score
			
			# Ideological opinion is always a factor, but much weaker for non ideological unions
			# Score for ideological unions is handled in ai_accept_join_request_score script value
			if = {
				limit = {
					scope:target_country.power_bloc ?= {
						NOT = { has_identity = identity:identity_ideological_union }
					}
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.25
					max = 25
					min = -25
				}
			}				
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = genial
							}
							has_attitude = {
								who = scope:actor
								attitude = protective
							}
						}
					}
					value = 100
				}
				else_if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = cooperative
							}
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}							
						}
					}
					value = 50
				}
				else_if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = domineering
						}
					}
					value = 25
				}
				else_if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}
						}
					}
					value = -100
				}
				else = {
					value = -25
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"
				if = {
					limit = {
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 0
				}
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 50
				}	
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 100
				}
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -5
				}	
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -10
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -25
				}
			}
			
			if = {
				limit = {
					scope:actor = {
						has_variable = pro_lobby_proposal_power_bloc
						var:pro_lobby_opportunity_target ?= scope:target_country
					}
				}
				add = {
					desc = "LOBBY_OPPORTUNITY_BONUS"
					value = 100
				}	
			}	
			
			if = {
				limit = {
					scope:actor = {
						has_variable = anti_lobby_proposal_power_bloc
						var:anti_lobby_opportunity_target ?= scope:target_country
					}
				}
				add = {
					desc = "LOBBY_OPPORTUNITY_BONUS"
					value = 50
				}	
			}
		}
		
		will_propose = {  
			would_accept_diplomatic_action = {
				actor = scope:target_country
				type = invite_to_power_bloc
			}
		}
		
		propose_score = {
			value = 20
		}

		use_obligation_chance = {
			value = 25
		}

		owe_obligation_chance = {
			value = 0
		}
	}
}

﻿foreign_investment_agreement = {
	groups= {
		general
	}
	requires_approval = yes
	should_notify_third_parties = yes
	can_use_obligations = yes
	confirmation_sound = "event:/SFX/UI/MapInteraction/diplomatic_action_foreign_investment_agreement_request"

	unlocking_technologies = {
		stock_exchange
	}

	selectable = {
		has_dlc_feature = foreign_investment
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
			is_revolutionary = no
		}
		has_dlc_feature = foreign_investment
	}

	accept_effect = {
		add_lobby_appeasement_from_diplomacy_unidirectional = { 
			FIRST = root
			SECOND = scope:target_country 
			PRO_AMOUNT = 3
			ANTI_AMOUNT = -3
			FACTOR = appeasement_foreign_investment_agreement_formed
		}	
		if = {
			limit = {
				has_diplomatic_pact = {
					who = scope:target_country
					type = foreign_investment_rights
				}			
			}
			
			remove_diplomatic_pact = {
				country = scope:target_country
				type = foreign_investment_rights
			}	
		}
		else_if = {
			limit = {
				scope:target_country = {
					has_diplomatic_pact = {
						who = scope:actor
						type = foreign_investment_rights
					}	
				}
			}

			scope:target_country = {
				remove_diplomatic_pact = {
					country = scope:actor
					type = foreign_investment_rights
				}	
			}
		}
	}

	pact = {
		cost = 50
		is_two_sided_pact = yes
		is_foreign_investment_rights = yes

		relations_progress_per_day = 1  # At 100, +1 relations
		relations_improvement_max = 80

		first_modifier = {
			country_pact_leverage_generation_add = 150
		}

		second_modifier = {
			country_pact_leverage_generation_add = 150
		}

		requirement_to_maintain = {
			trigger = {
				has_diplomatic_relevance = scope:target_country
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NO_SUBJECT_RELATION"
					NOT = {
						is_subject_of = scope:target_country
						scope:target_country = { is_subject_of = root }
					}
				}
			}
		}
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_DIPLOMATIC_AUTONOMY"
					aggressive_diplomatic_plays_permitted = yes
					scope:target_country = { aggressive_diplomatic_plays_permitted = yes }					
				}
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NOT_DECENTRALIZED"
					NOT = { is_country_type = decentralized }
					scope:target_country = {
						NOT = { is_country_type = decentralized }
					}
				}
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT
					scope:target_country.relations:root > relations_threshold:poor
				}
			}

			show_about_to_break_warning = {
				scope:target_country.relations:root <= -17 # this is: poor + 3
				scope:target_country.relations_change_rate:root < 0
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_AT_PEACE"
					NOT = { has_war_with = scope:target_country }
				}
			}
		}

		requirement_to_maintain = {
			trigger = {
				NOT = { has_law = law_type:law_isolationism }
			}
		}

		requirement_to_maintain = {
			trigger = {
				NOT = { scope:target_country = { has_law = law_type:law_isolationism } }
			}
		}

		requirement_to_maintain = {
			trigger = {
				NOT = {
					has_war_with = scope:target_country
				}
			}
		}

		manual_break_effect = {
			change_relations = { country = scope:target_country value = -10 }
			
			if = {
				limit = { 
					NOR = { 
						is_subject_of = scope:target_country 
						scope:target_country = { is_subject_of = root }
					}
				}
				
				add_lobby_appeasement_from_diplomacy_unidirectional = { 
					FIRST = root
					SECOND = scope:target_country 
					PRO_AMOUNT = -3
					ANTI_AMOUNT = 3
					FACTOR = appeasement_foreign_investment_agreement_broken
				}				
			}			
		}

		auto_break_effect = {
			if = {
				limit = { 
					NOR = { 
						is_subject_of = scope:target_country 
						scope:target_country = { is_subject_of = root }
					}
				}
				
				add_lobby_appeasement_from_diplomacy_unidirectional = { 
					FIRST = root
					SECOND = scope:target_country 
					PRO_AMOUNT = -3
					ANTI_AMOUNT = 3
					FACTOR = appeasement_foreign_investment_agreement_broken
				}				
			}				
		}
	}
	
	ai = {		
		check_acceptance_for_will_break = yes
		check_acceptance_for_will_propose = yes
		
		evaluation_chance = {
			value = 0.1
			
			add = {
				value = country_rank
				multiply = 0.05
			}			
		}		
			
		accept_score = {
			value = 0

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_GDP"
				value = "scope:actor.ai_gdp_comparison(root)"
				multiply = 2
				min = -20
				max = 20
			}					
			
			if = {
				limit = { 
					has_strategy = ai_strategy_economic_imperialism
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ECONOMIC_IMPERIALISM"
					add = -25
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_MUTUAL_TRADE_ROUTES"
				value = "scope:actor.num_mutual_trade_route_levels_with_country(root)"
				multiply = 0.5
				max = 25
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RANK"

				if = {
					limit = { scope:actor = { country_rank > root.country_rank } }
					value = 20
				}

				if = {
					limit = { scope:actor = { country_rank < root.country_rank } }
					value = -20
				}
			}
			
			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					max = 20
				}					
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					min = -20
				}					
			}	
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = loyal
							}
							has_attitude = {
								who = scope:actor
								attitude = genial
							}							
						}
					}
					value = 40
				}
				
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}	
							has_attitude = {
								who = scope:actor
								attitude = cooperative
							}							
						}
					}
					value = 20
				}
				
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = protective
							}		
							has_attitude = {
								who = scope:actor
								attitude = cautious
							}							
						}					
					}
					value = -50
				}
				
				if = {
					limit = {
						OR = {						
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = domineering
							}
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}
							has_attitude = {
								who = scope:actor
								attitude = rebellious
							}
						}
					}
					value = -1000
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 25
				}
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}
				else_if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				else_if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_PRINCIPLE_SACRED_CIVICS"

				if = {
					limit = {
						AND = {
							scope:actor.power_bloc ?= {
								OR = {
									has_principle = principle:principle_sacred_civics_1
									has_principle = principle:principle_sacred_civics_2
									has_principle = principle:principle_sacred_civics_3
								}
							}
							scope:actor.religion = root.religion
						}
					}
					add = 20
				}
			}	
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_PRO_LOBBY_CLOUT"					
				value = "scope:actor.lobby_foreign_pro_clout(scope:target_country)"
				multiply = 50
				max = 25
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_ANTI_LOBBY_CLOUT"					
				value = "scope:actor.lobby_foreign_anti_clout(scope:target_country)"
				multiply = -50
				min = -25
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_TARGET_PRO_LOBBY_CLOUT"					
				value = "scope:target_country.lobby_foreign_pro_clout(scope:actor)"
				multiply = 100
				max = 25
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_TARGET_ANTI_LOBBY_CLOUT"					
				value = "scope:target_country.lobby_foreign_anti_clout(scope:actor)"
				multiply = -100
				min = -25
			}	

			if = {
				limit = {
					scope:actor = {
						has_variable = pro_lobby_proposal_investment_agreement
						var:pro_lobby_opportunity_target ?= scope:target_country
					}
				}
				add = {
					desc = "LOBBY_OPPORTUNITY_BONUS"
					value = 100
				}	
			}
			
			if = {
				limit = {
					scope:actor = {
						has_variable = pro_lobby_proposal_investment_agreement
						var:anti_lobby_opportunity_target ?= scope:target_country
					}
				}
				add = {
					desc = "LOBBY_OPPORTUNITY_BONUS"
					value = 50
				}	
			}
		}
		
		will_break = { 	
			OR = {
				has_attitude = {
					who = scope:target_country
					attitude = antagonistic
				}
				has_attitude = {
					who = scope:target_country
					attitude = belligerent
				}
				has_attitude = {
					who = scope:target_country
					attitude = rebellious
				}
			}
		}
		
		propose_score = {
			value = 10
		}

		propose_break_score = {
			value = 10
		}

		use_obligation_chance = {
			value = 25
		}

		owe_obligation_chance = {
			value = 15
		}		
	}
}

﻿foreign_investment_rights = {
	groups= {
		general
	}
	requires_approval = yes
	should_notify_third_parties = yes
	confirmation_sound = "event:/SFX/UI/MapInteraction/diplomatic_action_foreign_investment_rights_request"

	unlocking_technologies = {
		stock_exchange
	}

	selectable = {
		has_dlc_feature = foreign_investment
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
			is_revolutionary = no
		}
	
		NOT = {
			has_diplomatic_pact = {
				who = scope:target_country
				type = foreign_investment_agreement
			}			
		}
	}

	pact = {
		cost = 50
		recipient_pays_maintenance = no

		second_modifier = {
			country_pact_leverage_generation_add = 200
		}

		is_two_sided_pact = yes
		is_foreign_investment_rights = yes
		has_junior_participant = yes

		relations_progress_per_day = 0.5  # At 100, +1 relations
		relations_improvement_max = 50

		can_be_used_in_sway_offers = yes
		sway_maneuvers_cost = 10

		requirement_to_maintain = {
			trigger = {
				has_diplomatic_relevance = scope:target_country
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT
					scope:target_country.relations:root > relations_threshold:poor
				}
			}

			show_about_to_break_warning = {
				scope:target_country.relations:root <= -17 # this is: poor + 3
				scope:target_country.relations_change_rate:root < 0
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_AT_PEACE"
					NOT = { has_war_with = scope:target_country }
				}
			}
		}

		requirement_to_maintain = {
			trigger = {
				NOT = { has_law = law_type:law_isolationism }
			}
		}

		requirement_to_maintain = {
			trigger = {
				NOT = { scope:target_country = { has_law = law_type:law_isolationism } }
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NOT_DECENTRALIZED"
					NOT = { is_country_type = decentralized }
					scope:target_country = {
						NOT = { is_country_type = decentralized }
					}
				}
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NO_SUBJECT_RELATION"
					NOT = {
						is_subject_of = scope:target_country
						scope:target_country = { is_subject_of = root }
					}
				}
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_DIPLOMATIC_AUTONOMY"
					aggressive_diplomatic_plays_permitted = yes
					scope:target_country = { aggressive_diplomatic_plays_permitted = yes }					
				}
			}
		}
		
		manual_break_effect = {
			change_relations = { country = scope:target_country value = -10 }
		}
		
		auto_break_effect = {}
	}

    ai = {
		check_acceptance_for_will_break = yes
		check_acceptance_for_will_propose = yes
		
		evaluation_chance = {
			value = 0.1
			
			add = {
				value = country_rank
				multiply = 0.05
			}			
		}			

		# This is the acceptance score for the senior part of the foreign_investment_rights (used for 'grant_foreign_investment_rights' action and checking AI in both directions)
		accept_score = {
			value = 0

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}

			if = {
				limit = { 
					has_strategy = ai_strategy_economic_imperialism
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ECONOMIC_IMPERIALISM"
					add = 50
				}
			}

			if = {
				limit = {
					any_diplomatic_catalyst = {
						is_diplomatic_catalyst_type = catalyst_declared_bankruptcy
						target = scope:actor
					}
				}
				add = {
					desc = "catalyst_declared_bankruptcy"
					add = 50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_MUTUAL_TRADE_ROUTES"
				value = "scope:actor.num_mutual_trade_route_levels_with_country(root)"
				multiply = 0.5
				max = 25
			}

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					max = 20
				}
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					min = -20
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = protective
							}
							has_attitude = {
								who = scope:actor
								attitude = domineering
							}
						}
					}
					value = 40
				}
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = genial
						}
					}
					value = 30
				}
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}	
							has_attitude = {
								who = scope:actor
								attitude = cooperative
							}
						}
					}
					value = 20
				}
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = cautious
						}
					}
					value = -50
				}
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}
							has_attitude = {
								who = scope:actor
								attitude = rebellious
							}
						}
					}
					value = -1000
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 20
				}
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_PRINCIPLE_SACRED_CIVICS"

				if = {
					limit = {
						AND = {
							scope:actor.power_bloc ?= {
								OR = {
									has_principle = principle:principle_sacred_civics_1
									has_principle = principle:principle_sacred_civics_2
									has_principle = principle:principle_sacred_civics_3
								}
							}
							scope:actor.religion = root.religion
						}
					}
					add = 20
				}
			}			
		}

		# This is the acceptance score for the junior part of the foreign_investment_rights (used for 'foreign_investment_rights' action and checking AI in both directions)
		junior_accept_score = {
			value = 0

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_GDP"
				value = "scope:actor.ai_gdp_comparison(root)"
				min = -50
				max = 50
			}

			if = {
				limit = {
					gdp >= 2000000
				}
				
				subtract = {
					desc = "DIPLOMATIC_ACCEPTANCE_HIGH_GDP"
					value = gdp
					subtract = 1000000
					divide = 1000000
					min = 1
					max = 100
				}
			}
			
			if = {
				limit = {
					scope:actor = {
						any_diplomatic_catalyst = {
							is_diplomatic_catalyst_type = catalyst_declared_bankruptcy
							target = root
						}
					}
				}
				add = {
					desc = "catalyst_declared_bankruptcy"
					add = 50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_MUTUAL_TRADE_ROUTES"
				value = "scope:actor.num_mutual_trade_route_levels_with_country(root)"
				multiply = 0.5
				max = 25
			}

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					max = 20
				}
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					min = -20
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = loyal
						}
					}
					value = 40
				}
				else_if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = genial
						}
					}
					value = 30
				}
				else_if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}	
							has_attitude = {
								who = scope:actor
								attitude = cooperative
							}
						}
					}
					value = 20
				}
				else_if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = protective
							}
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = domineering
							}
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}
							has_attitude = {
								who = scope:actor
								attitude = rebellious
							}
						}
					}
					value = -1000
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 20
				}
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RANK"

				if = {
					limit = { scope:actor = { country_rank = root.country_rank } }
					value = -20
				}

				if = {
					limit = { scope:actor = { country_rank < root.country_rank } }
					value = -50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INCOMPATIBLE_ECONOMIC_SYSTEMS"
				if = {
					limit = {
						OR = {
							AND = {
								scope:actor = { has_radical_leftist_economy = no }
								scope:target_country = { has_radical_leftist_economy = yes }
							}
							AND = {
								scope:actor = { has_radical_leftist_economy = yes }
								scope:target_country = { has_radical_leftist_economy = no }
							}
						}
					}
					value = -100
				}
			}

			if = {
				limit = {
					scope:target_country = {
						c:CHI ?= THIS
						OR = {
							country_rank >= rank_value:unrecognized_major_power
							country_rank >= rank_value:great_power
						}
					}
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IS_CHINA"
					value = -100
				}
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_PRINCIPLE_SACRED_CIVICS"

				if = {
					limit = {
						AND = {
							scope:actor.power_bloc ?= {
								OR = {
									has_principle = principle:principle_sacred_civics_1
									has_principle = principle:principle_sacred_civics_2
									has_principle = principle:principle_sacred_civics_3
								}
							}
							scope:actor.religion = root.religion
						}
					}
					add = 20
				}
			}		
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_PRO_LOBBY_CLOUT"					
				value = "scope:actor.lobby_foreign_pro_clout(scope:target_country)"
				multiply = 50
				max = 25
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_ANTI_LOBBY_CLOUT"					
				value = "scope:actor.lobby_foreign_anti_clout(scope:target_country)"
				multiply = -50
				min = -25
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_TARGET_PRO_LOBBY_CLOUT"					
				value = "scope:target_country.lobby_foreign_pro_clout(scope:actor)"
				multiply = 100
				max = 25
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_TARGET_ANTI_LOBBY_CLOUT"					
				value = "scope:target_country.lobby_foreign_anti_clout(scope:actor)"
				multiply = -100
				min = -25
			}	

			if = {
				limit = {
					scope:actor = {
						has_variable = pro_lobby_proposal_investment_agreement
						var:pro_lobby_opportunity_target ?= scope:target_country
					}
				}
				add = {
					desc = "LOBBY_OPPORTUNITY_BONUS"
					value = 100
				}	
			}
			
			if = {
				limit = {
					scope:actor = {
						has_variable = anti_lobby_proposal_investment_agreement
						var:anti_lobby_opportunity_target ?= scope:target_country
					}
				}
				add = {
					desc = "LOBBY_OPPORTUNITY_BONUS"
					value = 50
				}	
			}	
		}

		propose_score = {
			value = 10

			add = {
				desc = "RUSSIA_WANTS_INFLUENCE_IN_MANCHURIA"
				if = {
					limit = {
						scope:target_country = {
							OR = {
								country_has_primary_culture = cu:manchu
								country_has_primary_culture = cu:han
							}
							any_scope_state = {
								region = sr:region_manchuria
							}
						}
						scope:actor = {
							country_has_primary_culture = cu:russian
							any_scope_state = {
								region = sr:region_manchuria
								is_incorporated = yes
							}
						}
					}
					add = 25
				}
			}		
		}

		propose_break_score = {
			value = 10
		}

		use_obligation_chance = {
			value = 25
		}

		owe_obligation_chance = {
			value = 0

			add = {
				desc = "RUSSIA_WANTS_INFLUENCE_IN_MANCHURIA"
				if = {
					limit = {
						scope:target_country = {
							OR = {
								country_has_primary_culture = cu:manchu
								country_has_primary_culture = cu:han
							}
							any_scope_state = {
								region = sr:region_manchuria
							}
						}
						scope:actor = {
							country_has_primary_culture = cu:russian
							any_scope_state = {
								region = sr:region_manchuria
								is_incorporated = yes
							}
						}
					}
					add = 10
				}
			}	
		}
	}
}

grant_foreign_investment_rights = {
	groups= {
		general
	}

	requires_approval = yes
	can_use_obligations = yes
	confirmation_sound = "event:/SFX/UI/MapInteraction/diplomatic_action_foreign_investment_rights_request"

	selectable = {
		has_dlc_feature = foreign_investment
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
			is_revolutionary = no
		}
		
		scope:target_country = {
			NOT = {
				has_diplomatic_pact = {
					who = scope:actor
					type = foreign_investment_rights
				}
			}
		}

		NOT = {
			has_diplomatic_pact = {
				who = scope:target_country
				type = foreign_investment_agreement
			}			
		}		
	}

	possible = {
		NOT = { has_war_with = scope:target_country }

		has_diplomatic_relevance = scope:target_country

		scope:target_country = {
			has_technology_researched = stock_exchange
		}

		custom_tooltip = {
			text = DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT
			scope:target_country.relations:root > relations_threshold:poor
		}					
	}


	reverse_pact = foreign_investment_rights

	ai = {
		check_acceptance_for_will_propose = yes
		
		evaluation_chance = {
			value = 0
			
			if = {
				limit = { country_rank < rank_value:major_power }
				add = 0.25
			}			
		}		

		propose_score = {
			value = 10
		}

		propose_break_score = {
			value = 10
		}

		use_obligation_chance = {
			value = 0
		}

		owe_obligation_chance = {
			value = 0
		}
	}
}
﻿invite_to_power_bloc = {
	requires_approval = yes
	can_use_obligations = yes
	uses_random_approval = yes
	should_notify_third_parties = yes
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/power_bloc_invite_request"

	groups = { general }

	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no	
		is_in_power_bloc = yes

		# Note that most of the script below has been written under the assumption that root is the power bloc leader.
		is_power_bloc_leader = yes      # if you change this line, remember to change power_bloc_invite_available
	}
	
	potential = { 
		scope:target_country = {
			NOT = { is_country_type = decentralized }
		}
	}

	possible = {
		# Must not be able to immediately start a power struggle
		custom_tooltip = {
			text = "NO_POWER_STRUGGLE_BLOC_JOIN"		
			OR = {
				prestige > scope:target_country.prestige
				country_rank > scope:target_country.country_rank
			}
		}
	
		power_bloc = {
			leverage_advantage = {
				target = scope:target_country
				value >= leverage_threshold_to_invite
			}

			NOT = {
				any_power_bloc_member = {
					is_diplomatic_play_enemy_of = scope:target_country
				}
			}
		}
		custom_tooltip = {
			# This effectively sets a 2 year cooldown on invites. This length needs to be updated both in loc and in the catalyst definition
			text = invite_to_power_bloc_recently_declined
			NOT = {
				any_diplomatic_catalyst = {
					is_diplomatic_catalyst_type = catalyst_declined_bloc_invite
					target = scope:target_country
				}
			}
		}
	}
	
	accept_effect = {
		scope:target_country = {
			join_power_bloc = root
		}
	}
	
	decline_effect = {
		change_relations = { country = scope:target_country value = -50 } 
		hidden_effect = {
			create_diplomatic_catalyst = {
				type = catalyst_declined_bloc_invite
				target = scope:target_country
			}						
		}
	}	
	
	ai = {
		evaluation_chance = {
			value = 0
			if = {
				limit = { is_power_bloc_leader = yes }
				add = 1
			}	
		}	
	
		accept_score = {
			value = 0
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}
			
			### Leverage
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_LEVERAGE"
				value = "scope:actor.power_bloc.leverage_advantage(root)"
				multiply = 0.5
				
				### Leverage effect when already part of the bloc can go into negative, to help determine if they want to leave
				if = {
					limit = { is_in_same_power_bloc = scope:actor	}					
					min = -200
				}
				else = {
					min = 0
				}
				
				max = 200
			}		
			
			if = {
				limit = {
					scope:target_country = { is_in_power_bloc = yes }
				}
				
				### Cohesion of current Bloc
				subtract = {
					desc = "DIPLOMATIC_ACCEPTANCE_COHESION_OF_TARGET"
					value = "scope:target_country.power_bloc.current_cohesion_number"
					subtract = 50
					
					### Low cohesion is more impactful than high cohesion
					if = {
						limit = { scope:target_country.power_bloc = { current_cohesion_number < 20 } }
						multiply = 2
					}					
					else_if = {
						limit = { scope:target_country.power_bloc = { current_cohesion_number < 40 } }
						multiply = 1.5
					}
				}				
			}
			
			### Cohesion
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_COHESION"
				value = "scope:actor.power_bloc.current_cohesion_number"
				subtract = 50
				
				### Low cohesion is more impactful than high cohesion
				if = {
					limit = { scope:actor.power_bloc = { current_cohesion_number < 20 } }
					multiply = 4
				}					
				else_if = {
					limit = { scope:actor.power_bloc = { current_cohesion_number < 40 } }
					multiply = 2
				}
				
				### Care more about cohesion when part of bloc
				if = {
					limit = { is_in_same_power_bloc = scope:actor }
					multiply = 2
				}
			}

			if = {
				limit = {
					scope:target_country.country_rank > rank_value:insignificant_power
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDENTITY_AFFINITY_TO_RANK"
					scope:actor.power_bloc = {
						if = {
							limit = {
								scope:target_country.country_rank = rank_value:great_power
							}
							add = modifier:power_bloc_invite_acceptance_great_power_add 
						}
						else_if = {
							limit = {
								scope:target_country.country_rank = rank_value:major_power
							}
							add = modifier:power_bloc_invite_acceptance_major_power_add 
						}
						else_if = {
							limit = {
								scope:target_country.country_rank = rank_value:minor_power
							}
							add = modifier:power_bloc_invite_acceptance_minor_power_add 
						}
						else_if = {
							limit = {
								scope:target_country.country_rank = rank_value:unrecognized_major_power
							}
							add = modifier:power_bloc_invite_acceptance_unrecognized_major_power_add 
						}
						else_if = {
							limit = {
								scope:target_country.country_rank = rank_value:unrecognized_regional_power
							}
							add = modifier:power_bloc_invite_acceptance_unrecognized_regional_power_add 
						}
					}
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_FROM_IDENTITY"
				scope:actor.power_bloc = {
					add = modifier:power_bloc_invite_acceptance_add
				}
			}

			### How the selected identity fits them
			add = ai_power_bloc_identity_score

			### Similar to identities but considers selected principles
			add = ai_power_bloc_principle_score

			# Ideological opinion is always a factor, but much weaker for non ideological unions
			# Score for ideological unions is handled in ai_power_bloc_identity_score script value
			if = {
				limit = {
					power_bloc ?= {
						NOT = { has_identity = identity:identity_ideological_union }
					}
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.25
					max = 25
					min = -25
				}
			}	

			### Powerful Protectors is always a factor, but less so if not being invited to a sovereign empire		
			if = {
				limit = {
					scope:actor.power_bloc ?= {
						NOT = { has_identity = identity:identity_sovereign_empire }
					}
					has_powerful_protectors = yes
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_POWERFUL_PROTECTORS_THEM"
					value = -25
				}	
			}
			
			### Relative rank
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RANK"
				value = scope:actor.country_rank
				subtract = 2
				subtract = country_rank
				multiply = 10			
			}
					
			if = {
				limit = {
					gdp >= 2000000
				}
				
				subtract = {
					desc = "DIPLOMATIC_ACCEPTANCE_HIGH_GDP"
					value = gdp
					subtract = 1000000
					divide = 1000000
					min = 1
					max = 100
				}
			}		

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = genial
						}											
					}
					value = 50
				}
				else_if = {
					limit = {
						OR = {					
							has_attitude = {
								who = scope:actor
								attitude = cooperative
							}
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}	
						}
					}
					value = 25
				}
				else_if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = domineering
							}	
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}							
						}
					}
					value = -1000
				}
				else = {
					value = -50
				}				
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"								
				if = {
					limit = {
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 0
				}
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 15
				}	
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 30
				}
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}	
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}
			}
			
			if = {
				limit = {
					scope:actor = {
						has_variable = pro_lobby_proposal_power_bloc_invite
						var:pro_lobby_opportunity_target ?= scope:target_country
					}
				}
				add = {
					desc = "LOBBY_OPPORTUNITY_BONUS"
					value = 50
				}
			}
			
			if = {
				limit = {
					scope:actor = {
						has_variable = anti_lobby_proposal_power_bloc_invite
						var:anti_lobby_opportunity_target ?= scope:target_country
					}
				}
				add = {
					desc = "LOBBY_OPPORTUNITY_BONUS"
					value = 50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_PRINCIPLE_SACRED_CIVICS"

				if = {
					limit = {
						AND = {
							scope:actor.power_bloc ?= {
								OR = {
									has_principle = principle:principle_sacred_civics_1
									has_principle = principle:principle_sacred_civics_2
									has_principle = principle:principle_sacred_civics_3
								}
							}
							scope:actor.religion = root.religion
						}
					}
					add = 20
				}
			}
		}
		
		will_propose = {  
			would_accept_diplomatic_action = {
				actor = scope:target_country
				type = join_power_bloc
			}
		}	
		
		propose_score = {
			value = 20
		}

		use_obligation_chance = {
			value = 75
		}
		
		owe_obligation_chance = {
			value = 0

			if = {
				limit = { 
					scope:target_country = {
						country_rank >= rank_value:major_power
					}
				}
				
				add = 50
			}
		}
		
		will_propose_even_if_not_accepted = { 
			OR = {
				has_attitude = {
					who = scope:target_country
					attitude = domineering
				}
				power_bloc ?= {
					leverage_advantage = {
						target = scope:target_country
						value >= 500
					}
				}				
			}
		}
	}
}

﻿request_recognition = {
	groups= {
		general
	}
	requires_approval = yes
	should_notify_third_parties = yes
	show_effect_in_tooltip = yes
	uses_random_approval = yes
	can_use_obligations = yes

	selectable = {
		has_journal_entry = je_earn_recognition
	}

	possible = {
		scope:target_country = {
			country_rank >= rank_value:great_power
		}
		custom_tooltip = {
			text = DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT
			scope:target_country.relations:root > relations_threshold:poor
		}		
		custom_tooltip = {
			text = "REQUEST_RECOGNITION_ON_COOLDOWN"
			NOT = {
				scope:target_country = {
					any_diplomatic_catalyst = {
						is_diplomatic_catalyst_type = catalyst_recognition_requested
						target = root
					}					
				}
			}
		}	
	}

	accept_effect = {
		change_relations = { country = scope:target_country value = 30 }
		custom_tooltip = {
			text = request_recognition_tt
			if = {
				limit = {
					has_variable = recognition_progress_var
				}
				change_variable = {
					name = recognition_progress_var
					add = 20
				}
			}
		}

		hidden_effect = {
			scope:target_country = {
				create_diplomatic_catalyst = {
					type = catalyst_recognition_requested
					target = root
				}		
			}
		}			
	}
	
	decline_effect = {
		change_relations = { country = scope:target_country value = -30 }
		hidden_effect = {
			scope:target_country = {
				create_diplomatic_catalyst = {
					type = catalyst_recognition_requested
					target = root
				}		
			}
		}	
	}

	ai = {
		evaluation_chance = {
			value = 0.25		
		}	
	
		accept_score = {
			value = 0

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 1
					max = 50
				}
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 1
					min = -50
				}
			}
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = genial
						}
					}
					value = 50
				}
				else_if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}	
							has_attitude = {
								who = scope:actor
								attitude = cooperative
							}
							has_attitude = {
								who = scope:actor
								attitude = protective
							}							
						}
					}
					value = 25
				}
				else_if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = domineering
							}
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}
						}
					}
					value = -1000
				}
				else = {
					value = -50
				}				
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:cordial
						"relations(scope:actor)" < relations_threshold:amicable
					}
					value = 10
				}				
				else_if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 25
				}
				else_if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -50
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -1000
				}
			}
			
			if = {
				limit = {
					has_diplomatic_pact = {
						who = scope:actor
						type = trade_agreement
					}
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_TRADE_AGREEMENT"
					value = 15
				}
			}	

			if = {
				limit = {
					has_diplomatic_pact = {
						who = scope:actor
						type = foreign_investment_rights
					}
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_FOREIGN_INVESTMENT_RIGHTS"
					value = 25
				}
			}			
			
			if = {
				limit = {
					has_diplomatic_pact = {
						who = scope:actor
						type = alliance
					}
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ALLIANCE"
					value = 50
				}
			}
			else_if = {
				limit = {
					has_diplomatic_pact = {
						who = scope:actor
						type = defensive_pact
					}
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_DEFENSIVE_PACT"
					value = 35
				}
			}			

			if = {
				limit = {
					"num_alliances_and_defensive_pacts_with_rivals(scope:actor)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ALLIED_TO_RIVALS"
					value = -1000
				}
			}	
			
			if = {
				limit = {
					exists = power_bloc
					exists = scope:actor.power_bloc			
				}
				if = {
					limit = {
						power_bloc = scope:actor.power_bloc
					}
					add = {
						desc = "DIPLOMATIC_ACCEPTANCE_SAME_POWER_BLOC"
						value = 25
					}					
				}
				else = {
					add = {
						desc = "DIPLOMATIC_ACCEPTANCE_DIFFERENT_POWER_BLOC"
						value = -25
					}					
				}				
			}			

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_PRINCIPLE_SACRED_CIVICS"

				if = {
					limit = {
						AND = {
							scope:actor.power_bloc ?= {
								OR = {
									has_principle = principle:principle_sacred_civics_1
									has_principle = principle:principle_sacred_civics_2
									has_principle = principle:principle_sacred_civics_3
								}
							}
							scope:actor.religion = root.religion
						}
					}
					add = 20
				}
			}			
		}
		propose_score = {
			value = 10
		}

		will_propose = {
			always = yes
		}
	}
}

﻿support_independence = {
	groups = {
		general
	}
	requires_approval = yes
	show_effect_in_tooltip = yes
	
	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}

	possible = {
		scope:target_country.overlord = {
			NOT = {
				has_diplomatic_pact = {
					type = alliance
					who = root
				}
			}
		}
		scope:target_country = {
			NOT = {
				play_participant_has_war_goal_of_type_against = {
					type = independence
					target = overlord
				}
				war_participant_has_war_goal_of_type_against = {
					type = independence
					target = overlord
				}
			}
		}
	}

	pact = {
		cost = 50
		is_two_sided_pact = yes
		has_junior_participant = yes
        auto_support_type = dp_independence
		auto_support_type = dp_increase_autonomy
		auto_support_type = dp_annex_subject
		
		relations_progress_per_day = 1.0  # At 100, +1 relations
		relations_improvement_max = 80
		
		second_modifier = {
			country_pact_leverage_generation_add = 200
		}

		requirement_to_maintain = {
			trigger = {
				has_diplomatic_relevance = scope:target_country
			}
		}
		
		requirement_to_maintain = {
			trigger = {
				scope:target_country = { is_subject = yes }
			}
		}		
		
		requirement_to_maintain = {
			trigger = {
				OR = {
					is_subject = no
					overlord = scope:target_country.overlord
					aggressive_diplomatic_plays_permitted = yes
				}					
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_HIGH_LIBERTY_DESIRE"
					OR = {
						is_subject = no
						NOT = { overlord = scope:target_country.overlord }
						liberty_desire >= define:NDiplomacy|WAR_GOAL_INCREASE_AUTONOMY_MIN_LIBERTY_DESIRE
					}					
				}
			}
		}			
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NO_SUBJECT_RELATION"
					NOT = {
						is_subject_of = scope:target_country
						scope:target_country = { is_subject_of = root }
					}				
				}
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT
					scope:target_country.relations:root > relations_threshold:poor
				}
			}

			show_about_to_break_warning = {
				scope:target_country.relations:root <= -17 # this is: poor + 3
				scope:target_country.relations_change_rate:root < 0
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_AT_PEACE"
					NOT = { has_war_with = scope:target_country }
				}
			}
		}
		
		requirement_to_maintain = {
			trigger = {
				country_rank >= scope:target_country.country_rank
			}
		}		

		manual_break_effect = {
			change_relations = { country = scope:target_country value = -30 }
			create_bidirectional_truce = { country = scope:target_country months = 12 }	
		}			
	}

	accept_effect = {
		add_overlord_lobby_appeasement_from_diplomacy = { 
			FIRST = scope:target_country
			SECOND = root
			PRO_AMOUNT = -2
			ANTI_AMOUNT = 2
			FACTOR = appeasement_independence_supported
		}			
	}
	
	ai = {
		check_acceptance_for_will_break = yes
		check_acceptance_for_will_propose = yes	
	
		evaluation_chance = {
			value = 0.1
			
			add = {
				value = country_rank
				multiply = 0.05
			}	
	
			# Rebellious subjects should very actively seek fellow subjects to rebel together with
			if = {
				limit = {	
					is_subject = yes
					has_attitude = {
						who = overlord
						attitude = rebellious
					}
				}
				add = 1.0
			}	
		}			

		# This is the acceptance score for the senior part of the support_independence (used for 'request_support_independence' action and checking AI in both directions)
		accept_score = {
			value = 0

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}		
			
			if = {
				limit = {
					scope:actor = { 
						is_subject = yes 
						overlord = root.overlord
					}
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_FELLOW_SUBJECT"
					value = 100
				}
			}				

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.75
					max = 30
				}
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.75
					min = -30
				}
			}
			
			if = {
				limit = {
					NOT = { is_country_type = unrecognized }
					scope:actor = { is_country_type = unrecognized }
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_UNRECOGNIZED"
					value = -25
				}
			}				

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = protective
						}
					}
					value = 40
				}
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = genial
						}
					}
					value = 30
				}
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}	
							has_attitude = {
								who = scope:actor
								attitude = cooperative
							}
							has_attitude = {
								who = scope:actor
								attitude = domineering
							}							
						}
					}
					value = 20
				}
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = cautious
						}
					}
					value = -50
				}
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}
							has_attitude = {
								who = scope:actor
								attitude = rebellious
							}
						}
					}
					value = -1000
				}
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE_TOWARDS_ACTOR_OVERLORD"
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor.overlord
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor.overlord
								attitude = rebellious
							}	
						}
					}
					value = 50
				}
				else_if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor.overlord
								attitude = belligerent
							}
							has_attitude = {
								who = scope:actor.overlord
								attitude = domineering
							}
							has_attitude = {
								who = scope:actor.overlord
								attitude = defiant
							}								
						}
					}
					value = 30
				}
				else = {
					value = -1000
				}				
			}				

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:cordial
						"relations(scope:actor)" < relations_threshold:amicable
					}
					value = 10
				}				
				else_if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 25
				}
				else_if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_PRINCIPLE_SACRED_CIVICS"

				if = {
					limit = {
						AND = {
							scope:actor.power_bloc ?= {
								OR = {
									has_principle = principle:principle_sacred_civics_1
									has_principle = principle:principle_sacred_civics_2
									has_principle = principle:principle_sacred_civics_3
								}
							}
							scope:actor.religion = root.religion
						}
					}
					add = 20
				}
			}			
		}

		# This is the acceptance score for the junior part of the support_independence (used for 'support_independence' action and checking AI in both directions)
		junior_accept_score = {
			value = 0

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}
			
			if = {
				limit = {
					scope:actor = { 
						is_subject = yes 
						overlord = root.overlord
					}
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_FELLOW_SUBJECT"
					value = 100
				}
			}			
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ARMY_STRENGTH"
				value = "scope:actor.ai_army_comparison(root)"
				min = -50
				max = 50
			}				

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					max = 20
				}
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					min = -20
				}
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE_TOWARDS_OWN_OVERLORD"
				if = {
					limit = {
						has_attitude = {
							who = overlord
							attitude = rebellious
						}
					}
					value = 50
				}
				else_if = {
					limit = {
						has_attitude = {
							who = overlord
							attitude = defiant
						}
					}
					value = 25
				}
				else_if = {
					limit = {
						has_attitude = {
							who = overlord
							attitude = loyal
						}
					}
					value = -1000
				}				
			}			

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = genial
						}
					}
					value = 30
				}
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}	
							has_attitude = {
								who = scope:actor
								attitude = cooperative
							}
							has_attitude = {
								who = scope:actor
								attitude = loyal
							}							
						}
					}
					value = 20
				}
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = cautious
						}
					}
					value = -50
				}
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = protective
							}
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = domineering
							}
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}
						}
					}
					value = -1000
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 20
				}
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_PRINCIPLE_SACRED_CIVICS"

				if = {
					limit = {
						AND = {
							scope:actor.power_bloc ?= {
								OR = {
									has_principle = principle:principle_sacred_civics_1
									has_principle = principle:principle_sacred_civics_2
									has_principle = principle:principle_sacred_civics_3
								}
							}
							scope:actor.religion = root.religion
						}
					}
					add = 20
				}
			}			
		}
	
		propose_score = {
			value = 10
			
			# Rebellious subjects should very actively seek fellow subjects to rebel together with
			if = {
				limit = {
					is_subject = yes
					scope:target_country = { 
						is_subject = yes 
						overlord = root.overlord
					}				
				}
				add = 100
			}		
		}

		propose_break_score = {
			value = 10
		}

		use_obligation_chance = {
			value = 0
		}

		owe_obligation_chance = {
			value = 0
		}
		
		will_propose_even_if_not_accepted = {	
			is_subject = yes
			scope:target_country = { # Ask high LD players if they want to rebel together
				is_ai = no
				is_subject = yes 
				overlord = root.overlord
			}
		}		
	}
}

request_support_independence = {
	groups = {
		general
	}
	requires_approval = yes
	show_effect_in_tooltip = yes
	
	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
		is_subject = yes
	}

	accept_effect = {}
	
	reverse_pact = support_independence

	ai = {
		check_acceptance_for_will_propose = yes
		
		evaluation_chance = {
			value = 0.0
			
			if = {
				limit = {
					has_attitude = {
						who = overlord
						attitude = defiant
					}	
				}
				add = 0.25
			}

			# Rebellious subjects should very actively seek fellow subjects to rebel together with
			if = {
				limit = {
					has_attitude = {
						who = overlord
						attitude = rebellious
					}
				}
				add = 1.0
			}		
		}		

		propose_score = {
			value = 10
			
			# Rebellious subjects should very actively seek fellow subjects to rebel together with
			if = {
				limit = {
					scope:target_country = { 
						is_subject = yes 
						overlord = root.overlord
					}				
				}
				add = 100
			}
		}

		propose_break_score = {
			value = 10
		}

		use_obligation_chance = {
			value = 25
		}

		owe_obligation_chance = {
			value = 25
		}
		
		will_propose_even_if_not_accepted = {
			scope:target_country = { # Ask high LD players if they want to rebel together
				is_ai = no
				is_subject = yes 
				overlord = root.overlord
			}
		}			
	}
}

﻿fund_lobbies = {
	groups= {
		general
	}
	requires_approval = no
	should_notify_third_parties = no

	unlocking_technologies = {
		central_banking
	}
	
	selectable = {
		has_dlc_feature = lobbies
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
			is_revolutionary = no
		}
	}
	
	accept_effect = {
		custom_tooltip = {
			text = fund_lobbies_increase_friendly_join_weight_effect
		}
		custom_tooltip = {
			text = fund_lobbies_decrease_hostile_join_weight_effect
		}
		custom_tooltip = {
			text = fund_lobbies_increase_rival_hostile_join_weight_effect
		}
		custom_tooltip = {
			text = fund_lobbies_decrease_rival_friendly_join_weight_effect
		}		
	}	
	
	pact = {	
		cost = 100
	
		is_two_sided_pact = no
		
		second_modifier = {
			country_lobby_leverage_generation_mult = 0.25
		}
		
		second_foreign_pro_country_lobby_member_modifier = {
			interest_group_pop_attraction_mult = 0.25
		}
		
		second_foreign_anti_country_lobby_member_modifier = {
			interest_group_pop_attraction_mult = -0.25
		}		
		
		income_transfer = 0.20
		second_country_gets_income_transfer = yes
		income_transfer_based_on_second_country = yes
		income_transfer_to_pops = {
			allow_discriminated = no
			upper_strata_pops = {
				value = 0.5
				if = {
					limit = {
						OR = {
							has_law = law_type:law_autocracy
							has_law = law_type:law_oligarchy
						}		
					}
					add = 0.5
				}
				else_if = {
					limit = {
						OR = {
							has_law = law_type:law_wealth_voting
							has_law = law_type:law_landed_voting
						}		
					}
					add = 0.25
				}				
				else_if = {
					limit = {
						has_law = law_type:law_anarchy
					}
					subtract = 0.25
				}	
				
				max = 1
				min = 0
			}
			middle_strata_pops = {
				value = 0.25
				
				if = {
					limit = {
						OR = {
							has_law = law_type:law_census_voting
							has_law = law_type:law_universal_suffrage
						}					
					}
					add = 0.25
				}	

				max = 1
				min = 0				
			}
			lower_strata_pops = {
				value = 0.0
				
				if = {
					limit = {
						OR = {
							has_law = law_type:law_universal_suffrage		
							has_law = law_type:law_anarchy
						}
					}
					add = 0.25
				}	

				max = 1
				min = 0				
			}
		}
		
		weekly_effect = {		
			scope:target_country = {
				if = {
					limit = {  
						NOT = {
							any_political_lobby = { 
								target = root
								OR = {
									is_political_lobby_type = lobby_pro_country
									is_political_lobby_type = lobby_pro_overlord
								}							
							}						
						}
					}		
					custom_tooltip = {
						text = fund_lobbies_weekly_create_lobby_effect
						create_diplomatic_catalyst = {
							type = catalyst_lobbies_funded
							target = root
						}						
					}				
				}
			}			
		} 
		
		requirement_to_maintain = {
			trigger = {
				has_diplomatic_relevance = scope:target_country
			}
		}

	 	requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT
					scope:target_country.relations:root > relations_threshold:poor
				}		
			}
			
			show_about_to_break_warning = {
				scope:target_country.relations:root <= -17 # this is: poor + 3
				scope:target_country.relations_change_rate:root < 0
			}					
		}	

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NOT_DECENTRALIZED"
					NOT = { is_country_type = decentralized }
					scope:target_country = {
						NOT = { is_country_type = decentralized }
					}				
				}
			}
		}				
	
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_AT_PEACE"
					NOT = { has_war_with = scope:target_country }
				}			
			}
		}		

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "EQUAL_OR_BETTER_RANK_THAN_TARGET"
					country_rank >= scope:target_country.country_rank
				}	

				
			}
		}

		requirement_to_maintain = {
			trigger = {
				in_default = no
			}
		}			
	}
	
	ai = {
		max_influence_spending_fraction = 0.20
		
		evaluation_chance = {
			value = 0.1
			
			add = {
				value = country_rank
				multiply = 0.05
			}			
		}		
	
		propose_score = {
			value = 10
		}
	
		will_propose = { 
			scaled_debt <= 0
			is_at_war = no
			weekly_net_fixed_income > 0	
			has_attitude = {
				who = scope:target_country
				attitude = protective
			}
			OR = {
				num_income_transfer_pacts < 1
				AND = {
					num_income_transfer_pacts < 2
					income >= 200000
				}
				AND = {
					num_income_transfer_pacts < 3
					income >= 400000
				}				
			}
			
			OR = {
				root = {
					owes_obligation_to = scope:target_country			
				}	
				NOT = { 
					scope:target_country = {
						owes_obligation_to = root			
					}						
				}
				AND = {
					is_at_war = no
					scope:target_country = { is_at_war = yes }
				}			
			}		
			# We want to have at least five times their income, and at least 50k income in general
			OR = {
				AND = {
					income >= 50000
					weekly_net_fixed_income >= 4000
					scope:target_country.income <= 10000
				}
				AND = {
					income >= 75000
					weekly_net_fixed_income >= 6000
					scope:target_country.income <= 15000
				}				
				AND = {
					income >= 100000
					weekly_net_fixed_income >= 8000
					scope:target_country.income <= 20000
				}
				AND = {
					income >= 125000
					weekly_net_fixed_income >= 10000
					scope:target_country.income <= 25000
				}
				AND = {
					income >= 150000
					weekly_net_fixed_income >= 12000
					scope:target_country.income <= 30000
				}	
				AND = {
					income >= 175000
					weekly_net_fixed_income >= 14000
					scope:target_country.income <= 35000
				}
				AND = {
					income >= 200000
					weekly_net_fixed_income >= 16000
					scope:target_country.income <= 40000
				}
				AND = {
					income >= 225000
					weekly_net_fixed_income >= 18000
					scope:target_country.income <= 45000
				}	
				AND = {
					income >= 250000
					weekly_net_fixed_income >= 20000
					scope:target_country.income <= 50000
				}					
			}			
		}
		
		will_break = { 
			OR = {		
				scaled_debt > 0.25
				AND = {
					scaled_debt > 0
					OR = {
						weekly_net_fixed_income < 0	
						is_at_war = yes
					}				
				}				
				NOT = {
					has_attitude = {
						who = scope:target_country
						attitude = protective
					}				
				}
				num_income_transfer_pacts > 3
				AND = {
					num_income_transfer_pacts > 1
					OR = {
						weekly_net_fixed_income < -10000	
						income < 300000
					}			
				}
				AND = {
					num_income_transfer_pacts > 2
					OR = {
						weekly_net_fixed_income < -5000					
						income < 500000
					}
				}				
				NOR = {
					root = {
						owes_obligation_to = scope:target_country			
					}	
					NOT = { 
						scope:target_country = {
							owes_obligation_to = root			
						}						
					}
					AND = {
						is_at_war = no
						scope:target_country = { is_at_war = yes }
					}			
				}							
				# Threshold for breaking off a bankroll is higher than for starting it
				# We also don't look at weekly_net_fixed_income here since starting a bankroll changes it
				NOR = {
					AND = {
						income >= 40000
						scope:target_country.income <= 12500
					}				
					AND = {
						income >= 50000
						scope:target_country.income <= 15000
					}
					AND = {
						income >= 75000
						scope:target_country.income <= 20000
					}				
					AND = {
						income >= 100000
						scope:target_country.income <= 25000
					}
					AND = {
						income >= 125000
						scope:target_country.income <= 30000
					}
					AND = {
						income >= 150000
						scope:target_country.income <= 35000
					}	
					AND = {
						income >= 175000
						scope:target_country.income <= 40000
					}
					AND = {
						income >= 200000
						scope:target_country.income <= 45000
					}
					AND = {
						income >= 225000
						scope:target_country.income <= 50000
					}
					AND = {
						income >= 250000
						scope:target_country.income <= 55000
					}					
				}						
			}
		}			
	}
}


﻿force_become_subject = {
	groups= {
		power_bloc_leader
	}
	show_in_lens = no

	texture = "gfx/interface/icons/diplomatic_action_icons/force_become_subject.dds"
	
	selectable = {
		is_power_bloc_leader = yes
		power_bloc ?= {
			modifier:power_bloc_leader_can_make_subjects_bool = yes
		}		
	}
	
	potential = {
		power_bloc ?= {
			scope:target_country.power_bloc ?= this
		}
	}
	
	possible = {
		scope:target_country = { 
			is_subject = no
			country_rank < rank_value:unrecognized_major_power 
			is_diplomatic_play_committed_participant = no
		}
	
		power_bloc = {
			current_cohesion_percentage >= 0.5
		}
		scope:target_country = {
			tenure_in_current_power_bloc_years >= 5
		}
		prestige >= {
			value = scope:target_country.prestige
			multiply = 5
		}
	}
	
	accept_effect = {
		if = {
			limit = { is_country_type = unrecognized }
			create_diplomatic_pact = {
				country = scope:target_country
				type = tributary
			}						
		}
		else = {
			create_diplomatic_pact = {
				country = scope:target_country
				type = protectorate
			}			
		}
		create_unidirectional_truce = { country = scope:target_country months = 60 }
		hidden_effect = { scope:target_country = { add_liberty_desire = 30 } } # Starts at a higher LD level
		
		power_bloc = {
			add_cohesion_percent = {
				value = scaled_cohesion_cost_subjugation
			}
		}
	}
	
	ai = {
		evaluation_chance = {
			value = 0.025 # AI shouldn't use this very often
		}
		
		will_propose = {
			power_bloc ?= { current_cohesion_percentage >= 0.6 }		
			OR = {
				has_attitude = {
					who = scope:target_country
					attitude = domineering
				}
				power_bloc ?= { current_cohesion_percentage >= 0.8 }						
			}
			OR = {
				AND = {
					has_attitude = {
						who = scope:target_country
						attitude = domineering
					}		
					power_bloc ?= { current_cohesion_percentage >= 0.8 }
				}
				scope:target_country = {
					is_country_type = unrecognized
				}
			}		
		}

		propose_score = {								
			value = 10			
		}
	}
}

﻿force_regime_change = {
	groups= {
		power_bloc_leader
	}
	show_in_lens = no

	texture = "gfx/interface/icons/diplomatic_action_icons/force_regime_change.dds"
	
	selectable = {
		is_power_bloc_leader = yes
		power_bloc ?= {
			modifier:power_bloc_leader_can_regime_change_bool = yes
		}		
	}	
	
	potential = {
		power_bloc ?= {
			scope:target_country.power_bloc ?= this
		}
	}
	
	possible = {
		custom_tooltip = {
			text = "FORCE_REGIME_CHANGE_GOV_PRINCIPLES_DIST_POWER_PROGRESSIVENESS_DIFFERENCE"
			100 <= {
				add = {
					add = active_law:lawgroup_governance_principles.type.progressiveness
					subtract = scope:target_country.active_law:lawgroup_governance_principles.type.progressiveness
					abs = yes
				}
				add = {
					add = active_law:lawgroup_distribution_of_power.type.progressiveness
					subtract = scope:target_country.active_law:lawgroup_distribution_of_power.type.progressiveness
					abs = yes
				}
			}
		}	
	
		power_bloc = {
			current_cohesion_percentage >= 0.5
		}
		scope:target_country = {
			tenure_in_current_power_bloc_years >= 5
		}
		prestige >= {
			value = scope:target_country.prestige
			multiply = 3
		}
	}
	
	accept_effect = {
		regime_change = scope:target_country
		scope:target_country = {
			add_modifier = {
				name = installed_regime
				months = normal_modifier_time
				multiplier = 0.2
			}
		}
		
		power_bloc = {
			add_cohesion_percent = scaled_cohesion_cost
		}
	}
	
	ai = {
		evaluation_chance = {
			value = 0.025 # AI shouldn't use this very often
		}
		
		will_propose = {
			power_bloc = { current_cohesion_percentage >= 0.75 }
			"ai_ideological_opinion(scope:target_country)" <= -50			
			OR = {
				"ai_ideological_opinion(scope:target_country)" <= -100
				has_attitude = {
					who = scope:target_country
					attitude = domineering
				}					
				AND = {
					has_radical_leftist_government = no			
					scope:target_country = {
						has_radical_leftist_government = yes
					}
				}
				AND = {
					has_radical_leftist_economy = no			
					scope:target_country = {
						has_radical_leftist_economy = yes
					}
				}		
			}
		}

		propose_score = {								
			value = 10

			if = {
				limit = {
					OR = {					
						AND = {
							has_radical_leftist_government = no			
							scope:target_country = {
								has_radical_leftist_government = yes
							}
						}
						AND = {
							has_radical_leftist_economy = no			
							scope:target_country = {
								has_radical_leftist_economy = yes
							}
						}				
					}
				}
				add = 100
			}				
		}
	}
}

﻿force_state_religion = {
	groups= {
		power_bloc_leader
	}
	show_in_lens = no

	texture = "gfx/interface/icons/diplomatic_action_icons/force_state_religion.dds"
	
	selectable = {
		is_power_bloc_leader = yes
		power_bloc ?= {
			modifier:power_bloc_leader_can_force_state_religion_bool = yes
		}		
	}
	
	potential = {
		power_bloc ?= {
			scope:target_country.power_bloc ?= this
		}
	}
	
	possible = {
		scope:target_country = {
			NOT = { religion = root.religion }
		}

		power_bloc = {
			current_cohesion_percentage >= 0.5
		}
		scope:target_country = {
			tenure_in_current_power_bloc_years >= 5
		}
		prestige >= {
			value = scope:target_country.prestige
			multiply = 3
		}
	}
	
	accept_effect = {
		scope:target_country = {
			set_state_religion = root.religion
			capital = {
				convert_population = {
					target = root.religion
					value = 0.05
				}
			}
			every_scope_state = {
				limit = { is_capital = no }
				convert_population = {
					target = root.religion
					value = 0.02
				}				
			}
		}
		
		power_bloc = {
			add_cohesion_percent = scaled_cohesion_cost
		}
	}
	
	ai = {
		evaluation_chance = {
			value = 0.025 # AI shouldn't use this very often
		}
		
		will_propose = {
			power_bloc = { current_cohesion_percentage >= 0.75 }
			OR = {
				has_attitude = {
					who = scope:target_country
					attitude = domineering
				}
				AND = {
					religion = { has_discrimination_trait = christian }
					NOT = { scope:target_country = { religion = { has_discrimination_trait = christian } } }
				}
				AND = {
					religion = { has_discrimination_trait = muslim }
					NOT = { scope:target_country = { religion = { has_discrimination_trait = muslim } } }
				}
				AND = {
					religion = { has_discrimination_trait = jewish }
					NOT = { scope:target_country = { religion = { has_discrimination_trait = jewish } } }
				}
				AND = {
					religion = { has_discrimination_trait = eastern }
					NOT = { scope:target_country = { religion = { has_discrimination_trait = eastern } } }
				}
				AND = {
					religion = { has_discrimination_trait = buddhist }
					NOT = { scope:target_country = { religion = { has_discrimination_trait = buddhist } } }
				}				
				AND = {
					religion = { has_discrimination_trait = animist }
					NOT = { scope:target_country = { religion = { has_discrimination_trait = animist } } }
				}										
			}
		}

		propose_score = {								
			value = 10			
		}
	}
}

﻿raise_payments = {
	requires_approval = no
	groups= { overlord subject } # this is a subject action only for the sake of breaking it if LD is high enough
	
	texture = "gfx/interface/icons/diplomatic_action_icons/raise_payments.dds"
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/diplomatic_action_subjects_01_raise_payments_benign"
	
	selectable = {
		has_dlc_feature = subject_and_bloc_actions
	}

	potential = {
		any_scope_diplomatic_pact = {
			"diplomatic_pact_other_country(root)" = scope:target_country
			income_transfer > 0
		}
		OR = {
			scope:target_country = { 
				is_subject_of = root 
				NOT = { is_diplomatic_play_enemy_of = root }
			}
			AND = {	# only valid for subject countries if a pact is already established
				is_subject_of = scope:target_country
				has_diplomatic_pact = { who = scope:target_country type = raise_payments }
			}
		}
	}
	
	possible = {
		scope:target_country = {
			liberty_desire < 75
		}
		scope:target_country = {
			in_default = no
		}
		NOT = {
			has_diplomatic_pact = {
				who = scope:target_country
				type = decrease_payments
			}
		}
	}

	pact = {	
		recipient_pays_maintenance = no
		relations_progress_per_day = -1
		
		second_modifier = {
			country_overlord_income_transfer_mult = 1
			country_liberty_desire_decrease_mult = -0.25
			country_liberty_desire_increase_mult = 0.25
		}
	    
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_AT_PEACE"
					NOT = { has_war_with = scope:target_country }
				}			
			}
		}
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_SUBJECT_WITH_INCOME_TRANSFER"
					any_scope_diplomatic_pact = {
						"diplomatic_pact_other_country(root)" = scope:target_country
						income_transfer > 0
					}
				}			
			}
		}
	}
	
	ai = {
		max_influence_spending_fraction = 0.1
		
		evaluation_chance = {
			value = 0.25		
		}		
	
		propose_score = {
			value = 10
		}
	
		will_propose = {
			"relations(scope:target_country)" < relations_threshold:cordial
			has_attitude = {
				who = scope:target_country
				attitude = domineering
			}		
			OR = {
				has_strategy = ai_strategy_economic_imperialism
				has_strategy = ai_strategy_territorial_expansion
				has_strategy = ai_strategy_world_revolution
			}
			scope:target_country = { "potential_diplomatic_play_power_ratio(root)" <= 0.5 }
		}
		
		will_break = {
			OR = {
				has_attitude = {
					who = scope:target_country
					attitude = protective
				}	
				AND = {
					scope:target_country = { liberty_desire >= 50 }
					"relations(scope:target_country)" >= relations_threshold:friendly	
					NOR = {
						has_strategy = ai_strategy_economic_imperialism
						has_strategy = ai_strategy_territorial_expansion
						has_strategy = ai_strategy_world_revolution
					}					
				}				
			}	
		}		
	}
}


﻿decrease_payments = {
	requires_approval = no
	groups= { overlord }
	
	texture = "gfx/interface/icons/diplomatic_action_icons/decrease_payments.dds"
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/diplomatic_action_subjects_02_decrease_payments_benign"
	selectable = {
		has_dlc_feature = subject_and_bloc_actions
	}
	
	potential = {
		any_scope_diplomatic_pact = {
			"diplomatic_pact_other_country(root)" = scope:target_country
			income_transfer > 0
		}
		scope:target_country = {
			NOT = { is_diplomatic_play_enemy_of = root }
		}
	}
	
	possible = {
		NOT = {
			has_diplomatic_pact = {
				who = scope:target_country
				type = raise_payments
			}
		}
	}
	
	pact = {	
		cost = 0
		forced_duration = 12
		
		second_modifier = {
			country_overlord_income_transfer_mult = -0.5
			country_liberty_desire_increase_mult = -0.33
		}

		manual_break_effect = {
			scope:target_country = {
				add_liberty_desire = 10
			}
		}
	    
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_AT_PEACE"
					NOT = { has_war_with = scope:target_country }
				}			
			}
		}
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_SUBJECT_WITH_INCOME_TRANSFER"
					any_scope_diplomatic_pact = {
						"diplomatic_pact_other_country(root)" = scope:target_country
						income_transfer > 0
					}
				}			
			}
		}
	}
	
	ai = {
		evaluation_chance = {
			value = 0.25		
		}			
	
		propose_score = {
			value = 10
		}		
	
		will_propose = {
			"relations(scope:target_country)" >= relations_threshold:friendly
			has_attitude = {
				who = scope:target_country
				attitude = protective
			}	
			scope:target_country = { liberty_desire >= 25 }
			OR = {
				has_strategy = ai_strategy_maintain_power_balance
				has_strategy = ai_strategy_armed_isolationism
				has_strategy = ai_strategy_socialism_in_one_country
				has_strategy = ai_strategy_anti_imperialism
			}		
		}
		
		will_break = {
			OR = {
				has_attitude = {
					who = scope:target_country
					attitude = domineering
				}		
				AND = {
					scope:target_country = { liberty_desire < 50 }
					OR = {
						"relations(scope:target_country)" < relations_threshold:amicable	
						NOR = {
							has_strategy = ai_strategy_maintain_power_balance
							has_strategy = ai_strategy_armed_isolationism
							has_strategy = ai_strategy_socialism_in_one_country
							has_strategy = ai_strategy_anti_imperialism
						}					
					}					
				}
			}	
		}		
	}
}


﻿exempt_from_service = {
	requires_approval = no
	groups= { 
		overlord 
		power_bloc_leader
	}
	
	texture = "gfx/interface/icons/diplomatic_action_icons/exempt_from_service.dds"
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/diplomatic_action_subjects_03_exempt_from_service_benign"
	selectable = {
		has_dlc_feature = subject_and_bloc_actions
	}
	
	potential = {
		scope:target_country = {
			is_forced_to_join_plays = root
			NOT = { is_diplomatic_play_enemy_of = root }
		}
	}
	
	possible = {
		always = yes
	}

	accept_effect = {
		if = {
			limit = {
				scope:target_country = {
					is_subject_of = root
				}
			}
			custom_tooltip = {
				text = "DIPLOMATIC_PACT_REDUCED_LIBERTY_DESIRE"
			}
		}
	}
	
	pact = {	
		cost = 0
		forced_duration = 12
	
		# is_two_sided_pact = no
		# show_in_outliner = no
		# can_be_used_in_sway_offers = no
		
		exempt_from_service = yes
		
		second_country_gets_income_transfer = no
		income_transfer_based_on_second_country = no
		
		actor_can_break = {
			always = yes
		}

		requirement_to_maintain = {
			trigger = {
				scope:target_country = {
					OR = {
						is_subject_of = root
						power_bloc.power_bloc_leader ?= root
					}
				}
			}
		}
		
		manual_break_effect = {
			scope:target_country = {
				if = {
					limit = { is_subject_of = root }
					add_liberty_desire = 10
				}
			}
		}
	}
	
	ai = {
		evaluation_chance = {
			value = 0.25		
		}				
	
		propose_score = {
			value = 10
		}
	
		will_propose = {
			has_attitude = {
				who = scope:target_country
				attitude = protective
			}	
			scope:target_country = { liberty_desire >= 25 }
			OR = {
				has_strategy = ai_strategy_colonial_expansion
				has_strategy = ai_strategy_socialism_in_one_country
				has_strategy = ai_strategy_anti_imperialism
			}	
			scope:target_country = { 
				OR = {
					"scope:actor.ai_army_comparison(root)" <= 0.2
					"potential_diplomatic_play_power_ratio(root)" >= 0.75
				}
			}
		}
		
		will_break = {
			OR = {
				has_attitude = {
					who = scope:target_country
					attitude = domineering
				}		
				AND = {
					scope:target_country = { liberty_desire < 50 }	
					NOR = {
						has_strategy = ai_strategy_colonial_expansion
						has_strategy = ai_strategy_socialism_in_one_country
						has_strategy = ai_strategy_anti_imperialism
					}										
				}
				scope:target_country = { 
					"scope:actor.ai_army_comparison(root)" >= 0.4
					"potential_diplomatic_play_power_ratio(root)" <= 0.5
				}				
			}	
		}		
	}
}


﻿da_appoint_colonial_governor = {
	groups= { overlord }
	
	requires_approval = no
	should_notify_third_parties = yes
	show_effect_in_tooltip = yes

	texture = "gfx/interface/icons/diplomatic_action_icons/da_appoint_colonial_governor.dds"
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/diplomatic_action_subjects_04_appoint_governor_benign"
	selectable = {
		has_dlc_feature = subject_and_bloc_actions
	}
	
	potential = {
		scope:target_country = {
			NOT = { has_variable = gubernatorial_candidate }
			NOT = { is_diplomatic_play_enemy_of = root }
		}
	}
	
	possible = {
		custom_tooltip = {
			text = "APPOINT_COLONIAL_GOVERNOR_ON_COOLDOWN"
			scope:target_country = {
				NOR = { 
					has_variable = gubernatorial_candidate 
					has_variable = gubernatorial_candidate_timed
				}
			}
		}
		is_revolutionary = no
		scope:target_country = {
			is_revolutionary = no
			OR = {	# don't appoint colonial governor monarchies
				has_law = law_type:law_presidential_republic
				has_law = law_type:law_parliamentary_republic
			}
		}
		OR = {
			AND = {
				OR = {
					is_country_type = recognized
					is_country_type = colonial
				}
				scope:target_country = {
					is_country_type = unrecognized
				}
			}
			AND = {
				OR = {
					is_country_type = recognized
					is_country_type = colonial
				}
				scope:target_country = {
					OR = {
						is_country_type = recognized
						is_country_type = colonial
					}
					OR = {
						is_subject_type = subject_type_puppet
						is_subject_type = subject_type_dominion
						is_subject_type = subject_type_vassal
					}
				}
			}
			AND = {
				is_country_type = unrecognized
				scope:target_country = {
					is_country_type = unrecognized
					OR = {
						is_subject_type = subject_type_puppet
						is_subject_type = subject_type_dominion
						is_subject_type = subject_type_vassal
					}
				}
			}
		}
	}

	accept_effect = {
		scope:target_country = {
			set_variable = gubernatorial_candidate
			set_variable = {
				name = gubernatorial_candidate_timed
				months = 61
			}
		}
		trigger_event = { id = subject_interactions.1 popup = yes }
	}
	
	ai = {
		evaluation_chance = {
			value = 0.25		
		}		
	
		propose_score = {
			value = 10
		}
	
		will_propose = {
			"ai_ideological_opinion(scope:target_country)" <= -25
			OR = {
				scope:target_country = { liberty_desire < 25 }
				has_attitude = {
					who = scope:target_country
					attitude = domineering
				}						
			}
			OR = {
				has_strategy = ai_strategy_maintain_power_balance
				has_strategy = ai_strategy_anti_imperialism
				has_strategy = ai_strategy_world_revolution
			}		
		}				
	}
}

﻿grant_own_market = {
	requires_approval = no
	groups= {
		overlord
		power_bloc_leader
	}
	
	texture = "gfx/interface/icons/diplomatic_action_icons/grant_market_independence.dds"
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/diplomatic_action_subjects_05_grant_own_market_benign"

	potential = {
		scope:target_country = {
			market = prev.market
			NOT = { is_diplomatic_play_enemy_of = root }
		}
	}
	
	possible = {
		NOT = { market.owner = scope:target_country }
		OR = {
			AND = { # the target controls the market and the requester is independent
				scope:target_country = {
					is_subject = no
				}
				market.owner = root
			}
			scope:target_country = {
				is_direct_subject_of = root
			}
		}
	}
	
	pact = {
		cost = 0
		forced_duration = 12
		
		market_owner = second_country
		
		requirement_to_maintain = {
			trigger = {
				scope:target_country = {
					OR = {
						is_direct_subject_of = root
						power_bloc.power_bloc_leader ?= root
					}
				}
			}
		}
		
		actor_can_break = {
			always = yes
		}
		
		manual_break_effect = {
			scope:target_country = {
				if = {
					limit = {
						is_subject_of = root
					}

					add_liberty_desire = 25
				}
			}
		}
	}
	
	accept_effect = {
		if = {
			limit = {
				"scope:target_country.economic_dependence(root)" > 1
				scope:target_country.capital = {
					is_isolated_from_market = no
				}
				scope:target_country = {
					is_subject_of = root
				}
			}
			
			custom_tooltip = { text = grant_own_market_increase_liberty_desire_effect }
			scope:target_country = {
				add_liberty_desire = {
					add = "scope:target_country.economic_dependence(root)"
					subtract = 1
					multiply = 40
					add = 10
				}
			}
		}
		else_if = {
			limit = {
				"scope:target_country.economic_dependence(root)" < 1
				scope:target_country = {
					is_subject_of = root
				}
			}
			
			custom_tooltip = { text = grant_own_market_decrease_liberty_desire_effect }			
			scope:target_country = {
				add_liberty_desire = {
					add = 1
					subtract = "scope:target_country.economic_dependence(root)"
					multiply = -15
					add = -5
				}
			}				
		}		
	}
	
	ai = {
		evaluation_chance = {
			value = 0.25		
		}		
	
		propose_score = { 
			value = 100
		}
	
		will_propose = {
			OR = {
				supply_network_strength < 0.5
				scope:target_country.capital = { is_isolated_from_market = yes }
			}						
		}
		
		will_break = {
			OR = {
				is_adjacent_to_country = scope:target_country
				AND = {
					supply_network_strength >= 0.75
					has_port = yes
					scope:target_country = { has_port = yes }
				}
			}			
		}		
	}
}


﻿da_decrease_autonomy = {
	groups= {
		overlord
	}
	requires_approval = no
	show_effect_in_tooltip = yes
	is_hostile = yes

	texture = "gfx/interface/icons/diplomatic_action_icons/da_decrease_autonomy.dds"
	confirmation_sound = "event:/SFX/UI/SubjectInteractions/subject_button_small_autonomy_decreased"

	potential = {
		scope:target_country = {
			is_subject_of = root
			can_decrease_autonomy = yes
		}
	}
	
	possible = {
		scope:target_country = {
			can_decrease_autonomy = yes
			liberty_desire < 25
			NOT = { is_diplomatic_play_enemy_of = root }
		}
		
		OR = {
			NOT = {
				scope:target_country = { is_subject_type = subject_type_personal_union }
			} 
			has_technology_researched = nationalism
		}		

		OR = {
			NOT = {
				scope:target_country = { has_government_type = gov_chartered_company }
			} 
			has_technology_researched = civilizing_mission
		}
		
		custom_tooltip = {
			text = "CHANGE_AUTONOMY_ON_COOLDOWN_OVERLORD"
			NOT = {
				scope:target_country = {
					any_diplomatic_catalyst = {
						is_diplomatic_catalyst_type = catalyst_autonomy_change_imposed
						target = root
					}					
				}
			}
		}
	}

	accept_effect = {
		scope:target_country = {
			decrease_autonomy = yes
			add_liberty_desire = 50
		}
		create_unidirectional_truce = { country = scope:target_country months = 60 }
		custom_tooltip = {
			text = "ADD_LIBERTY_DESIRE_TO_ALL_SUBJECTS"
			every_subject_or_below = {
				limit = {
					is_direct_subject_of = root
					NOT = { this = scope:target_country }
				}
				add_liberty_desire = 10 #If you change this value, also update the loc string ADD_LIBERTY_DESIRE_TO_ALL_SUBJECTS accordingly
			}
		}
		hidden_effect = {
			scope:target_country = {
				create_diplomatic_catalyst = {
					type = catalyst_autonomy_change_imposed
					target = root
				}		
			}
		}		
	}

	
	ai = {	
		evaluation_chance = {
			value = 0.25		
		}		
	
		propose_score = {
			value = 100
		}
	
		will_propose = {
			OR = {
				has_attitude = {
					who = scope:target_country
					attitude = domineering
				}	
				AND = {
					NOT = { has_strategy = ai_strategy_anti_imperialism	}			
					scope:target_country = { liberty_desire < 10 }
				}
			}	
			# Don't decrease autonomy of strong subjects that might end up getting very high LD
			NOR = {
				AND = {
					scope:target_country = {
						OR = {
							is_subject_type = subject_type_dominion
							is_subject_type = subject_type_personal_union
						}	
					}
					prestige < {
						add = scope:target_country.prestige
						multiply = 4
					}						
				}			
				AND = {
					scope:target_country = {
						OR = {
							is_subject_type = subject_type_protectorate
							is_subject_type = subject_type_tributary
						}	
					}
					prestige < {
						add = scope:target_country.prestige
						multiply = 3
					}						
				}
			}			
			scope:target_country = { "potential_diplomatic_play_power_ratio(root)" <= 1.0 }
		}	
	}
}


﻿da_increase_autonomy_of_subject = {
	groups = {
		overlord
	}
	requires_approval = no
	show_effect_in_tooltip = yes
	
	texture = "gfx/interface/icons/diplomatic_action_icons/da_increase_autonomy.dds"
	confirmation_sound = "event:/SFX/UI/SubjectInteractions/subject_button_small_autonomy_increased"

	potential = {
		scope:target_country = {
			is_subject_of = root
			can_increase_autonomy = yes
		}
	}

	possible = {
		scope:target_country = {
			can_increase_autonomy = yes
			NOT = { is_diplomatic_play_enemy_of = root }			
		}	
	
		OR = {
			NOT = {
				scope:target_country = { has_government_type = gov_chartered_company }
			} 
			has_technology_researched = civilizing_mission
		}
		
		OR = {
			NOT = {
				scope:target_country = { is_subject_type = subject_type_personal_union }
			} 
			has_technology_researched = nationalism
		}				
		
		custom_tooltip = {
			text = "CHANGE_AUTONOMY_ON_COOLDOWN_OVERLORD"
			NOT = {
				scope:target_country = {
					any_diplomatic_catalyst = {
						is_diplomatic_catalyst_type = catalyst_autonomy_change_imposed
						target = root
					}
				}
			}
		}		
	}

	accept_effect = {
		scope:target_country = {
			increase_autonomy = yes	
			add_liberty_desire = -30			
		}
		create_unidirectional_truce = { country = scope:target_country months = 60 }
		hidden_effect = {
			scope:target_country = {
				create_diplomatic_catalyst = {
					type = catalyst_autonomy_change_imposed
					target = root
				}		
			}
		}		
	}
	
	ai = {
		evaluation_chance = {
			value = 0.25		
		}	
	
		propose_score = {
			value = 10
		}
	
		will_propose = {
			scope:target_country = {
				liberty_desire >= 75
			}
			OR = {	
				AND = {
					"relations(scope:target_country)" >= relations_threshold:friendly
					has_attitude = {
						who = scope:target_country
						attitude = protective
					}	
					OR = {
						has_strategy = ai_strategy_anti_imperialism
						has_strategy = ai_strategy_maintain_power_balance
					}
				}				
				scope:target_country = { "potential_diplomatic_play_power_ratio(root)" >= 0.75 }
			}					
		}	
	}
}

da_increase_autonomy_of_self = {
	groups = {
		subject
	}
	requires_approval = yes
	show_effect_in_tooltip = yes
	can_use_obligations = yes
	uses_random_approval = yes

	texture = "gfx/interface/icons/diplomatic_action_icons/da_increase_autonomy.dds"
	
	potential = {
		is_subject = yes
		can_increase_autonomy = yes
	}

	possible = {
		scope:target_country = {
			NOT = {
				is_diplomatic_play_enemy_of = root
			}
		}
		liberty_desire >= 75
		can_increase_autonomy = yes
		
		OR = {
			NOT = {
				has_government_type = gov_chartered_company
			} 
			has_technology_researched = civilizing_mission
		}

		OR = {
			NOT = {
				is_subject_type = subject_type_personal_union
			} 
			has_technology_researched = nationalism
		}				
		
		custom_tooltip = {
			text = "REQUEST_AUTONOMY_ON_COOLDOWN"
			NOT = {
				scope:target_country = {
					any_diplomatic_catalyst = {
						is_diplomatic_catalyst_type = catalyst_autonomy_increase_requested
						target = root
					}
				}
			}		
		}
		custom_tooltip = {
			text = "CHANGE_AUTONOMY_ON_COOLDOWN_SUBJECT"
			NOT = {
				scope:target_country = {
					any_diplomatic_catalyst = {
						is_diplomatic_catalyst_type = catalyst_autonomy_change_imposed
						target = scope:target_country
					}					
				}
			}
		}			
	}

	accept_effect = {
		increase_autonomy = yes				
		add_liberty_desire = -30
		create_bidirectional_truce = { country = scope:target_country months = 60 }
		scope:target_country = { change_relations = { country = root value = -20 } }
		hidden_effect = {
			scope:target_country = {
				create_diplomatic_catalyst = {
					type = catalyst_autonomy_increase_requested
					target = root
				}		
			}
			create_diplomatic_catalyst = {
				type = catalyst_autonomy_change_imposed
				target = scope:target_country
			}					
		}		
	}
	
	decline_effect = {
		add_liberty_desire = 10
		scope:target_country = { change_relations = { country = root value = -30 } }
		hidden_effect = {
			scope:target_country = {
				create_diplomatic_catalyst = {
					type = catalyst_autonomy_increase_requested
					target = root
				}		
			}
			create_diplomatic_catalyst = {
				type = catalyst_autonomy_increase_denied
				target = scope:target_country
			}				
		}
	}
	
	ai = {
		evaluation_chance = {
			value = 0.25		
		}
	
		accept_score = {
			value = 0
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}		

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					max = 25
				}					
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					min = -25
				}					
			}						
							
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = protective
						}	
					}
					value = 50
				}				
				else_if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = domineering
						}	
					}
					value = -50
				}							
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_CHANCE_TO_WIN_DIPLOMATIC_PLAY"
				value = "scope:actor.potential_diplomatic_play_power_ratio(root)"	
				subtract = 0.5
				multiply = 50
				max = 100
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_LIBERTY_DESIRE"
				value = "scope:actor.liberty_desire"
				subtract = 75
				multiply = 2
				min = -50
				max = 50
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"		
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}	
				else_if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
					}
					value = 25
				}					
				else_if = {
					limit = {
						"relations(scope:actor)" >=  relations_threshold:cordial
					}
					value = 10
				}
				else_if = {
					limit = {
						"relations(scope:actor)" > relations_threshold:poor
					}
					value = -25
				}					
				else = {
					value = -50
				}				
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}	
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}					
			}					
		}
		
		propose_score = {
			value = 100
		}
	
		will_propose = {
			OR = {
				has_strategy = ai_strategy_subject_strengthen_self
				has_strategy = ai_strategy_subject_break_free
			}
		}	
		
		will_propose_even_if_not_accepted = {
			always = yes
		}		
	}
}

﻿da_support_regime = {
	groups= {
		overlord
	}
	requires_approval = no
	should_notify_third_parties = yes
	show_effect_in_tooltip = yes
	
	texture = "gfx/interface/icons/diplomatic_action_icons/support_regime.dds"
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/diplomatic_action_subjects_09_support_regime_benign"
	
	possible = {	
		scope:target_country = {
			government_legitimacy < 75 # no point in supporting a regime that's already quite legitimate
			NOT = { is_diplomatic_play_enemy_of = root }
		}
	}
	
	accept_effect = {
		add_overlord_lobby_appeasement_from_diplomacy = { 
			FIRST = scope:target_country
			SECOND = root
			PRO_AMOUNT = 4
			ANTI_AMOUNT = -4
			FACTOR = appeasement_support_regime_started
		}
	}
	
	pact = {	
		cost = 50
		recipient_pays_maintenance = no
		forced_duration = 12
				
		first_modifier = {
			country_legitimacy_base_add = -10
		}
		
		second_modifier = {
			country_legitimacy_base_add = 20
			political_movement_radicalism_mult = -0.1
			country_liberty_desire_add = -0.1
		}
		
		actor_can_break = {
			always = yes
		}
	
		manual_break_effect = {
			scope:target_country = {
				add_liberty_desire = 10
			}
			
			add_overlord_lobby_appeasement_from_diplomacy = { 
				FIRST = scope:target_country
				SECOND = root
				PRO_AMOUNT = -4
				ANTI_AMOUNT = 4
				FACTOR = appeasement_support_regime_ended
			}				
		}
	}
	
	ai = {
		max_influence_spending_fraction = 0.1
		
		evaluation_chance = {
			value = 0.25
		}

		propose_score = {
			value = 1 # Low propose score, AI should replace this with other pacts if needed
			
			add = {
				value = scope:target_country.country_rank
				multiply = 1
			}
		}
	
		will_propose = {
			government_legitimacy > 90
			"ai_ideological_opinion(scope:target_country)" >= 25
			has_attitude = {
				who = scope:target_country
				attitude = protective
			}	
			OR = {
				scope:target_country = { liberty_desire >= 25 }
				NOT = {
					any_subject_or_below = {
						root = {
							has_diplomatic_pact = {
								type = da_support_regime
								who = prev
							}
						}
					}
				}
			}
		}

		will_break = {
			OR = {
				government_legitimacy < 50
				"ai_ideological_opinion(scope:target_country)" <= -25
				has_attitude = {
					who = scope:target_country
					attitude = domineering
				}					
			}
		}
		
		accept_score = {
			value = 0
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" <= -25
				}
				add = {
					add = -1000
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
				}
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 3
					max = 100
				}
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 2
					min = -100
				}
			}							
							
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = protective
						}	
					}
					value = 75
				}				
				else_if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = domineering
						}	
					}
					value = -50
				}							
			}
			
			if = {
				limit = {
					scope:actor = { is_subject_of = root }
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_LIBERTY_DESIRE"
					value = "scope:actor.liberty_desire"
					subtract = 50
				}
			}
			
			if = {
				limit = {
					legitimacy < 60
				}
				
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_LEGITIMACY"
					value = -1000
				}				
			}	
			else = {
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_LEGITIMACY"
					value = legitimacy
					subtract = 70
					multiply = 2
				}	
			}			
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"		
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 100
				}	
				else_if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
					}
					value = 50
				}					
				else_if = {
					limit = {
						"relations(scope:actor)" >=  relations_threshold:cordial
					}
					value = 25
				}
				else_if = {
					limit = {
						"relations(scope:actor)" > relations_threshold:poor
					}
					value = -25
				}					
				else = {
					value = -50
				}				
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}	
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}					
			}					
		}
	}
}

da_request_support_regime = {
	groups= {
		subject
	}
	requires_approval = yes
	should_notify_third_parties = yes
	show_effect_in_tooltip = yes
	uses_random_approval = yes
	
	texture = "gfx/interface/icons/diplomatic_action_icons/support_regime.dds"
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/diplomatic_action_subjects_09_support_regime_benign"
	
	possible = {
		NOT = { is_diplomatic_play_enemy_of = scope:target_country }
		custom_tooltip = {
			text = "SUPPORT_REGIME_ON_COOLDOWN"
			NOT = {
				scope:target_country = {
					any_diplomatic_catalyst = {
						is_diplomatic_catalyst_type = catalyst_support_regime_requested
						target = root
					}					
				}
			}
		}	
	}
	
	accept_effect = {
		add_overlord_lobby_appeasement_from_diplomacy = { 
			FIRST = root
			SECOND = scope:target_country
			PRO_AMOUNT = 4
			ANTI_AMOUNT = -4
			FACTOR = appeasement_support_regime_started
		}
	}
	
	decline_effect = {
		scope:target_country = { change_relations = { country = root value = -20 } }
		if = {
			limit = {
				is_subject_of = scope:target_country
			}
			add_liberty_desire = 10
		}
		hidden_effect = {
			scope:target_country = {
				create_diplomatic_catalyst = {
					type = catalyst_support_regime_requested
					target = root
				}		
			}
		}			
	}
	
	reverse_pact = da_support_regime
	
	ai = {
		evaluation_chance = {
			value = 0.25
		}

		propose_score = {
			value = 10
		}
	
		will_propose = {
			government_legitimacy < 50
			liberty_desire_weekly_progress > -0.2
		}

		will_break = {
			OR = {
				government_legitimacy < 50
				"ai_ideological_opinion(scope:target_country)" <= -25
				has_attitude = {
					who = scope:target_country
					attitude = domineering
				}
			}
		}
		
		will_propose_even_if_not_accepted = {
			"scope:actor.ai_ideological_opinion(root)" > -25
		}
	}
}

﻿da_knowledge_sharing = {
	groups= {
		power_bloc_leader
		overlord
	}
	requires_approval = no
	should_notify_third_parties = yes
	show_effect_in_tooltip = yes
	
	texture = "gfx/interface/icons/diplomatic_action_icons/knowledge_sharing.dds"
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/diplomatic_action_subjects_10_knowledge_sharing_benign"
	selectable = {
		has_dlc_feature = subject_and_bloc_actions
	}

	possible = {	
		scope:target_country = {
			NOT = { is_diplomatic_play_enemy_of = root }
		}
	}
	
	accept_effect = {
		add_overlord_lobby_appeasement_from_diplomacy = { 
			FIRST = scope:target_country
			SECOND = root
			PRO_AMOUNT = 2
			ANTI_AMOUNT = -2
			FACTOR = appeasement_knowledge_sharing_started
		}

		if = {
			limit = {
				scope:target_country = {
					is_subject_of = root
				}
			}
			custom_tooltip = {
				text = "DIPLOMATIC_PACT_REDUCED_LIBERTY_DESIRE"
			}
		}
	}	
	
	pact = {	
		cost = 50
		recipient_pays_maintenance = no
		forced_duration = 12
		
		first_modifier = {
			country_tech_spread_mult = -0.10
		}
		
		second_modifier = {
			country_tech_spread_mult = 0.25
		}
		
		actor_can_break = {
			always = yes
		}
			
		requirement_to_maintain = {
			trigger = {
				scope:target_country = {
					OR = {
						is_subject_of = root
						power_bloc.power_bloc_leader ?= root
					}
				}
			}
		}
		
		requirement_to_maintain = {
			trigger = {		
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_MORE_TECHS_RESEARCHED"
					techs_researched > scope:target_country.techs_researched
				}	
			}
		}
		
		manual_break_effect = {
			scope:target_country = {
				if = {
					limit = { is_subject_of = root }
					add_liberty_desire = 10
				}
			}
			
			add_overlord_lobby_appeasement_from_diplomacy = { 
				FIRST = scope:target_country
				SECOND = root
				PRO_AMOUNT = -2
				ANTI_AMOUNT = 2
				FACTOR = appeasement_knowledge_sharing_ended
			}				
		}
	}
	
	ai = {
		max_influence_spending_fraction = 0.1
		
		evaluation_chance = {
			value = 0.25		
		}		
		
		propose_score = {
			value = 1 # Low propose score, AI should replace this with other pacts if needed
			
			add = {
				value = scope:target_country.country_rank
				multiply = 1
			}
		}

		will_propose = {
			modifier:country_tech_spread_mult > -0.25 # don't compromise tech spread more than -25%
			has_attitude = {
				who = scope:target_country
				attitude = protective
			}	
			NOT = { is_country_type = unrecognized }
			OR = {
				scope:target_country = { liberty_desire >= 25 }
				NOT = {
					any_subject_or_below = {
						root = {
							has_diplomatic_pact = {
								type = da_knowledge_sharing
								who = prev
							}
						}
					}
				}
			}						
		}
		
		will_break = {
			OR = {
				has_attitude = {
					who = scope:target_country
					attitude = domineering
				}	
				is_country_type = unrecognized
				modifier:country_tech_spread_mult <= -0.5
			}
		}
		
		accept_score = {
			value = 0
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_TECH_SPREAD_VALUE"
				value = modifier:country_tech_spread_mult
				add = 0.25
				multiply = 200
			}

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					max = 25
				}
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					min = -25
				}
			}						
							
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = protective
						}	
					}
					value = 50
				}				
				else_if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = domineering
						}	
					}
					value = -50
				}							
			}
			
			if = {
				limit = {
					scope:actor = { is_subject_of = root }
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_LIBERTY_DESIRE"
					value = "scope:actor.liberty_desire"
					subtract = 50
				}
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"		
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 100
				}	
				else_if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
					}
					value = 50
				}					
				else_if = {
					limit = {
						"relations(scope:actor)" >=  relations_threshold:cordial
					}
					value = 25
				}
				else_if = {
					limit = {
						"relations(scope:actor)" > relations_threshold:poor
					}
					value = -50
				}					
				else = {
					value = -75
				}				
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}	
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}					
			}
		}
	}
}

da_request_knowledge_sharing = {
	groups= {
		subject
	}
	requires_approval = yes
	should_notify_third_parties = yes
	show_effect_in_tooltip = yes
	uses_random_approval = yes
	
	texture = "gfx/interface/icons/diplomatic_action_icons/knowledge_sharing.dds"
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/diplomatic_action_subjects_10_knowledge_sharing_benign"
	
	possible = {
		NOT = { is_diplomatic_play_enemy_of = scope:target_country }
		custom_tooltip = {
			text = "KNOWLEDGE_SHARING_ON_COOLDOWN"
			NOT = {
				scope:target_country = {
					any_diplomatic_catalyst = {
						is_diplomatic_catalyst_type = catalyst_knowledge_sharing_requested
						target = root
					}
				}
			}
		}	
	}
	
	accept_effect = {
		add_overlord_lobby_appeasement_from_diplomacy = { 
			FIRST = root
			SECOND = scope:target_country
			PRO_AMOUNT = 2
			ANTI_AMOUNT = -2
			FACTOR = appeasement_knowledge_sharing_started
		}

		if = {
			limit = {
				scope:target_country = {
					is_subject_of = root
				}
			}
			custom_tooltip = {
				text = "DIPLOMATIC_PACT_REDUCED_LIBERTY_DESIRE"
			}
		}
	}
	
	decline_effect = {
		scope:target_country = { change_relations = { country = root value = -20 } }
		if = {
			limit = {
				is_subject_of = scope:target_country
			}
			add_liberty_desire = 10
		}
		hidden_effect = {
			scope:target_country = {
				create_diplomatic_catalyst = {
					type = catalyst_knowledge_sharing_requested
					target = root
				}		
			}
		}			
	}
	
	reverse_pact = da_knowledge_sharing
	
	ai = {
		evaluation_chance = {
			value = 0.25
		}

		propose_score = {
			value = {
				add = scope:target_country.techs_researched
				subtract = techs_researched
			}
		}
	
		will_propose = {
			techs_researched < scope:target_country.techs_researched
		}

		will_break = {
			OR = {
				government_legitimacy < 50
				"ai_ideological_opinion(scope:target_country)" <= -25
				has_attitude = {
					who = scope:target_country
					attitude = domineering
				}
			}
		}
		
		will_propose_even_if_not_accepted = {
			techs_researched < {
				add = scope:target_country.techs_researched
				multiply = 0.2
			}
		}
	}
}

﻿da_evangelize = {
	groups = {
		overlord
	}
	requires_approval = no
	should_notify_third_parties = yes
	show_effect_in_tooltip = yes
	
	texture = "gfx/interface/icons/diplomatic_action_icons/evangelize.dds"
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/diplomatic_action_subjects_11_evangelize_benign"
	selectable = {
		has_dlc_feature = subject_and_bloc_actions
	}
	
	potential = {	
		NOT = { country_has_state_religion = rel:atheist }
		scope:target_country = {
			country_has_state_religion = root.religion # Only show if the subject is a coreligionist
			NOT = { is_diplomatic_play_enemy_of = root }
		}
	}
	
	possible = {
		has_law = law_type:law_state_religion
	}

	accept_effect = {
		scope:target_country = {
			if = {
				limit = {
					OR = {
						has_law = law_type:law_state_religion
						ig:ig_devout = {
							is_in_government = yes
						}
						any_interest_group = {
							is_in_government = yes
							leader = {
								OR = {
									has_ideology = ideology:ideology_traditionalist
									has_ideology = ideology:ideology_theocrat
								}			
							}
						}
					}
				}
				custom_tooltip = {
					text = "da_evangelize_liberty_desire_decrease_custom_tooltip"
					add_liberty_desire = -10
				}
			}
			else = {
				custom_tooltip = {
					text = "da_evangelize_liberty_desire_increase_custom_tooltip"
					add_liberty_desire = 10
				}
			}
		}
	}
	
	pact = {	
		cost = 25
		recipient_pays_maintenance = no
		forced_duration = 12
				
		second_modifier = {
			state_conversion_mult = 0.5
		}
		
		actor_can_break = {
			always = yes
		}
		
		manual_break_effect = {
			scope:target_country = {		
				if = {
					limit = {
						OR = {
							has_law = law_type:law_state_religion
							ig:ig_devout = {
								is_in_government = yes
							}
							any_interest_group = {
								is_in_government = yes
								leader = {
									OR = {
										has_ideology = ideology:ideology_traditionalist
										has_ideology = ideology:ideology_theocrat
									}			
								}
							}
						}			
					}
					add_liberty_desire = 10 # The Devout don't like evangelization being called off
				}
				else = {
					add_liberty_desire = -10
				}
			}
		}		
	}		
	
	ai = {
		max_influence_spending_fraction = 0.05
		
		evaluation_chance = {
			value = 0.25		
		}		
	
		propose_score = {
			value = 10
		}
	
		will_propose = {
			has_attitude = {
				who = scope:target_country
				attitude = protective
			}	
			OR = {
				ig:ig_devout = {
					is_in_government = yes
				}
				any_interest_group = {
					is_in_government = yes
					leader = {
						OR = {
							has_ideology = ideology:ideology_traditionalist
							has_ideology = ideology:ideology_theocrat
						}			
					}
				}
			}
		}
		
		will_break = {
			OR = {
				has_attitude = {
					who = scope:target_country
					attitude = domineering
				}	
				NOR = {
					ig:ig_devout = {
						is_in_government = yes
					}
					any_interest_group = {
						is_in_government = yes
						leader = {
							OR = {
								has_ideology = ideology:ideology_traditionalist
								has_ideology = ideology:ideology_theocrat
							}			
						}
					}
				}
			}	
		}	
	}
}

﻿request_market_control = {
	requires_approval = yes
	can_use_obligations = yes
	uses_random_approval = yes
	groups= {
		subject
		power_bloc_member
	}
	
	texture = "gfx/interface/icons/diplomatic_action_icons/request_market_control.dds"
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/diplomatic_action_subjects_12_request_market_control_benign"
	
	potential = {
		scope:target_country = {
		   market = root.market # same market as the requester
		}
	}
	
	possible = {
		OR = {
			AND = { # the target controls the market and the requester is independent
				scope:target_country = {
					market.owner = this
				}
				is_subject = no
			}
			AND = {
				is_direct_subject_of = scope:target_country # or the country is a direct subject of target country being asked
				liberty_desire >= 25
			}
		}
		custom_tooltip = {
			text = "REQUEST_MARKET_ON_COOLDOWN"
			NOT = {
				scope:target_country = {
					any_diplomatic_catalyst = {
						is_diplomatic_catalyst_type = catalyst_market_control_requested
						target = root
					}
				}
			}
		}
	}
	
	accept_effect = {
		scope:target_country = { change_relations = { country = root value = 10 } }
		if = {
			limit = {
				is_subject_of = scope:target_country
			}
			add_liberty_desire = -30
		}
		hidden_effect = {
			scope:target_country = {
				create_diplomatic_catalyst = {
					type = catalyst_market_control_requested
					target = root
				}
			}
		}
	}
	
	decline_effect = {
		scope:target_country = { change_relations = { country = root value = -20 } }
		if = {
			limit = { 
				is_subject_of = scope:target_country
			}
			add_liberty_desire = 10		
		}
		hidden_effect = {
			scope:target_country = {
				create_diplomatic_catalyst = {
					type = catalyst_market_control_requested
					target = root
				}		
			}
		}			
	}
	
	pact = {
		cost = 0
		forced_duration = 12
		
		market_owner = first_country
		
		requirement_to_maintain = {
			trigger = {
				OR = {
					is_subject_of = scope:target_country
					power_bloc.power_bloc_leader ?= scope:target_country
				}
			}
		}
		
		actor_can_break = {
			always = yes
		}

		manual_break_effect = {
			change_relations = { country = scope:target_country value = -10 }
		}
		auto_break_effect = {
			change_relations = { country = scope:target_country value = -10 }
		}
	}
	
	ai = {
		evaluation_chance = {
			value = 0.25
		}
	
		accept_score = {
			value = 0
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}		

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					max = 25
				}					
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					min = -25
				}					
			}						
							
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = protective
						}	
					}
					value = 50
				}				
				else_if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = domineering
						}	
					}
					value = -50
				}							
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_ECONOMIC_DEPENDENCE"
				value = 1
				subtract = "scope:actor.economic_dependence(root)"	
				multiply = 50
			}

			if = {
				limit = {
					scope:actor = { is_subject_of = root }
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_LIBERTY_DESIRE"
					value = "scope:actor.liberty_desire"
					subtract = 25
					multiply = 0.5
				}				
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_CAPITAL_MARKET_ACCESS"
				value = 1
				subtract = scope:actor.capital.market_access
				multiply = 50
			}	
				
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"		
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}	
				else_if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
					}
					value = 25
				}					
				else_if = {
					limit = {
						"relations(scope:actor)" >=  relations_threshold:cordial
					}
					value = 10
				}
				else_if = {
					limit = {
						"relations(scope:actor)" > relations_threshold:poor
					}
					value = -25
				}					
				else = {
					value = -50
				}				
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}	
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}					
			}					
		}
	
		propose_score = { 
			value = 10
		}
	
		will_propose = {
			root = {			
				OR = {
					capital.market_access <= 0.5
					AND = {
						liberty_desire >= 50
						"economic_dependence(scope:target_country)" <= 0.25
					}
					AND = {
						liberty_desire >= 75
						"economic_dependence(scope:target_country)" <= 0.50
					}					
				}				
			}		
		}
		
		will_propose_even_if_not_accepted = {
			always = yes
		}			
	}
}


﻿grant_state = {
	groups= {
		overlord
	}
	
	texture = "gfx/interface/icons/diplomatic_action_icons/grant_state.dds"
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/diplomatic_action_subjects_13_handle_states"
	
	requires_approval = no
	should_notify_third_parties = yes
	show_effect_in_tooltip = yes
	state_selection = first_required
    first_state_list = first_country_and_subjects
	can_use_obligations = no

	possible = {
		is_diplomatic_play_committed_participant = no
		scope:target_country = { is_diplomatic_play_committed_participant = no }
		is_revolutionary = no
	}
	
	first_state_trigger = {
		OR = {
			AND = {
				owner = scope:country
				NOR = { # cannot give away primary homelands unless they're unincorporated
					is_incorporated = yes
					is_homeland_of_country_cultures = scope:country
				}
			}
			scope:country = { 
				any_subject_or_below = { # can give away states owned by other subjects
					root.owner = this
					NOT = { root.owner = scope:target_country }
					OR = {
						is_subject_type = subject_type_puppet
						is_subject_type = subject_type_vassal
					}								
				}
			}
		}
		is_capital = no
		is_under_colonization = no
		OR = {
			scope:target_country = { is_adjacent_to_state = root } # can always give away states that are adjacent to the subject
			AND = {
				is_homeland_of_country_cultures = scope:target_country
				has_port = yes
				scope:target_country = { has_port = yes }
			}
		}
	}
	
	accept_effect = {
		if = {
			limit = { exists = scope:first_state }
			
			# Giving a state from one subject to another
			if = {
				limit = { scope:first_state = { NOT = { owner = root } } }	
				scope:first_state.owner = { save_temporary_scope_as = subject_taken_from }
				scope:subject_taken_from = {
					add_liberty_desire = {
						value = "scope:first_state.ai_state_value(scope:subject_taken_from)"
						divide = 5
						max = 100
						min = 20
					}				
				}
			}		
			
			scope:target_country = {
				add_liberty_desire = {
					value = 0
					subtract = "scope:first_state.ai_state_value(scope:target_country)"
					divide = 5
					max = -5
					min = -50
				}				
			}		
			scope:first_state = { set_state_owner = scope:target_country }		
		}
	}
	
	ai = {
		evaluation_chance = {
			value = 0.0

			if = {
				limit = {
					any_subject_or_below = {
						NOR = {
							is_subject_type = subject_type_protectorate
							is_subject_type = subject_type_tributary
						}
					}					
				}
				add = 0.25			
			}	
			
			if = {
				limit = {
					any_subject_or_below = {
						OR = {
							c:BIC ?= this
							c:DEI ?= this
							is_african_subject = yes
						}
					}					
				}
				add = 0.5
			}
		}	
	
		will_select_as_first_state = {
			is_incorporated = no
			NOT = { is_homeland_of_country_cultures = owner }
			trigger_if = {
				limit = {
					c:GBR ?= owner
					owner = { # Whilst the crown colony system remains in place, the AI won't be inclined to change this
						has_law = law_type:law_monarchy
					}
				}
				NOR = {
					state_region = s:STATE_CEYLON
					state_region = s:STATE_NEWFOUNDLAND
				}
			}
			trigger_if = {
				limit = {
					c:CHI ?= owner
					owner = { # China won't decentralise for as long as the game-start state of affairs remains in place
						has_law = law_type:law_monarchy
					}
				}
				NOR = {
					state_region = s:STATE_TIANSHAN
					state_region = s:STATE_DZUNGARIA
					region = sr:region_north_china
					region = sr:region_south_china
				}
			}
		}
		
		will_propose_with_states = {
			exists = scope:first_state

			has_attitude = {
				who = scope:target_country
				attitude = protective
			}
			
			# AI doesn't give away states adjacent to their incorporated states
			scope:first_state = {
				NOT = {
					any_neighbouring_state = {
						owner = root
						is_incorporated = yes
					}
				}			
			}			
	
			# AI doesn't give away states to subjects that are unrecognized when they are recognized
			# They also don't want to give states to very autonomous subjects since they don't get much from it
			# The exception to these rules is when the state is totally disconnected from the rest of their empire
			OR = {
				AND = {
					scope:target_country = {				
						NOR = {
							is_subject_type = subject_type_protectorate
							is_subject_type = subject_type_tributary
						}
					}
					NAND = {
						NOT = { is_country_type = unrecognized }
						scope:target_country = { is_country_type = unrecognized } 						
					}		
				}
				scope:first_state = { 
					has_port = no
					NOT = {
						any_neighbouring_state = {
							owner = root
						}					
					}
					any_neighbouring_state = {
						owner = scope:target_country
					}					
				}			
			}

			# China shouldn't give all of its West to Tibet
			NOT = {
				OR = {
					country_has_primary_culture = cu:han
					country_has_primary_culture = cu:manchu
				}
				scope:target_country = {
					country_has_primary_culture = cu:tibetan
				}
				scope:first_state = {
					NOT = { is_homeland_of_country_cultures = scope:target_country }
				}
			}
		}	
	
		propose_score = {
			value = 10

			if = { # Consolidation of colonial tags
				limit = {
					scope:target_country = {
						OR = {
							AND = {
								c:BIC ?= this
								scope:first_state = {
									OR = {
										region = sr:region_north_india
										region = sr:region_south_india
										region = sr:region_himalayas
									}
									NOT = {
										state_region = s:STATE_CEYLON
									}
								}
							}
							AND = {
								c:DEI ?= this
								scope:first_state = {
									region = sr:region_indonesia
								}
							}
							is_african_subject = yes
						}
					}
				}
				add = 50
			}
			
			# Prefer ceding land to same culture subjects
			if = {
				limit = { 
					scope:target_country = { 
						any_primary_culture = { is_primary_culture_of = root }
					} 
				}
				multiply = 5.0
			}			
			
			# Avoid ceding land to unrecognized if there's alternatives
			if = {
				limit = { 
					NOT = { is_country_type = unrecognized }
					scope:target_country = { is_country_type = unrecognized } 					
				}
				multiply = 0.1
			}
		}
	}
}

take_state = {
	groups= {
		overlord
	}
	
	texture = "gfx/interface/icons/diplomatic_action_icons/take_state.dds"
	
	requires_approval = no
	should_notify_third_parties = yes
	show_effect_in_tooltip = yes
	state_selection = second_required
	second_state_list = second_country
	can_use_obligations = no

	possible = {
		scope:target_country = { 
			OR = {
				is_subject_type = subject_type_puppet
				is_subject_type = subject_type_vassal
				is_subject_type = subject_type_dominion
			}
			is_diplomatic_play_committed_participant = no 
			is_revolutionary = no
			liberty_desire < 25
		}
	}
	
	second_state_trigger = {
		owner = scope:target_country
		is_capital = no
		is_under_colonization = no
		
		# Not allowed to take incorporated states from dominions
		trigger_if = {
			limit = { scope:target_country = { is_subject_type = subject_type_dominion } }
			is_incorporated = no
		}
	}
	
	accept_effect = {
		if = {
			limit = { exists = scope:second_state }	
			scope:target_country = {
				add_liberty_desire = {
					value = "scope:second_state.ai_state_value(scope:target_country)"
					divide = 5
					max = 100
					min = 20
				}				
			}
			create_incident = {
				country = scope:target_country
				value = {
					value = "scope:second_state.ai_state_value(scope:target_country)"
					divide = 10
					max = 50
					min = 10						
				}
			}					
			scope:second_state = { set_state_owner = root }		
		}
	}
	
	ai = {
		evaluation_chance = {
			value = 0.0

			if = {
				limit = {
					any_subject_or_below = {
						OR = {
							is_subject_type = subject_type_puppet
							is_subject_type = subject_type_vassal
							is_subject_type = subject_type_dominion
						}
					}					
				}
				add = 0.1
			}				
		}		
	
		will_select_as_second_state = {
			is_incorporated = no		
		}	
		
		will_propose_with_states = {
			exists = scope:second_state
			
			# The AI only uses take state on disconnected colonial bits of subjects which are adjacent to their own lands
			NOT = {
				any_neighbouring_state = {
					owner = root.owner
					is_incorporated = yes
				}
			}			
			
			scope:second_state = {
				any_neighbouring_state = {
					owner = root
				}
			}

			# This may seem odd, but is intentional
			# If the overlord is domineering they should be focusing on reducing autonomy and annexing the subject instead of just taking disconnected colonial bits
			has_attitude = {
				who = scope:target_country
				attitude = protective
			}		
		}	
	
		propose_score = {
			value = 10
		}
	}
}

demand_state = {
	groups= {
		subject
	}
	
	texture = "gfx/interface/icons/diplomatic_action_icons/take_state.dds"
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/diplomatic_action_subjects_13_handle_states"
	
	requires_approval = yes
	should_notify_third_parties = yes
	show_effect_in_tooltip = yes
	state_selection = second_required
    second_state_list = second_country_and_subjects
	can_use_obligations = yes

	possible = {
		is_diplomatic_play_committed_participant = no
		scope:target_country = { is_diplomatic_play_committed_participant = no }
		is_revolutionary = no
	}
	
	second_state_trigger = {
		OR = {
			scope:country = { is_adjacent_to_state = root } # must either be adjacent to the initiating country, or
			AND = {											# be a Homeland of its culture, with a port available for market connection
				is_homeland_of_country_cultures = scope:country
				has_port = yes
				scope:country = { has_port = yes }
			}
		}
		OR = {
			AND = { 										# if owned by the target of the action, it must not be incorporated
				owner = scope:target_country
				is_incorporated = no
			}
			scope:target_country = { 						# if owned by one of the target's subjects, that subject must either be a Puppet or a Vassal
				any_subject_or_below = {
					root.owner = this
					NOT = { root.owner = scope:country }
					OR = {
						is_subject_type = subject_type_puppet
						is_subject_type = subject_type_vassal
					}
				}
			}
		}
		NOT = { is_homeland_of_country_cultures = owner }
		is_capital = no
		is_under_colonization = no
	}
	
	accept_effect = {
		if = {
			limit = { exists = scope:second_state }
			
			# Giving a state from one subject to another
			if = {
				limit = { scope:second_state = { NOT = { owner = scope:target_country } } }	
				scope:second_state.owner = { save_temporary_scope_as = subject_taken_from }
				scope:subject_taken_from = {
					add_liberty_desire = {
						value = "scope:second_state.ai_state_value(scope:subject_taken_from)"
						divide = 5
						max = 100
						min = 20
					}
				}
			}
			
			add_liberty_desire = {
				value = 0
				subtract = "scope:second_state.ai_state_value(root)"
				divide = 5
				max = -5
				min = -50
			}	
			scope:second_state = { set_state_owner = root }		
		}
	}
	
	ai = {
		evaluation_chance = {
			value = {
				add = liberty_desire
				subtract = 75
				divide = 100
			}

			if = {
				limit = {
					is_subject_type = subject_type_dominion
				}
				add = 0.1
			}
			
			if = {
				limit = {
					OR = {
						c:BIC ?= this
						c:DEI ?= this
						is_african_subject = yes
					}
				}
				add = 0.2
			}
		}
		
		will_propose_with_states = {
			exists = scope:second_state
			trigger_if = {
				limit = { is_african_subject = yes }
				scope:second_state = {
					OR = {
						is_incorporated = no
						owner = {
							is_african_subject = yes
						}
					}
				}
			}
		}	
	
		accept_score = {
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}
			
			if = {
				limit = { exists = scope:second_state }
				subtract = {
					value = "scope:second_state.ai_state_value(scope:second_state.owner)"
					desc = "DIPLOMATIC_ACCEPTANCE_TRADE_STATE_SECOND_STATE"
					
					if = {
						limit = {
							scope:second_state = { owner = root }					
						}
						multiply = 2
					}						
					
					min = 10				
				}
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = protective
						}	
					}
					value = 50
				}				
				else_if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = domineering
						}	
					}
					value = -50
				}							
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_LIBERTY_DESIRE"
				value = "scope:actor.liberty_desire"
				subtract = 50
				multiply = 3
				min = -50
				max = 50
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"		
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}	
				else_if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
					}
					value = 25
				}					
				else_if = {
					limit = {
						"relations(scope:actor)" >=  relations_threshold:cordial
					}
					value = 10
				}
				else_if = {
					limit = {
						"relations(scope:actor)" > relations_threshold:poor
					}
					value = -25
				}					
				else = {
					value = -50
				}				
			}
		}
		
		use_obligation_chance = {
			value = 10
		}
		
		owe_obligation_chance = {
			value = 10	
		}
	}
}
﻿enforce_military_access = {
	groups = {
		overlord
	}

	texture = "gfx/interface/icons/diplomatic_action_icons/enforce_military_access.dds"

	requires_approval = no
	should_notify_third_parties = yes
	show_effect_in_tooltip = yes
	can_use_obligations = no

	possible = {
		is_at_war = yes
		any_scope_war = {
			NOT = { is_war_participant = scope:target_country }
		}
	}

	accept_effect = {
		every_scope_war = {
			join_war = {
				target = scope:target_country
				side = root
			}
		}

		if = {
			limit = {
				scope:target_country = { 
					OR = {
						is_subject_type = subject_type_puppet
						is_subject_type = subject_type_vassal
						is_subject_type = subject_type_dominion
						is_subject_type = subject_type_personal_union
					}
				}
			}
			
			scope:target_country = {
				add_liberty_desire = 10
			}			
		}
		else = {
			scope:target_country = {
				add_liberty_desire = 20
			}		
		}
	}

	ai = {
		evaluation_chance = {
			value = 0.0
			
			if = {
				limit = { is_at_war = yes }
				add = 1.0				
			}
		}
		
		propose_score = {
			value = 1000
		}
	
		will_propose = {
			any_scope_war = {
				NOT = { is_war_participant = scope:target_country }
				any_war_participant = {
					NOT = { this = root }
					is_adjacent_to_country = scope:target_country
					NOT = { is_adjacent_to_country = root }
				}
			}
		}
	}
}

﻿﻿increase_relations = {
	groups= {
		general
	}
	
	requires_approval = no
	show_confirmation_box = no
	
	selectable = {
		NOT = { is_country_type = decentralized }
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
		}
	}

	possible = {
		NOT = { has_diplomatic_pact = { who = scope:target_country type = damage_relations } }	
	}	

	pact = {	
		cost = 150
		is_two_sided_pact = no
		show_in_outliner = yes	
		
		relations_progress_per_day = 3 # At 100, +1 relations
		relations_improvement_max = 50
		
		first_modifier = {
			country_pact_leverage_generation_add = 300
		}		
		
		requirement_to_maintain = {
			trigger = {
				has_diplomatic_relevance = scope:target_country
			}
		}
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_AT_PEACE"
					NOT = { has_war_with = scope:target_country }
				}			
			}
		}		
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NOT_DECENTRALIZED"
					NOT = { is_country_type = decentralized }
					scope:target_country = {
						NOT = { is_country_type = decentralized }
					}				
				}
			}
		}			
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = DIPLO_ACTION_RELATIONS_AMICABLE_OR_GREATER_NOT
					OR = {
						scope:target_country = { is_power_bloc_leader = yes }
						scope:target_country.relations:root < relations_threshold:amicable
					}
				}
			}
		}
		
		requirement_to_maintain = {
			trigger = {
				NOT = { has_diplomats_expelled = scope:target_country }
			}
		}
		
		requirement_to_maintain = {
			trigger = {				
				NOT = { scope:target_country = { has_diplomats_expelled = root } }
			}
		}		
	}
	
	ai = {
		max_influence_spending_fraction = 0.25
	
		evaluation_chance = {
			value = 0.5
		}	
	
		propose_score = {
			value = 5

			if = {
				limit = {	
					has_attitude = {
						who = scope:target_country
						attitude = protective
					}						
				}
				
				add = 5
			}
			
			if = {
				limit = {
					has_attitude = {
						who = scope:target_country
						attitude = conciliatory
					}					
				}
				
				add = 20
			}
			
			add = {
				value = scope:target_country.country_rank
				multiply = 3
			}
			
			if = {
				limit = {	
					OR = {
						is_subject_of = scope:target_country
						scope:target_country = { is_subject_of = root }
					}		
				}
				
				multiply = 2
			}				
		}		
	
		will_propose = { 
			OR = {
				AND = {
					has_attitude = {
						who = scope:target_country
						attitude = cooperative
					}
					country_rank <= scope:target_country.country_rank				
				}
				has_attitude = {
					who = scope:target_country
					attitude = conciliatory
				}	
				has_attitude = {
					who = scope:target_country
					attitude = genial
				}
				has_attitude = {
					who = scope:target_country
					attitude = protective
				}					
			}
		}	
		
		will_break = {
			OR = {
				NOR = {
					has_attitude = {
						who = scope:target_country
						attitude = genial
					}	
					has_attitude = {
						who = scope:target_country
						attitude = conciliatory
					}	
					has_attitude = {
						who = scope:target_country
						attitude = cooperative
					}
					has_attitude = {
						who = scope:target_country
						attitude = protective
					}					
				}			
				AND = {
					scope:target_country.relations:root >= relations_threshold:amicable	
					OR = {
						country_rank >= rank_value:minor_power
						NOT = {
							has_attitude = {
								who = scope:target_country
								attitude = genial
							}					
						}						
					}
				}
			}
		
		}
	}
}

damage_relations = {	
	groups= {
		general
	}
	
	requires_approval = no
	show_confirmation_box = no
	
	selectable = {
		NOT = { is_country_type = decentralized }	
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
		}
	}
	
	possible = {
		NOT = { has_diplomatic_pact = { who = scope:target_country type = increase_relations } }
	}

	pact = {	
		cost = 100
		is_hostile = yes
		is_two_sided_pact = no
		infamy_affects_maintenance = no
		show_in_outliner = yes
		
		relations_progress_per_day = -3 # At -100, -1 relations
		relations_improvement_min = -50
		
		requirement_to_maintain = {
			trigger = {
				has_diplomatic_relevance = scope:target_country
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = DIPLO_ACTION_RELATIONS_COLD_OR_LESS_NOT
					scope:target_country.relations:root > relations_threshold:cold
				}
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NOT_DECENTRALIZED"
					NOT = { is_country_type = decentralized }
					scope:target_country = {
						NOT = { is_country_type = decentralized }
					}				
				}
			}
		}			
	}
	
	ai = {
		max_influence_spending_fraction = 0.15
	
		evaluation_chance = {
			value = 0.5
		}	
	
		propose_score = {
			value = 10
			
			if = {
				limit = {
					OR = {
						has_attitude = {
							who = scope:target_country
							attitude = belligerent
						}	
						has_attitude = {
							who = scope:target_country
							attitude = domineering
						}	
						has_attitude = {
							who = scope:target_country
							attitude = rebellious
						}						
					}			
				}
				
				add = 10
			}	

			if = {
				limit = {	
					OR = {
						is_subject_of = scope:target_country
						scope:target_country = { is_subject_of = root }
					}		
				}
				
				multiply = 5
			}

			if = {
				limit = {
					AND = {
						has_radical_leftist_government = no			
						scope:target_country = {
							has_radical_leftist_government = yes
						}
					}
					
				}
				multiply = 2
			}
	
			if = {
				limit = {
					AND = {
						has_radical_leftist_economy = no			
						scope:target_country = {
							has_radical_leftist_economy = yes
						}
					}
					
				}
				multiply = 2
			}									
		}	
	
		will_propose = { 
			OR = {
				AND = {
					has_attitude = {
						who = scope:target_country
						attitude = antagonistic
					}				
					scope:target_country.relations:root > 0
				}				
				has_attitude = {
					who = scope:target_country
					attitude = belligerent
				}
				has_attitude = {
					who = scope:target_country
					attitude = domineering
				}					
				has_attitude = {
					who = scope:target_country
					attitude = rebellious
				}		
			}
			scope:target_country.relations:root > relations_threshold:poor
		}
		
		will_break = { 
			OR = {
				NOR = {
					has_attitude = {
						who = scope:target_country
						attitude = belligerent
					}
					has_attitude = {
						who = scope:target_country
						attitude = domineering
					}				
					has_attitude = {
						who = scope:target_country
						attitude = antagonistic
					}				
					has_attitude = {
						who = scope:target_country
						attitude = rebellious
					}						
				}	
				scope:target_country.relations:root <= relations_threshold:poor
			}
		}
	}
}


﻿expel_diplomats = {
	groups= {
		general
	}
	
	requires_approval = no
	should_notify_third_parties = no
	show_effect_in_tooltip = yes
	
	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
			is_revolutionary = no
		}
	}
	
	possible = {	
		NOT = { has_war_with = scope:target_country }	
		is_revolutionary = no
		has_diplomatic_relevance = scope:target_country
		NOT = { has_diplomatic_pact = { who = scope:target_country type = increase_relations } }
		NOT = { has_diplomats_expelled = scope:target_country }
		OR = {
			NOT = {
				is_subject_of = scope:target_country
			}
			liberty_desire >= 75
		}
	}
	
	accept_effect = {
		change_relations = { country = scope:target_country value = -30 }
		set_diplomats_expelled = scope:target_country
		change_infamy = 10
		if = {
			limit = {
				scope:target_country = {
					is_in_power_bloc = yes
					is_power_bloc_leader = yes
				}
			}
			custom_tooltip = {
				text = expel_diplomats_leverage_generation_tt
			}
		}

	}
	
	ai = {
		evaluation_chance = {
			value = 0.25
		}	
	
		propose_score = {
			value = 100
		}
	
		will_propose = {
			scope:target_country.relations:root >= relations_threshold:cordial
			
			OR = {
				AND = {
					country_rank >= rank_value:great_power
					scope:target_country = { infamy >= infamy_threshold:pariah }					
				}
				AND = {
					OR = {
						has_attitude = {
							who = scope:target_country
							attitude = domineering
						}	
						has_attitude = {
							who = scope:target_country
							attitude = belligerent
						}			
					}	
					scope:target_country.relations:root >= relations_threshold:cordial
					infamy < infamy_threshold:infamous
					OR = {
						influence < 200 # Not enough to damage relations normally	
						scope:target_country = { # They are countering damage relations with improve relations
							has_diplomatic_pact = { who = root type = increase_relations }
						}
					}							
				}
			}
		}
	}
}
﻿take_on_debt = {
	groups= {
		general
	}
	
	requires_approval = yes
	should_notify_third_parties = yes
	show_effect_in_tooltip = yes

	unlocking_technologies = {
		central_banking
	}
	
	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
			is_revolutionary = no
		}
	}
	
	possible = {	
		NOT = { has_war_with = scope:target_country }
		has_diplomatic_relevance = scope:target_country
		scope:target_country = {
			scaled_debt > 0
		}
		can_take_on_scaled_debt = {
			who = scope:target_country
			value = scope:target_country.scaled_debt
		}
		is_revolutionary = no
	}
	
	accept_effect = {
		take_on_scaled_debt = {
			who = scope:target_country
			value = scope:target_country.scaled_debt
		}	
		if = {
			limit = {
				root = {
					owes_obligation_to = scope:target_country			
				}			
			}
			root = { set_owes_obligation_to = { country = scope:target_country setting = no } }
		}		
		else_if = {
			limit = {
				scope:target_country = {
					NOT = { owes_obligation_to = root }					
				}			
			}
			scope:target_country = { set_owes_obligation_to = { country = root setting = yes } }
		}
		else = {
			change_relations = { country = scope:target_country value = 30 }
		}
		
		hidden_effect = {
			scope:target_country = {
				set_variable = {
					name = debt_bought_out_recently
					value = yes
					days = 7300
				}				
			}	
		}		
	}
	
	ai = {
		evaluation_chance = {
			value = 0.25
		}		
	
		propose_score = {
			value = 100				
		}
	
		will_propose = { 
			is_at_war = no
			scaled_debt <= 0
			scope:target_country = {
				scaled_debt >= 0.25
				NOT = { has_variable = debt_bought_out_recently }
			}			
			has_attitude = {
				who = scope:target_country
				attitude = protective
			}
			# We want to have at least five times their income, and at least 50k income in general
			OR = {
				AND = {
					weekly_net_fixed_income >= 50000
					scope:target_country.weekly_net_fixed_income <= 10000
				}
				AND = {
					weekly_net_fixed_income >= 75000
					scope:target_country.weekly_net_fixed_income <= 15000
				}				
				AND = {
					weekly_net_fixed_income >= 100000
					scope:target_country.weekly_net_fixed_income <= 20000
				}
				AND = {
					weekly_net_fixed_income >= 125000
					scope:target_country.weekly_net_fixed_income <= 25000
				}
				AND = {
					weekly_net_fixed_income >= 150000
					scope:target_country.weekly_net_fixed_income <= 30000
				}	
				AND = {
					weekly_net_fixed_income >= 175000
					scope:target_country.weekly_net_fixed_income <= 35000
				}
				AND = {
					weekly_net_fixed_income >= 200000
					scope:target_country.weekly_net_fixed_income <= 40000
				}
				AND = {
					weekly_net_fixed_income >= 225000
					scope:target_country.weekly_net_fixed_income <= 45000
				}	
				AND = {
					weekly_net_fixed_income >= 250000
					scope:target_country.weekly_net_fixed_income <= 50000
				}					
			}					
		}			
		
		accept_score = {
			value = 0
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					max = 20
				}					
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 1
					min = -40
				}					
			}			
							
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = genial
							}						
							has_attitude = {
								who = scope:actor
								attitude = loyal
							}						
						}
					}
					value = 50
				}
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}
							has_attitude = {
								who = scope:actor
								attitude = cooperative
							}							
						}
					}
					value = 25
				}				
				if = {
					limit = {
						OR = {					
							has_attitude = {
								who = scope:actor
								attitude = cautious
							}
							has_attitude = {
								who = scope:actor
								attitude = protective
							}	
						}
					}
					value = -50
				}					
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = domineering
							}	
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}	
							has_attitude = {
								who = scope:actor
								attitude = rebellious
							}							
						}
					}
					value = -1000
				}							
			}			

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"
				if = {
					limit = {
						"relations(scope:actor)" <= relations_threshold:hostile
					}
					value = -100
				}				
				if = {
					limit = {
						"relations(scope:actor)" > relations_threshold:hostile
						"relations(scope:actor)" <= relations_threshold:cold
					}
					value = -50
				}					
				if = {
					limit = {
						"relations(scope:actor)" > relations_threshold:cold
						"relations(scope:actor)" <= relations_threshold:poor
					}
					value = -25
				}				
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:cordial
						"relations(scope:actor)" < relations_threshold:amicable
					}
					value = 10
				}
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 25
				}
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_DEBT"
				
				if = {
					limit = {
						scaled_debt < 0.1
					}
					value = -100
				}
				if = {
					limit = {
						scaled_debt >= 0.1
						scaled_debt < 0.2
					}
					value = -50
				}
				if = {
					limit = {
						scaled_debt >= 0.2
						scaled_debt < 0.3
					}
					value = -25
				}	
				if = {
					limit = {
						scaled_debt >= 0.3
						scaled_debt < 0.4
					}
					value = -10
				}				
				if = {
					limit = {
						scaled_debt >= 0.5
						scaled_debt < 0.6
					}
					value = 10
				}
				if = {
					limit = {
						scaled_debt >= 0.6
						scaled_debt < 0.7
					}
					value = 25
				}
				if = {
					limit = {
						scaled_debt >= 0.7
						scaled_debt < 0.8
					}
					value = 40
				}		
				if = {
					limit = {
						scaled_debt >= 0.8
						scaled_debt < 0.9
					}
					value = 55
				}	
				if = {
					limit = {
						scaled_debt >= 0.9
						in_default = no
					}
					value = 70
				}						
				if = {
					limit = {
						in_default = yes
					}
					value = 100
				}					
			}
			
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}	
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RANK"
	
				if = {
					limit = { scope:actor = { country_rank > root.country_rank } }
					value = 10
				}
				
				if = {
					limit = { scope:actor = { country_rank < root.country_rank } }
					value = -20
				}				
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_PRINCIPLE_SACRED_CIVICS"

				if = {
					limit = {
						AND = {
							scope:actor.power_bloc ?= {
								OR = {
									has_principle = principle:principle_sacred_civics_1
									has_principle = principle:principle_sacred_civics_2
									has_principle = principle:principle_sacred_civics_3
								}
							}
							scope:actor.religion = root.religion
						}
					}
					add = 20
				}
			}
		}	
	}
}

redeem_obligation = {
	groups= {
		general
	}
	
	requires_approval = no
	
	potential = {
		NOT = { is_country_type = decentralized }
		scope:target_country = {
			NOT = { is_country_type = decentralized }
		}
		scope:target_country = {
			owes_obligation_to = root			
		}	
	}
	
	possible = {
		is_revolutionary = no
		scope:target_country = {
			is_revolutionary = no
		}
	}

	accept_effect = {
		change_relations = { country = scope:target_country value = 30 }
		scope:target_country = { set_owes_obligation_to = { country = root setting = no } }
	}
	
	ai = {
		evaluation_chance = {
			value = 0.25
		}	
	
		propose_score = {
			value = 10
		}	
	
		will_propose = { 
			always = no
		}
	}
}

﻿violate_sovereignty = {
	groups= {
		general
	}
	requires_approval = yes
	should_notify_third_parties = yes
	violates_sovereignty = yes
	can_use_obligations = yes
	
	selectable = {
		NOT = { is_country_type = decentralized }
	}
	
	potential = {
		is_at_war = yes

		scope:target_country = {
			NOT = { 
				is_country_type = decentralized 
				is_subject_of = ROOT
			}
		}
		NOT = {
			has_war_with = scope:target_country
			is_in_war_together = scope:target_country
		}
	}

	possible = {
		# this localization only makes sense if you are already at war
		trigger_if = {
			limit = {
				is_at_war = yes
			}
			custom_tooltip = {
				text = "violate_sovereignty_trigger_not"
				any_scope_war = {
					is_warleader = root
					violate_sovereignty_war_check = yes
				}
			}
		}
		
		scope:target_country.relations:root < relations_threshold:amicable

		is_revolutionary = no
		
		scope:target_country = {
			is_revolutionary = no
		}				
	}
	
	accept_effect = {
		create_incident = {
			value = 15
			country = scope:target_country
		}

		scope:target_country = {
			violate_sovereignty_join = {
				violator = root
				target = scope:target_country
				join_violator = yes
			}
		}		
	}

	decline_effect = {
		save_scope_as = initiator
		
		create_incident = {
			value = 10
			country = scope:target_country
		}

		scope:target_country = {
			violate_sovereignty_join = {
				violator = root
				target = scope:target_country
				join_violator = no
			}
		}

		# could potentially be several wars but only show one in situation for now
		random_scope_violate_sovereignty_wars = {
			save_scope_as = war
		}

		# send situation to all relevant countries asking them to help scope:target_country out
		every_scope_violate_sovereignty_interested_parties = {
			trigger_event = { id = diplomatic_events.1 days = 0 }
		}
	}
	
	ai = {
		evaluation_chance = {
			value = 0
			
			if = {
				limit = { 
					is_at_war = yes 
					any_scope_war = {
						is_warleader = root
					}				
				}
				add = 1
			}
		}	
	
		propose_score = {
			value = 100
		}	
	
		accept_score = {
			value = 0
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}	

			if = {
				limit = { 
					has_strategy = ai_strategy_armed_isolationism 
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ISOLATIONIST"
					add = -25
				}
			}						
			
			if = {
				limit = {
					"scope:actor.ai_army_comparison(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ARMY_STRENGTH"
					value = "scope:actor.ai_army_comparison(root)"
					multiply = 2
					max = 50
				}				
			}
			else = {
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ARMY_STRENGTH"
					value = -1000
				}			
			}	

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					max = 20
				}					
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 1
					min = -40
				}					
			}							
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = genial
							}
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}							
							has_attitude = {
								who = scope:actor
								attitude = loyal
							}	
							has_attitude = {
								who = scope:actor
								attitude = cooperative
							}							
						}
					}
					value = 15
				}			
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = cautious
						}
					}
					value = -25
				}					
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = domineering
							}	
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}	
							has_attitude = {
								who = scope:actor
								attitude = rebellious
							}
							has_attitude = {
								who = scope:actor
								attitude = protective
							}							
						}
					}
					value = -50
				}							
			}			

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"	
				if = {
					limit = {
						"relations(scope:actor)" < relations_threshold:cordial
					}
					value = -25
				}					
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:cordial
						"relations(scope:actor)" < relations_threshold:amicable
					}
					value = 10
				}					
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 25
				}	
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}				
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}	
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}					
			}					

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RANK"
	
				if = {
					limit = { scope:actor = { country_rank > root.country_rank } }
					value = 20
				}
				
				if = {
					limit = { scope:actor = { country_rank < root.country_rank } }
					value = -20
				}				
			}	

			if = {
				limit = {
					has_powerful_protectors = yes
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_POWERFUL_PROTECTORS_THEM"
					value = -50
				}	
			}				
		}
	}
}

﻿trade_states = {
	groups= {
		general
	}
	
	requires_approval = yes
	should_notify_third_parties = yes
	show_effect_in_tooltip = yes

	# Either country should have an available state. Trade State is used as a
	# catch all possibilities Diplomatic Action because Grant/Take State are currently
	# limited to Overlords/Subjects.
	state_selection = any_required

	first_state_list = first_country
	second_state_list = second_country
	can_use_obligations = yes
	
	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
		is_subject = no
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
			is_revolutionary = no
		}
	}
	
	possible = {
		is_diplomatic_play_committed_participant = no
		scope:target_country = { is_diplomatic_play_committed_participant = no }
		custom_tooltip = {
			text = DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT
			scope:target_country.relations:root > relations_threshold:poor
		}
		has_diplomatic_relevance = scope:target_country
		is_revolutionary = no
		in_default = no	
		
		# Must have a connection to the state received even after the trade happens
		trigger_if = {
			limit = {
				exists = scope:first_state
				exists = scope:second_state
			}
		
			custom_tooltip = {
				text = DIPLO_ACTION_TRADE_STATES_NOT_SAME_REGION
				NOT = {
					scope:first_state.state_region = scope:second_state.state_region
				}
			}
			
			custom_tooltip = {
				text = DIPLO_ACTION_TRADE_STATES_WOULD_BREAK_CONNECTION
				scope:actor = { 
					any_scope_state = {
						NOT = { this = scope:first_state }	
						OR = {
							any_neighbouring_state = { this = scope:second_state }
							AND = {
								is_coastal = yes
								scope:second_state = { is_coastal = yes }
							}
						}						
					}					
				}					
				scope:target_country = { 
					any_scope_state = {
						NOT = { this = scope:second_state }	
						OR = {
							any_neighbouring_state = { this = scope:first_state }
							AND = {
								is_coastal = yes
								scope:first_state = { is_coastal = yes }
							}
						}						
					}					
				}						
			}
		}
	}
	
	accept_effect = {
		if = {
			limit = { exists = scope:first_state }
			scope:first_state = { set_state_owner = scope:target_country }
		}
		if = {
			limit = { exists = scope:second_state }
			scope:second_state = { set_state_owner = root }
		}		
	}
	
	first_state_trigger = {
		owner = scope:country
		is_capital = no
		is_under_colonization = no
		OR = {
			scope:target_country = { is_adjacent_to_state = root }
			AND = {
				is_coastal = yes		
				scope:target_country = { has_port = yes }
			}
		}
	}
	
	second_state_trigger = {
		owner = scope:target_country
		is_capital = no
		is_under_colonization = no
		OR = {
			scope:country = { is_adjacent_to_state = root }
			AND = {
				is_coastal = yes		
				scope:country = { has_port = yes }
			}
		}		
	}	
	
	ai = {
		check_acceptance_for_will_propose = yes
		
		evaluation_chance = {
			value = 0.1
		}			
	
		propose_score = {
			value = 10
		}
		
		# Selection triggers exist only to pre-filter which state combinations the AI looks at
		# This is done for performance reasons - the more open ended these triggers are, the more it will impact performance
		will_select_as_first_state = {
			is_split_state = yes
			is_under_colonization = no
			is_incorporated = no
			NOT = { is_homeland_of_country_cultures = owner }
			state_is_in_africa = yes
			NOT = { state_region = s:STATE_INDIAN_OCEAN_TERRITORY } # Special exception to african state trading
		}
		
		will_select_as_second_state = {
			is_split_state = yes
			is_under_colonization = no
			is_incorporated = no
			NOT = { is_homeland_of_country_cultures = owner }
			state_is_in_africa = yes
			NOT = { state_region = s:STATE_INDIAN_OCEAN_TERRITORY } # Special exception to african state trading
		}		
		
		will_propose_with_states = {
			exists = scope:first_state
			exists = scope:second_state	
			NOT = { scope:first_state.state_region = scope:second_state.state_region }
			scope:first_state = { 
				is_split_state = yes	
				state_region = { 
					any_scope_state = { owner = scope:target_country }
				}
			}	
			scope:second_state = { 
				is_split_state = yes
				state_region = { 
					any_scope_state = { owner = root }
				}
			}			
		}	
		
		accept_score = {
			value = 0	
			
			if = {
				limit = {
					NOR = {
						exists = scope:first_state
						exists = scope:second_state
					}
				}
				
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_STATES_NOT_SET"
					value = -1000
				}				
			}
			else = {
				if = {
					limit = {
						exists = scope:second_state
					}
					subtract = {
						value = scope:second_state.ai_state_value:root	
						desc = "DIPLOMATIC_ACCEPTANCE_TRADE_STATE_SECOND_STATE"
						min = 10
					}
				}	
				else_if = {		
					add = {
						value = 100	
						desc = "DIPLOMATIC_ACCEPTANCE_GIVING_AWAY_LAND"						
					}			
				}			

				if = {
					limit = {
						exists = scope:first_state				
					}
					if = {
						limit = { scope:first_state.ai_state_value:root > 0 }
						add = {
							value = scope:first_state.ai_state_value:root	
							desc = "DIPLOMATIC_ACCEPTANCE_TRADE_STATE_FIRST_STATE"						
						}				
					}
					else = {
						add = {
							value = -1000	
							desc = "DIPLOMATIC_ACCEPTANCE_DOES_NOT_WANT_FIRST_STATE"						
						}					
					}
				}

				if = {
					limit = {
						exists = scope:first_state
						exists = scope:second_state						
						scope:first_state = { 
							is_split_state = yes
							state_region = { 
								any_scope_state = { owner = root }
							}
						}	
						scope:second_state = { 
							is_split_state = yes
							state_region = { 
								any_scope_state = { owner = scope:actor }
							}
						}						
					}

					add = {
						value = 25
						desc = "DIPLOMATIC_ACCEPTANCE_TRADE_STATE_SPLIT_STATE_EXCHANGE"						
					}						
				}
			}	
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_PRINCIPLE_SACRED_CIVICS"

				if = {
					limit = {
						AND = {
							scope:actor.power_bloc ?= {
								OR = {
									has_principle = principle:principle_sacred_civics_1
									has_principle = principle:principle_sacred_civics_2
									has_principle = principle:principle_sacred_civics_3
								}
							}
							scope:actor.religion = root.religion
						}
					}
					add = 10
				}
			}			
		}
		
		use_obligation_chance = {
			value = 10
			
			if = {
				limit = {
					scope:target_country = { country_rank > root.country_rank }
				}				
				add = 20
			}				
		}
		
		owe_obligation_chance = {
			value = 0	

			if = {
				limit = {
					scope:target_country = { country_rank > root.country_rank }
				}				
				add = 10
			}				
		}		
	}
}
﻿guarantee_independence = {
	groups= {
		general
	}
	requires_approval = no
	should_notify_third_parties = no

	unlocking_technologies = {
		international_relations
	}
	
	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}
	
	potential = {
		is_subject = no
		scope:target_country = {
			NOT = { is_country_type = decentralized }
			is_subject = no
		}
	}

	possible = {}
	
	pact = {	
		cost = 100
	
		is_two_sided_pact = no
		forced_duration = 12
		show_in_outliner = yes
		can_be_used_in_sway_offers = yes
		is_guarantee_independence = yes
		sway_maneuvers_cost = 10
		
		second_modifier = {
			country_pact_leverage_generation_add = 200
		}

		relations_progress_per_day = 1 # At 100, +1 relations
		relations_improvement_max = 80
		
		requirement_to_maintain = {
			trigger = {
				has_diplomatic_relevance = scope:target_country
			}
		}
		
		requirement_to_maintain = {
			trigger = {
				is_subject = no
				scope:target_country = { is_subject = no }
			}
		}
		
	 	requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT
					scope:target_country.relations:root > relations_threshold:poor
				}		
			}
			
			show_about_to_break_warning = {
				scope:target_country.relations:root <= -17 # this is: poor + 3
				scope:target_country.relations_change_rate:root < 0
			}					
		}	

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NOT_DECENTRALIZED"
					NOT = { is_country_type = decentralized }
					scope:target_country = {
						NOT = { is_country_type = decentralized }
					}				
				}
			}
		}				
	
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_AT_PEACE"
					NOT = { has_war_with = scope:target_country }
				}			
			}
		}		

		requirement_to_maintain = {
			trigger = {
				country_rank > scope:target_country.country_rank
			}
		}

		requirement_to_maintain = {
			trigger = {
				in_default = no
			}
		}	

		manual_break_effect = {
			create_unidirectional_truce = { country = scope:target_country months = 12 }
		}
	}
	
	ai = {
		max_influence_spending_fraction = 0.20
		
		evaluation_chance = {
			value = 0.0
			
			if = {
				limit = { country_rank >= rank_value:major_power }
				add = {
					value = country_rank
					multiply = 0.1
				}				
			}			
		}		
		
		# This is only used for determining the value of a bankroll in sways, so it follows different logic from normal action acceptance
		# The format here is as if scope:actor was asking if root wants a guarantee
		accept_score = {
			value = 0
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = 5
			}				
			
			if = {
				limit = {
					"ai_ideological_opinion(scope:actor)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "ai_ideological_opinion(scope:actor)"
					multiply = 0.33
					max = 10
				}					
			}
			else_if = {
				limit = {
					"ai_ideological_opinion(scope:actor)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "ai_ideological_opinion(scope:actor)"
					multiply = 0.33
					min = -10
				}					
			}			
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ARMY_STRENGTH"
				value = "ai_army_comparison(scope:actor)"
				divide = 2
				min = -25
				max = 25
			}
		}		
	
		# This is only used for determining the value of a guarantee in sways, so it follows different logic from normal action acceptance
		# The format here is as if scope:actor was asking for a guarantee from root
		junior_accept_score = {
			value = 0

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -10
			}			
			
			if = {
				limit = {
					"ai_ideological_opinion(scope:actor)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "ai_ideological_opinion(scope:actor)"
					multiply = 0.5
					max = 20
				}					
			}
			else_if = {
				limit = {
					"ai_ideological_opinion(scope:actor)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "ai_ideological_opinion(scope:actor)"
					multiply = 0.5
					min = -20
				}					
			}					

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ARMY_STRENGTH"
				value = "ai_army_comparison(scope:actor)"
				divide = 2
				min = -25
				max = 25
			}							
		}	
	
		propose_score = {
			value = 0
			
			if = {
				limit = {
					scope:target_country.relations:root >= relations_threshold:friendly					
				}
				add = 15
			}
			else_if = {
				limit = {
					scope:target_country.relations:root >= relations_threshold:amicable					
				}
				add = 10
			}	
			else_if = {
				limit = {
					scope:target_country.relations:root >= relations_threshold:cordial				
				}
				add = 5
			}	
			
			if = {
				limit = { country_rank < rank_value:great_power }
				add = -5
			}

			if = {
				limit = {
					scope:target_country = { is_country_type = unrecognized }				
				}
				add = -5
			}
			
			if = {
				limit = {
					NOT = { has_strategic_adjacency = scope:target_country }			
				}
				add = -5
			}			
		}
	
		will_propose = { 
			is_at_war = no
			country_rank >= rank_value:major_power		
			has_attitude = {
				who = scope:target_country
				attitude = protective
			}
			can_reach_target_country = yes
		}
		
		will_break = { 
			OR = {
				NOT = {
					has_attitude = {
						who = scope:target_country
						attitude = protective
					}
					country_rank < rank_value:major_power		
					can_reach_target_country = no
				}			
			}
		}			
	}
}


﻿alliance = {
	groups= {
		general
	}
	requires_approval = yes
	can_use_obligations = yes

	unlocking_technologies = {
		international_relations
	}
	
	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
			is_revolutionary = no
		}
	}
	
	possible = {
		OR = {
			has_technology_researched = multilateral_alliances
			num_alliances < 1
		}

		scope:target_country = {
			OR = {
				has_technology_researched = multilateral_alliances
				num_alliances < 1
			}
			custom_tooltip = {
				text = "alliance_support_independence_subject"
				NOT = {
					any_subject_or_below = {
						ROOT = {
							has_diplomatic_pact = {
								who = prev
								type = support_independence
							}
						}
					}
				}
			}
		}

		custom_tooltip = {
			text = "alliance_support_independence_subject"
			NOT = {
				any_subject_or_below = {
					has_diplomatic_pact = {
						who = scope:target_country
						type = support_independence
					}
				}
			}
		}
	}
	
	accept_effect = {
		if = {
			limit = {
				scope:target_country = {
					has_diplomatic_pact = {
						who = root
						type = guarantee_independence
					}									
				}			
			}
			
			scope:target_country = {
				remove_diplomatic_pact = {
					country = root
					type = guarantee_independence
				}			
			}
		}	
		else_if = {
			limit = {
				has_diplomatic_pact = {
					who = scope:target_country
					type = guarantee_independence
				}		
			}
			
			remove_diplomatic_pact = {
				country = scope:target_country
				type = guarantee_independence
			}
		}		
		
		if = {
			limit = {
				scope:target_country = {
					has_diplomatic_pact = {
						who = root
						type = defensive_pact
					}									
				}			
			}
			
			remove_diplomatic_pact = {
				country = scope:target_country
				type = defensive_pact
			}

			add_lobby_appeasement_from_diplomacy_bidirectional = { 
				FIRST = root
				SECOND = scope:target_country 
				PRO_AMOUNT = 1
				ANTI_AMOUNT = -1
				FACTOR = appeasement_alliance_formed
			}				
		}	
		else = {
			add_lobby_appeasement_from_diplomacy_bidirectional = { 
				FIRST = root
				SECOND = scope:target_country 
				PRO_AMOUNT = 4
				ANTI_AMOUNT = -4
				FACTOR = appeasement_alliance_formed
			}
		}
	}

	pact = {
		cost = 200
	
		is_alliance = yes
		
		relations_progress_per_day = 1.5 # At 100, +1 relations
		relations_improvement_max = 80		

		first_modifier = {
			country_pact_leverage_generation_add = 300
		}

		second_modifier = {
			country_pact_leverage_generation_add = 300
		}
		
		requirement_to_maintain = {
			trigger = {
				has_diplomatic_relevance = scope:target_country
			}
		}
			
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NOT_DECENTRALIZED"
					NOT = { is_country_type = decentralized }
					scope:target_country = {
						NOT = { is_country_type = decentralized }
					}				
				}
			}
		}		
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_DIPLOMATIC_AUTONOMY"
					aggressive_diplomatic_plays_permitted = yes
					scope:target_country = { aggressive_diplomatic_plays_permitted = yes }					
				}
			}
		}		

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NO_SUBJECT_RELATION"
					NOT = {
						is_subject_of = scope:target_country
						scope:target_country = { is_subject_of = root }
					}				
				}
			}
		}			

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = DIPLO_ACTION_RELATIONS_CORDIAL_OR_GREATER
					scope:target_country.relations:root >= relations_threshold:cordial
				}	
			}
			
			show_about_to_break_warning = {
				scope:target_country.relations:root < 23 # this is: cordial + 3
				scope:target_country.relations_change_rate:root < 0
			}		
		}	
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_AT_PEACE"
					NOT = { has_war_with = scope:target_country }
				}			
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NO_SUPPORT_FOR_INDEPENDENCE"
					NOT = {
						any_subject_or_below = {
							ROOT = {
								has_diplomatic_pact = {
									who = prev
									type = support_independence
								}
							}
						}
					}
				}
			}
		}

		manual_break_effect = {
			change_relations = { country = scope:target_country value = -30 }
			create_bidirectional_truce = { country = scope:target_country months = 12 }
			add_lobby_appeasement_from_diplomacy_bidirectional = { 
				FIRST = root
				SECOND = scope:target_country 
				PRO_AMOUNT = -4
				ANTI_AMOUNT = 4
				FACTOR = appeasement_alliance_broken
			}		
		}
		
		auto_break_effect = {
			create_bidirectional_truce = { country = scope:target_country months = 12 }
			if = {
				limit = { 
					NOR = { 
						is_subject_of = scope:target_country 
						scope:target_country = { is_subject_of = root }
					}
				}
				
				add_lobby_appeasement_from_diplomacy_bidirectional = { 
					FIRST = root
					SECOND = scope:target_country 
					PRO_AMOUNT = -4
					ANTI_AMOUNT = 4
					FACTOR = appeasement_alliance_broken
				}				
			}									
		}
	}

	ai = {
		check_acceptance_for_will_break = yes
		check_acceptance_for_will_propose = yes
		
		evaluation_chance = {
			value = 0.1
			
			add = {
				value = country_rank
				multiply = 0.05
			}			
		}			
	
		accept_score = {
			value = 0
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}

			if = {
				limit = {
					has_strategic_adjacency = scope:actor
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_NEIGHBORS"
					value = 10
				}	
			}			

			if = {
				limit = { 
					has_strategy = ai_strategy_armed_isolationism 
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ISOLATIONIST"
					add = -50
				}
			}			
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ARMY_STRENGTH"
				value = "scope:actor.ai_army_comparison(root)"
				min = -50
				max = 50
			}	

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					max = 20
				}					
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					min = -20
				}					
			}						
							
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = genial
							}
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}							
							has_attitude = {
								who = scope:actor
								attitude = loyal
							}
							has_attitude = {
								who = scope:actor
								attitude = protective
							}							
						}
					}
					value = 50
				}
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = cooperative
						}
					}
					value = 25
				}				
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = cautious
						}
					}
					value = -50
				}					
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = domineering
							}	
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}	
							has_attitude = {
								who = scope:actor
								attitude = rebellious
							}							
						}
					}
					value = -1000
				}							
			}			

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"			
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 25
				}	
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}				
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}	
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}					
			}					

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RANK"
	
				if = {
					limit = { scope:actor = { country_rank > root.country_rank } }
					value = 20
				}
				
				if = {
					limit = { scope:actor = { country_rank < root.country_rank } }
					value = -20
				}				
			}	

			if = {
				limit = {
					"num_alliances_and_defensive_pacts_with_rivals(scope:actor)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ALLIED_TO_RIVALS"
					value = "num_alliances_and_defensive_pacts_with_rivals(scope:actor)"
					multiply = -25
				}	
			}	

			if = {
				limit = {
					"num_alliances_and_defensive_pacts_with_allies(scope:actor)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ALLIED_TO_ALLIES"
					value = "num_alliances_and_defensive_pacts_with_allies(scope:actor)"
					multiply = 10
				}	
			}

			if = {
				limit = {
					"num_shared_rivals(scope:actor)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_SHARED_RIVALS"
					value = "num_shared_rivals(scope:actor)"
					multiply = 10
					max = 30
				}	
			}				

			if = {
				limit = {
					NOT = {
						has_diplomatic_pact = {
							who = root
							type = alliance
						}					
					}	
					"num_alliances" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_NUM_ALLIES"
					value = "num_alliances"
					multiply = -10
				}					
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_PRO_LOBBY_CLOUT"					
				value = "scope:actor.lobby_foreign_pro_clout(scope:target_country)"
				multiply = 50
				max = 25
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_ANTI_LOBBY_CLOUT"					
				value = "scope:actor.lobby_foreign_anti_clout(scope:target_country)"
				multiply = -50
				min = -25
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_TARGET_PRO_LOBBY_CLOUT"					
				value = "scope:target_country.lobby_foreign_pro_clout(scope:actor)"
				multiply = 100
				max = 25
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_TARGET_ANTI_LOBBY_CLOUT"					
				value = "scope:target_country.lobby_foreign_anti_clout(scope:actor)"
				multiply = -100
				min = -25
			}	
			
			if = {
				limit = {
					scope:actor = {
						has_variable = pro_lobby_proposal_alliance
						var:pro_lobby_opportunity_target ?= scope:target_country
					}
				}
				add = {
					desc = "LOBBY_OPPORTUNITY_BONUS"
					value = 100
				}
			}

			if = {
				limit = {
					scope:actor = {
						has_variable = anti_lobby_proposal_alliance
						var:anti_lobby_opportunity_target ?= scope:target_country
					}
				}
				add = {
					desc = "LOBBY_OPPORTUNITY_BONUS"
					value = 50
				}
			}
			
			if = {
				limit = {
					exists = power_bloc
					exists = scope:actor.power_bloc			
				}
				if = {
					limit = {
						power_bloc = scope:actor.power_bloc
					}
					add = {
						desc = "DIPLOMATIC_ACCEPTANCE_SAME_POWER_BLOC"
						value = 15
					}					
				}
				else = {
					add = {
						desc = "DIPLOMATIC_ACCEPTANCE_DIFFERENT_POWER_BLOC"
						value = -25
					}					
				}				
			}			

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_PRINCIPLE_SACRED_CIVICS"

				if = {
					limit = {
						AND = {
							scope:actor.power_bloc ?= {
								OR = {
									has_principle = principle:principle_sacred_civics_1
									has_principle = principle:principle_sacred_civics_2
									has_principle = principle:principle_sacred_civics_3
								}
							}
							scope:actor.religion = root.religion
						}
					}
					add = 10
				}
			}
		}

		propose_score = {
			value = 10

			if = {
				limit = {
					country_has_primary_culture = cu:british
					asian_ally_against_russia_trigger = yes
				}
				add = {
					value = 50
				}
			}
			
			add = {
				value = scope:target_country.country_rank
				multiply = 3
			}			
		}

		propose_break_score = {
			value = 10
		}
		
		use_obligation_chance = {
			value = 0
	
			add = {
				if = {
					limit = {
						scope:target_country = { country_rank = root.country_rank }
					}					
					value = 25
				}			
			}
	
			add = {
				if = {
					limit = {
						scope:target_country = { country_rank > root.country_rank }
					}					
					value = 50
				}			
			}

			if = {
				limit = {
					country_has_primary_culture = cu:british
					asian_ally_against_russia_trigger = yes
				}
				add = {
					value = 50
				}
			}
		}
		
		owe_obligation_chance = {
			value = 0
	
			add = {
				if = {
					limit = {
						scope:target_country = { country_rank = root.country_rank }
					}				
					value = 5
				}	
			}			
	
			add = {
				if = {
					limit = {
						scope:target_country = { country_rank > root.country_rank }
					}				
					value = 10
				}	
			}	

			if = {
				limit = {
					country_has_primary_culture = cu:british
					asian_ally_against_russia_trigger = yes
				}
				add = {
					value = 25
				}
			}		
		}	
	}
}
﻿defensive_pact = {
	groups= {
		general
	}
	requires_approval = yes
	can_use_obligations = yes

	unlocking_technologies = {
		international_relations
	}
	
	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
			is_revolutionary = no
		}
	}
	
	possible = {
		scope:target_country = {
			NOT = {
				has_diplomatic_pact = {
					who = root
					type = alliance
				}					
			}					
		}					
	}
	
	accept_effect = {
		if = {
			limit = {
				scope:target_country = {
					has_diplomatic_pact = {
						who = root
						type = guarantee_independence
					}									
				}			
			}
			
			scope:target_country = {
				remove_diplomatic_pact = {
					country = root
					type = guarantee_independence
				}			
			}
		}	
		else_if = {
			limit = {
				has_diplomatic_pact = {
					who = scope:target_country
					type = guarantee_independence
				}		
			}
			
			remove_diplomatic_pact = {
				country = scope:target_country
				type = guarantee_independence
			}
		}	
		
		add_lobby_appeasement_from_diplomacy_bidirectional = { 
			FIRST = root
			SECOND = scope:target_country 
			PRO_AMOUNT = 3
			ANTI_AMOUNT = -3
			FACTOR = appeasement_defensive_pact_formed
		}	
	}

	pact = {
		cost = 150
	
		is_defensive_pact = yes
		
		relations_progress_per_day = 1 # At 100, +1 relations
		relations_improvement_max = 80		
	
		first_modifier = {
			country_pact_leverage_generation_add = 250
		}

		second_modifier = {
			country_pact_leverage_generation_add = 250
		}

 		requirement_to_maintain = {
			trigger = {
				has_diplomatic_relevance = scope:target_country
			}
		}
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NOT_DECENTRALIZED"
					NOT = { is_country_type = decentralized }
					scope:target_country = {
						NOT = { is_country_type = decentralized }
					}				
				}
			}
		}		
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_DIPLOMATIC_AUTONOMY"
					aggressive_diplomatic_plays_permitted = yes
					scope:target_country = { aggressive_diplomatic_plays_permitted = yes }					
				}
			}
		}		

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NO_SUBJECT_RELATION"
					NOT = {
						is_subject_of = scope:target_country
						scope:target_country = { is_subject_of = root }
					}				
				}
			}
		}		

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = DIPLO_ACTION_RELATIONS_CORDIAL_OR_GREATER
					scope:target_country.relations:root >= relations_threshold:cordial
				}	
			}
			
			show_about_to_break_warning = {
				scope:target_country.relations:root < 23 # this is: cordial + 3
				scope:target_country.relations_change_rate:root < 0
			}		
		}	
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_AT_PEACE"
					NOT = { has_war_with = scope:target_country }
				}			
			}
		}	

		manual_break_effect = {
			change_relations = { country = scope:target_country value = -30 }
			create_bidirectional_truce = { country = scope:target_country months = 12 }
			add_lobby_appeasement_from_diplomacy_bidirectional = { 
				FIRST = root
				SECOND = scope:target_country 
				PRO_AMOUNT = -3
				ANTI_AMOUNT = 3
				FACTOR = appeasement_defensive_pact_broken
			}			
		}
		
		auto_break_effect = {
			create_bidirectional_truce = { country = scope:target_country months = 12 }	
			if = {
				limit = { 
					NOR = { 
						is_subject_of = scope:target_country 
						scope:target_country = { is_subject_of = root }
					}
				}
				
				add_lobby_appeasement_from_diplomacy_bidirectional = { 
					FIRST = root
					SECOND = scope:target_country 
					PRO_AMOUNT = -3
					ANTI_AMOUNT = 3
					FACTOR = appeasement_defensive_pact_broken
				}				
			}				
		}		
	}

	ai = {
		check_acceptance_for_will_break = yes
		check_acceptance_for_will_propose = yes
		
		evaluation_chance = {
			value = 0.1
			
			add = {
				value = country_rank
				multiply = 0.05
			}			
		}		
	
		accept_score = {
			value = 0
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}
			
			if = {
				limit = {
					has_strategic_adjacency = scope:actor
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_NEIGHBORS"
					value = 10
				}	
			}			

			if = {
				limit = { 
					has_strategy = ai_strategy_armed_isolationism 
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ISOLATIONIST"
					add = -25
				}
			}			
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ARMY_STRENGTH"
				value = "scope:actor.ai_army_comparison(root)"
				add = 0.5
				min = -25
				max = 50
			}	

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					max = 20
				}					
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					min = -20
				}					
			}				
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"			
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = protective
						}	
					}
					value = 75
				}
				else_if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = genial
							}
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}							
							has_attitude = {
								who = scope:actor
								attitude = loyal
							}						
						}
					}
					value = 50
				}
				else_if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = cooperative
						}
					}
					value = 25
				}				
				else_if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = cautious
						}
					}
					value = -50
				}					
				else_if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = domineering
							}	
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}	
							has_attitude = {
								who = scope:actor
								attitude = rebellious
							}							
						}
					}
					value = -1000
				}							
			}			

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"			
				if = {
					limit = {
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 0
				}
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 25
				}	
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}				
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}	
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}					
			}					

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RANK"
	
				if = {
					limit = { scope:actor = { country_rank > root.country_rank } }
					value = 20
				}
				
				if = {
					limit = { scope:actor = { country_rank < root.country_rank } }
					value = -10
				}				
			}	

			if = {
				limit = {
					"num_alliances_and_defensive_pacts_with_rivals(scope:actor)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ALLIED_TO_RIVALS"
					value = "num_alliances_and_defensive_pacts_with_rivals(scope:actor)"
					multiply = -15
				}	
			}	

			if = {
				limit = {
					"num_alliances_and_defensive_pacts_with_allies(scope:actor)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ALLIED_TO_ALLIES"
					value = "num_alliances_and_defensive_pacts_with_allies(scope:actor)"
					multiply = 10
				}	
			}

			if = {
				limit = {
					"num_shared_rivals(scope:actor)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_SHARED_RIVALS"
					value = "num_shared_rivals(scope:actor)"
					multiply = 10
					max = 30
				}	
			}				

			if = {
				limit = {
					NOT = {
						has_diplomatic_pact = {
							who = root
							type = defensive_pact
						}					
					}	
					"num_defensive_pacts" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_NUM_DEFENSIVE_PACTS"
					value = "num_defensive_pacts"
					multiply = -5
				}					
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_PRO_LOBBY_CLOUT"					
				value = "scope:actor.lobby_foreign_pro_clout(scope:target_country)"
				multiply = 50
				max = 25
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_ANTI_LOBBY_CLOUT"					
				value = "scope:actor.lobby_foreign_anti_clout(scope:target_country)"
				multiply = -50
				min = -25
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_TARGET_PRO_LOBBY_CLOUT"					
				value = "scope:target_country.lobby_foreign_pro_clout(scope:actor)"
				multiply = 100
				max = 25
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_TARGET_ANTI_LOBBY_CLOUT"					
				value = "scope:target_country.lobby_foreign_anti_clout(scope:actor)"
				multiply = -100
				min = -25
			}	

			if = {
				limit = {
					scope:actor = {
						has_variable = pro_lobby_proposal_defensive_pact
						var:pro_lobby_opportunity_target ?= scope:target_country
					}
				}
				add = {
					desc = "LOBBY_OPPORTUNITY_BONUS"
					value = 100
				}	
			}
			
			if = {
				limit = {
					scope:actor = {
						has_variable = anti_lobby_proposal_defensive_pact
						var:anti_lobby_opportunity_target ?= scope:target_country
					}
				}
				add = {
					desc = "LOBBY_OPPORTUNITY_BONUS"
					value = 50
				}	
			}
			
			if = {
				limit = {
					exists = power_bloc
					exists = scope:actor.power_bloc			
				}
				if = {
					limit = {
						power_bloc = scope:actor.power_bloc
					}
					add = {
						desc = "DIPLOMATIC_ACCEPTANCE_SAME_POWER_BLOC"
						value = 15
					}					
				}
				else = {
					add = {
						desc = "DIPLOMATIC_ACCEPTANCE_DIFFERENT_POWER_BLOC"
						value = -25
					}					
				}				
			}			
			

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_PRINCIPLE_SACRED_CIVICS"

				if = {
					limit = {
						AND = {
							scope:actor.power_bloc ?= {
								OR = {
									has_principle = principle:principle_sacred_civics_1
									has_principle = principle:principle_sacred_civics_2
									has_principle = principle:principle_sacred_civics_3
								}
							}
							scope:actor.religion = root.religion
						}
					}
					add = 20
				}
			}	
		}

		propose_score = {
			value = 10
			
			if = {
				limit = {
					country_has_primary_culture = cu:british
					asian_ally_against_russia_trigger = yes
				}
				add = {
					value = 50
				}
			}
			
			add = {
				value = scope:target_country.country_rank
				multiply = 3
			}			
		}

		propose_break_score = {
			value = 10
		}
		
		use_obligation_chance = {
			value = 0
	
			add = {
				if = {
					limit = {
						scope:target_country = { country_rank = root.country_rank }
					}					
					value = 25
				}			
			}
	
			add = {
				if = {
					limit = {
						scope:target_country = { country_rank > root.country_rank }
					}					
					value = 50
				}			
			}

			if = {
				limit = {
					country_has_primary_culture = cu:british
					asian_ally_against_russia_trigger = yes
				}
				add = {
					value = 50
				}
			}
		}
		
		owe_obligation_chance = {
			value = 0
	
			add = {
				if = {
					limit = {
						scope:target_country = { country_rank = root.country_rank }
					}				
					value = 5
				}	
			}			
	
			add = {
				if = {
					limit = {
						scope:target_country = { country_rank > root.country_rank }
					}				
					value = 10
				}	
			}	

			if = {
				limit = {
					country_has_primary_culture = cu:british
					asian_ally_against_russia_trigger = yes
				}
				add = {
					value = 25
				}
			}		
		}	
	}
}
﻿rivalry = {
	groups= {
		general
	}
	requires_approval = no
	should_notify_third_parties = yes

	unlocking_technologies = {
		international_relations
	}
	
	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
			is_revolutionary = no
		}
	}
	
	possible = {
		# Might have these despite low relations due to a forced pact
		NOT = { has_diplomatic_pact = { who = scope:target_country type = alliance } }	
		NOT = { has_diplomatic_pact = { who = scope:target_country type = defensive_pact } }	
	}
	
	accept_effect = {
		add_lobby_appeasement_from_diplomacy_unidirectional = { 
			FIRST = root
			SECOND = scope:target_country 
			PRO_AMOUNT = -4
			ANTI_AMOUNT = 4
			FACTOR = appeasement_rivalry_declared
		}	
		hidden_effect = {
			scope:target_country = {
				create_diplomatic_catalyst = {
					type = catalyst_rivalry_declared
					target = root
				}		
			}
		}
	}
	
	pact = {
		is_hostile = yes
		is_rivalry = yes		
		is_two_sided_pact = no
		forced_duration = 12
		
		relations_progress_per_day = -1 # At -100, -1 relations
		relations_improvement_min = -20
		
		second_modifier = {
			country_pact_leverage_generation_mult = -0.9
		}

	 	requirement_to_maintain = {
			trigger = {
				has_diplomatic_relevance = scope:target_country
			}
		}
		
	 	requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = DIPLO_ACTION_RELATIONS_CORDIAL_OR_GREATER_NOT
					scope:target_country.relations:root < relations_threshold:cordial
				}		
			}
			
			show_about_to_break_warning = {
				scope:target_country.relations:root >= 17 # this is: cordial - 3
				scope:target_country.relations_change_rate:root > 0
			}					
		}
	
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NOT_DECENTRALIZED"
					NOT = { is_country_type = decentralized }
					scope:target_country = {
						NOT = { is_country_type = decentralized }
					}				
				}
			}
		}		
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_DIPLOMATIC_AUTONOMY"
					aggressive_diplomatic_plays_permitted = yes
					scope:target_country = { aggressive_diplomatic_plays_permitted = yes }					
				}
			}
		}		

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NO_SUBJECT_RELATION"
					NOT = {
						is_subject_of = scope:target_country
						scope:target_country = { is_subject_of = root }
					}
				}
			}
		}
		
	 	requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_VALID_RIVALS"
					countries_are_valid_rivals = yes
				}					
			}
		}
		
		manual_break_effect = {
			add_lobby_appeasement_from_diplomacy_unidirectional = { 
				FIRST = root
				SECOND = scope:target_country 
				PRO_AMOUNT = 4
				ANTI_AMOUNT = -4
				FACTOR = appeasement_rivalry_ended
			}		
		}
		
		auto_break_effect = {
			every_political_lobby = {
				limit = {
					is_political_lobby_type = lobby_pro_country
					target = scope:target_country
				}
				change_appeasement = {
					amount = 4
					factor = appeasement_rivalry_ended
				}
			}			
		
			if = {
				limit = { country_rank > scope:target_country.country_rank }				
				every_political_lobby = {
					limit = {
						is_political_lobby_type = lobby_anti_country
						target = scope:target_country
					}
					
					change_appeasement = {
						amount = 2
						factor = appeasement_rival_surpassed
					}
				}			
			}
			else = {
				every_political_lobby = {
					limit = {
						is_political_lobby_type = lobby_anti_country
						target = scope:target_country
					}
					
					change_appeasement = {
						amount = -4
						factor = appeasement_rivalry_ended
					}
				}				
			}
		}	
	}
	
	ai = {
		check_acceptance_for_will_break = no
		
		evaluation_chance = {
			value = 0.1
			
			add = {
				value = country_rank
				multiply = 0.05
			}			
		}		
	
		propose_score = {
			value = 10
		}
	
		will_propose = { 
			OR = {
				AND = {
					country_rank > rank_value:insignificant_power
					num_rivals < 2
				}
				AND = {
					country_rank > rank_value:minor_power
					num_rivals < 3
				}				
				num_rivals < 1
			}
			OR = {
				AND = {
					army_size >= 10
					has_attitude = {
						who = scope:target_country
						attitude = antagonistic
					}				
					OR = {
						AND = {
							country_rank >= scope:target_country.country_rank
							has_strategic_adjacency = scope:target_country					
						}
						AND = {
							country_rank = scope:target_country.country_rank
							OR = {
								country_rank = rank_value:great_power
								capital.region = scope:target_country.capital.region
							}				
						}					
					}						
				}
				AND = {
					NOT = {
						has_attitude = {
							who = scope:target_country
							attitude = conciliatory
						}						
					}
					scope:target_country = {
						has_diplomatic_pact = {
							who = root
							type = rivalry
						}										
					}					
				}
			}			
		}
		
		will_break = { 
			NOR = {
				has_attitude = {
					who = scope:target_country
					attitude = antagonistic
				}
				has_attitude = {
					who = scope:target_country
					attitude = belligerent
				}				
			}
			NAND = {
				NOT = {
					has_attitude = {
						who = scope:target_country
						attitude = conciliatory
					}						
				}
				scope:target_country = {
					has_diplomatic_pact = {
						who = root
						type = rivalry
					}										
				}					
			}
		}			
	}
}


﻿embargo = {
	groups= {
		general
	}
	requires_approval = no
	should_notify_third_parties = yes

	unlocking_technologies = {
		international_trade
	}
	
	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
			is_revolutionary = no
		}
	}
	
	possible = {
		# Might have these despite low relations due to a forced pact
		NOT = { has_diplomatic_pact = { who = scope:target_country type = trade_agreement } }	

		# You cannot embargo somebody who has secured foreign investment rights in your country
		NOT = { has_diplomatic_pact = { who = scope:target_country type = foreign_investment_rights } }

		# You cannot embargo somebody with whom you have foreign investment agreements
		NOT = { has_diplomatic_pact = { who = scope:target_country type = foreign_investment_agreement } }

		# Might be disallowed by power bloc
		NOT = {
			custom_tooltip = {
				text = "power_bloc_disallow_embargo_bool"
				is_in_same_power_bloc = scope:target_country
				power_bloc ?= {
					modifier:power_bloc_disallow_embargo_bool = yes
				}
			}
		}
	}

	accept_effect = {
		add_lobby_appeasement_from_diplomacy_unidirectional = { 
			FIRST = root
			SECOND = scope:target_country 
			PRO_AMOUNT = -2
			ANTI_AMOUNT = 2
			FACTOR = appeasement_embargo_declared
		}			
	}
	
	pact = {
		cost = 100
		forced_duration = 12
	
		is_hostile = yes
		is_embargo = yes		
		is_two_sided_pact = no
		
		relations_progress_per_day = -1 # At -100, -1 relations

		first_modifier = {
			country_pact_leverage_generation_mult = -0.5
		}
		
		requirement_to_maintain = {
			trigger = {
				has_diplomatic_relevance = scope:target_country
			}
		}	
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NOT_DECENTRALIZED"
					NOT = { is_country_type = decentralized }
					scope:target_country = {
						NOT = { is_country_type = decentralized }
					}				
				}
			}
		}		
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_DIPLOMATIC_AUTONOMY"
					aggressive_diplomatic_plays_permitted = yes
					scope:target_country = { aggressive_diplomatic_plays_permitted = yes }					
				}
			}
		}		

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NO_SUBJECT_RELATION"
					NOT = {
						is_subject_of = scope:target_country
						scope:target_country = { is_subject_of = root }
					}				
				}
			}
		}
		
	 	requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT
					scope:target_country.relations:root <= relations_threshold:poor
				}		
			}
			
			show_about_to_break_warning = {
				scope:target_country.relations:root >= -23 # this is: poor - 3
				scope:target_country.relations_change_rate:root > 0
			}					
		}	

		requirement_to_maintain = {
			trigger = {
				NOT = { has_law = law_type:law_isolationism }
			}
		}	

		requirement_to_maintain = {
			trigger = {
				NOT = { scope:target_country = { has_law = law_type:law_isolationism } }
			}
		}	

		requirement_to_maintain = {
			trigger = {
				is_junior_in_customs_union = no
			}
		}	

		requirement_to_maintain = {
			trigger = {
				scope:target_country = { is_junior_in_customs_union = no }
			}
		}	

		requirement_to_maintain = {
			trigger = {
				NOT = { scope:target_country = { has_treaty_port_in_country = root } }
			}
		}

		requirement_to_maintain = {
			trigger = {
				NOT = { 
					scope:target_country = { 
						has_diplomatic_pact = {
							who = root
							type = foreign_investment_rights
						}
					} 
				}
			}
		}

		requirement_to_maintain = {
			trigger = {
				NOT = { 
					scope:target_country = { 
						has_diplomatic_pact = {
							who = root
							type = foreign_investment_agreement
						}
					} 
				}
			}
		}			
		
		manual_break_effect = {
			add_lobby_appeasement_from_diplomacy_unidirectional = { 
				FIRST = root
				SECOND = scope:target_country 
				PRO_AMOUNT = 2
				ANTI_AMOUNT = -2
				FACTOR = appeasement_embargo_ended
			}		
		}
		
		
		auto_break_effect = {
			add_lobby_appeasement_from_diplomacy_unidirectional = { 
				FIRST = root
				SECOND = scope:target_country 
				PRO_AMOUNT = 2
				ANTI_AMOUNT = -2
				FACTOR = appeasement_embargo_ended
			}			
		}
	}
	
	ai = {
		check_acceptance_for_will_break = no
		max_influence_spending_fraction = 0.2
		
		evaluation_chance = {
			value = 0.1
			
			add = {
				value = country_rank
				multiply = 0.05
			}			
		}	
	
		propose_score = {
			value = 10

			if = {
				limit = {
					AND = {
						has_radical_leftist_government = no			
						scope:target_country = {
							has_radical_leftist_government = yes
						}
					}
					
				}
				multiply = 2
			}
	
			if = {
				limit = {
					AND = {
						has_radical_leftist_economy = no			
						scope:target_country = {
							has_radical_leftist_economy = yes
						}
					}
					
				}
				multiply = 2
			}	
		}
	
		will_propose = { 
			"scope:target_country.num_mutual_trade_route_levels_with_country(root)" > 0
			NOT = {
				has_attitude = {
					who = scope:target_country
					attitude = conciliatory
				}				
			}
			OR = {
				scope:target_country.relations:root <= relations_threshold:hostile
				scope:target_country.infamy >= infamy_threshold:pariah
				scope:target_country = {
					has_diplomatic_pact = {
						who = root
						type = embargo
					}				
				}						
			}
		}
		
		will_break = { 
			OR = {
				has_attitude = {
					who = scope:target_country
					attitude = conciliatory
				}				
				NOR = {
					scope:target_country.relations:root <= relations_threshold:hostile	
					scope:target_country.infamy >= infamy_threshold:pariah
					scope:target_country = {
						has_diplomatic_pact = {
							who = root
							type = embargo
						}				
					}				
				}			
			}
		}			
	}
}


﻿trade_agreement = {
	groups= {
		general
	}
	requires_approval = yes
	can_use_obligations = yes
	
	unlocking_technologies = {
		international_trade
	}
	
	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
			is_revolutionary = no
		}
	}
	
	possible = {
		NOT = {
			is_in_customs_union_with = scope:target_country
		}
			is_market_reachable_for_trade = scope:target_country.market
	}
	
	accept_effect = {
		add_lobby_appeasement_from_diplomacy_bidirectional = { 
			FIRST = root
			SECOND = scope:target_country
			PRO_AMOUNT = 2
			ANTI_AMOUNT = -2
			FACTOR = appeasement_trade_agreement_formed
		}	
	}
	
	pact = {
		cost = 50
	
		first_modifier = {
			country_pact_leverage_generation_add = 100
		}

		second_modifier = {
			country_pact_leverage_generation_add = 100
		}

		is_trade_agreement = yes
		can_be_used_in_sway_offers = yes
		sway_maneuvers_cost = 10
		
		relations_progress_per_day = 1 # At 100, +1 relations
		relations_improvement_max = 80	
	
		requirement_to_maintain = {
			trigger = {
				has_diplomatic_relevance = scope:target_country
			}
		}	
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NOT_DECENTRALIZED"
					NOT = { is_country_type = decentralized }
					scope:target_country = {
						NOT = { is_country_type = decentralized }
					}				
				}
			}
		}		
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_DIPLOMATIC_AUTONOMY"
					aggressive_diplomatic_plays_permitted = yes
					scope:target_country = { aggressive_diplomatic_plays_permitted = yes }					
				}
			}
		}		

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NO_SUBJECT_RELATION"
					NOT = {
						is_subject_of = scope:target_country
						scope:target_country = { is_subject_of = root }
					}
				}
			}
		}	
		
	 	requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT
					scope:target_country.relations:root > relations_threshold:poor
				}		
			}
			
			show_about_to_break_warning = {
				scope:target_country.relations:root <= -17 # this is: poor + 3
				scope:target_country.relations_change_rate:root < 0
			}					
		}	

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_AT_PEACE"
					NOT = { has_war_with = scope:target_country }
				}			
			}
		}	
		
		requirement_to_maintain = {
			trigger = {
				NOT = { has_law = law_type:law_isolationism }
			}
		}	

		requirement_to_maintain = {
			trigger = {
				NOT = { scope:target_country = { has_law = law_type:law_isolationism } }
			}
		}	

		requirement_to_maintain = {
			trigger = {
				is_junior_in_customs_union = no
			}
		}	

		requirement_to_maintain = {
			trigger = {
				scope:target_country = { is_junior_in_customs_union = no }
			}
		}			

		manual_break_effect = {
			change_relations = { country = scope:target_country value = -10 }
			add_lobby_appeasement_from_diplomacy_bidirectional = { 
				FIRST = root
				SECOND = scope:target_country 
				PRO_AMOUNT = -2
				ANTI_AMOUNT = 2
				FACTOR = appeasement_trade_agreement_broken
			}			
		}
		
		auto_break_effect = {
			if = {
				limit = { 
					NOR = { 
						is_subject_of = scope:target_country 
						scope:target_country = { is_subject_of = root }
					}
				}
				
				add_lobby_appeasement_from_diplomacy_bidirectional = { 
					FIRST = root
					SECOND = scope:target_country 
					PRO_AMOUNT = -2
					ANTI_AMOUNT = 2
					FACTOR = appeasement_trade_agreement_broken
				}				
			}		
		}
	}

	ai = {
		check_acceptance_for_will_break = yes
		check_acceptance_for_will_propose = yes
		
		evaluation_chance = {
			value = 0.1
			
			add = {
				value = country_rank
				multiply = 0.05
			}			
		}	
	
		accept_score = {
			value = 0
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}			
			
			if = {
				limit = { 
					"scope:actor.num_mutual_trade_route_levels_with_country(root)" < 1
				}
				
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_NO_MUTUAL_TRADE_ROUTES"
					value = -1000
				}				
			}
			else = {
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_MUTUAL_TRADE_ROUTES"
					value = "scope:actor.num_mutual_trade_route_levels_with_country(root)"
					multiply = 2
					max = 75
				}				
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_GDP"
				value = "scope:actor.ai_gdp_comparison(root)"
				multiply = 2
				min = -10
				max = 10
			}	

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.25
					max = 10
				}					
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.25
					min = -10
				}					
			}							
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = genial
							}
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}							
							has_attitude = {
								who = scope:actor
								attitude = loyal
							}
							has_attitude = {
								who = scope:actor
								attitude = protective
							}							
						}
					}
					value = 50
				}
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = cooperative
						}
					}
					value = 25
				}				
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = cautious
						}
					}
					value = -50
				}					
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = domineering
							}	
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}	
							has_attitude = {
								who = scope:actor
								attitude = rebellious
							}							
						}
					}
					value = -1000
				}							
			}			

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"								
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:cordial
						"relations(scope:actor)" < relations_threshold:amicable
					}
					value = 10
				}				
				else_if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 25
				}
				else_if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}				
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}	
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}					
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INCOMPATIBLE_ECONOMIC_SYSTEMS"
				if = {
					limit = {
						OR = {
							AND = {
								scope:actor = { has_radical_leftist_economy = no }		
								scope:target_country = { has_radical_leftist_economy = yes }							
							}
							AND = {
								scope:actor = { has_radical_leftist_economy = yes }		
								scope:target_country = { has_radical_leftist_economy = no }							
							}							
						}	
					}
					value = -50
				}
			}	
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_PRO_LOBBY_CLOUT"					
				value = "scope:actor.lobby_foreign_pro_clout(scope:target_country)"
				multiply = 50
				max = 25
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_ANTI_LOBBY_CLOUT"					
				value = "scope:actor.lobby_foreign_anti_clout(scope:target_country)"
				multiply = -50
				min = -25
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_TARGET_PRO_LOBBY_CLOUT"					
				value = "scope:target_country.lobby_foreign_pro_clout(scope:actor)"
				multiply = 100
				max = 25
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_TARGET_ANTI_LOBBY_CLOUT"					
				value = "scope:target_country.lobby_foreign_anti_clout(scope:actor)"
				multiply = -100
				min = -25
			}	

			if = {
				limit = {
					scope:actor = {
						has_variable = pro_lobby_proposal_trade_agreement
						var:pro_lobby_opportunity_target ?= scope:target_country
					}
				}
				add = {
					desc = "LOBBY_OPPORTUNITY_BONUS"
					value = 100
				}	
			}	
			
			if = {
				limit = {
					scope:actor = {
						has_variable = anti_lobby_proposal_trade_agreement
						var:anti_lobby_opportunity_target ?= scope:target_country
					}
				}
				add = {
					desc = "LOBBY_OPPORTUNITY_BONUS"
					value = 50
				}	
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_PRINCIPLE_SACRED_CIVICS"

				if = {
					limit = {
						AND = {
							scope:actor.power_bloc ?= {
								OR = {
									has_principle = principle:principle_sacred_civics_1
									has_principle = principle:principle_sacred_civics_2
									has_principle = principle:principle_sacred_civics_3
								}
							}
							scope:actor.religion = root.religion
						}
					}
					add = 20
				}
			}
		}	

		propose_score = {
			value = 10
		}

		propose_break_score = {
			value = 10
		}
		
		use_obligation_chance = {
			value = 0
	
			add = {
				if = {
					limit = {
						scope:target_country = { country_rank = root.country_rank }
					}					
					value = 25
				}			
			}
	
			add = {
				if = {
					limit = {
						scope:target_country = { country_rank > root.country_rank }
					}					
					value = 50
				}			
			}
		}
		
		owe_obligation_chance = {
			value = 0			
		}	
	}
}
﻿bankroll = {
	groups= {
		general
	}
	requires_approval = no
	should_notify_third_parties = no

	unlocking_technologies = {
		central_banking
	}
	
	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
		}
	}
	
	possible = {}
	
	pact = {	
		cost = 100
	
		is_two_sided_pact = no
		show_in_outliner = yes
		can_be_used_in_sway_offers = yes
		sway_maneuvers_cost = 10

		relations_progress_per_day = 3 # At 100, +1 relations
		relations_improvement_max = 80
		
		income_transfer = 0.20
		second_country_gets_income_transfer = yes
		income_transfer_based_on_second_country = yes
		
		second_modifier = {
			country_pact_leverage_generation_add = 200
		}
		
		weekly_effect = {
			if = {
				limit = { 
					NOT = { scope:diplomatic_pact ?= { is_forced_pact = yes } }
				}		
				custom_tooltip = {
					text = bankroll_weekly_obligation_effect
					if = {
						limit = {
							root = {
								owes_obligation_to = scope:target_country			
							}						
						}
						random_list = { 
							998 = {}
							2 = { root = { set_owes_obligation_to = { country = scope:target_country setting = no } } }
						}				
					}		
					else_if = {
						limit = {
							NOT = { 
								scope:target_country = {
									owes_obligation_to = root			
								}						
							}
						}
						random_list = { 
							998 = {}
							2 = { scope:target_country = { set_owes_obligation_to = { country = root setting = yes } } }
						}
					}				
				}			
			}
		} 
		
		requirement_to_maintain = {
			trigger = {
				has_diplomatic_relevance = scope:target_country
			}
		}

	 	requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT
					scope:target_country.relations:root > relations_threshold:poor
				}		
			}
			
			show_about_to_break_warning = {
				scope:target_country.relations:root <= -17 # this is: poor + 3
				scope:target_country.relations_change_rate:root < 0
			}					
		}	

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NOT_DECENTRALIZED"
					NOT = { is_country_type = decentralized }
					scope:target_country = {
						NOT = { is_country_type = decentralized }
					}				
				}
			}
		}				
	
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_AT_PEACE"
					NOT = { has_war_with = scope:target_country }
				}			
			}
		}		

		requirement_to_maintain = {
			trigger = {
				country_rank >= scope:target_country.country_rank
			}
		}

		requirement_to_maintain = {
			trigger = {
				in_default = no
			}
		}			
	}
	
	ai = {
		max_influence_spending_fraction = 0.20
		
		evaluation_chance = {
			value = 0.0
			
			if = {
				limit = { country_rank >= rank_value:major_power }
				add = {
					value = country_rank
					multiply = 0.05
				}				
			}			
		}		
		
		# This is only used for determining the value of a bankroll in sways, so it follows different logic from normal action acceptance
		# The format here is as if scope:actor was asking if root wants a bankroll
		accept_score = {
			value = 0

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = 5
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RANK"
	
				if = {
					limit = { scope:actor = { country_rank < root.country_rank } }
					value = -5
				}
				
				if = {
					limit = { scope:actor = { country_rank > root.country_rank } }
					value = 5
				}				
			}		
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_GDP"
				value = "scope:actor.ai_gdp_comparison(root)"
				max = 20
				min = -20
			}
			
			if = {
				limit = { scaled_debt >= 0.05 }
				
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_DEBT"
					value = scaled_debt
					multiply = 30	
					min = 1
				}					
			}
			else_if = {
				limit = { scaled_gold_reserves >= 0.05 }
				
				subtract = {
					desc = "DIPLOMATIC_ACCEPTANCE_GOLD_RESERVES"				
					value = scaled_gold_reserves
					multiply = 20
					min = 1
				}						
			}
		}		
	
		# This is only used for determining the value of a bankroll in sways, so it follows different logic from normal action acceptance
		# The format here is as if scope:actor was asking for a bankroll from root
		junior_accept_score = {
			value = 0

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -10
			}			
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RANK"
	
				if = {
					limit = { scope:actor = { country_rank > root.country_rank } }
					value = -5
				}
				
				if = {
					limit = { scope:actor = { country_rank < root.country_rank } }
					value = 5
				}				
			}				

			subtract = {
				value = 10
				multiply = scope:actor.num_income_transfer_pacts
			}

			subtract = {
				value = 10
				multiply = num_income_transfer_pacts
			}				
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_GDP"
				value = "scope:actor.ai_gdp_comparison(root)"
				add = 2
				multiply = -10
				min = -100
				max = 0
			}
			
			if = {
				limit = { scaled_debt >= 0.05 }
				
				subtract = {
					desc = "DIPLOMATIC_ACCEPTANCE_DEBT"
					value = scaled_debt
					multiply = 100	
					min = 1
				}					
			}
			else_if = {
				limit = { scaled_gold_reserves >= 0.05 }
				
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_GOLD_RESERVES"				
					value = scaled_gold_reserves
					multiply = 25
					min = 1
				}						
			}
		}	
	
		propose_score = {
			value = 10

			if = {
				limit = {
					exists = c:CIR
					has_journal_entry = je_great_game_control
					country_has_primary_culture = cu:british
					scope:target_country = {
						c:CIR ?= this
					}
				}
				add = {
					value = 50
				}		
			}
		}
	
		will_propose = { 
			scaled_debt <= 0
			is_at_war = no
			weekly_net_fixed_income > 0	
			has_attitude = {
				who = scope:target_country
				attitude = protective
			}
			OR = {
				num_income_transfer_pacts < 1
				AND = {
					num_income_transfer_pacts < 2
					income >= 200000
				}
				AND = {
					num_income_transfer_pacts < 3
					income >= 400000
				}				
			}
			
			OR = {
				root = {
					owes_obligation_to = scope:target_country			
				}	
				NOT = { 
					scope:target_country = {
						owes_obligation_to = root			
					}						
				}
				AND = {
					is_at_war = no
					scope:target_country = { is_at_war = yes }
				}			
			}		
			# We want to have at least five times their income, and at least 50k income in general
			OR = {
				AND = {
					income >= 50000
					weekly_net_fixed_income >= 4000
					scope:target_country.income <= 10000
				}
				AND = {
					income >= 75000
					weekly_net_fixed_income >= 6000
					scope:target_country.income <= 15000
				}				
				AND = {
					income >= 100000
					weekly_net_fixed_income >= 8000
					scope:target_country.income <= 20000
				}
				AND = {
					income >= 125000
					weekly_net_fixed_income >= 10000
					scope:target_country.income <= 25000
				}
				AND = {
					income >= 150000
					weekly_net_fixed_income >= 12000
					scope:target_country.income <= 30000
				}	
				AND = {
					income >= 175000
					weekly_net_fixed_income >= 14000
					scope:target_country.income <= 35000
				}
				AND = {
					income >= 200000
					weekly_net_fixed_income >= 16000
					scope:target_country.income <= 40000
				}
				AND = {
					income >= 225000
					weekly_net_fixed_income >= 18000
					scope:target_country.income <= 45000
				}	
				AND = {
					income >= 250000
					weekly_net_fixed_income >= 20000
					scope:target_country.income <= 50000
				}					
			}			
		}
		
		will_break = { 
			NOT = {
				AND = {
					has_variable = forced_bankroll_time
					var:forced_bankroll_time ?= scope:target_country
				}
			}
			OR = {		
				scaled_debt > 0.25
				AND = {
					scaled_debt > 0
					OR = {
						weekly_net_fixed_income < 0	
						is_at_war = yes
					}				
				}				
				NOT = {
					has_attitude = {
						who = scope:target_country
						attitude = protective
					}				
				}
				num_income_transfer_pacts > 3
				AND = {
					num_income_transfer_pacts > 1
					OR = {
						weekly_net_fixed_income < -10000	
						income < 300000
					}			
				}
				AND = {
					num_income_transfer_pacts > 2
					OR = {
						weekly_net_fixed_income < -5000					
						income < 500000
					}
				}				
				NOR = {
					root = {
						owes_obligation_to = scope:target_country			
					}	
					NOT = { 
						scope:target_country = {
							owes_obligation_to = root			
						}						
					}
					AND = {
						is_at_war = no
						scope:target_country = { is_at_war = yes }
					}			
				}							
				# Threshold for breaking off a bankroll is higher than for starting it
				# We also don't look at weekly_net_fixed_income here since starting a bankroll changes it
				NOR = {
					AND = {
						income >= 40000
						scope:target_country.income <= 12500
					}				
					AND = {
						income >= 50000
						scope:target_country.income <= 15000
					}
					AND = {
						income >= 75000
						scope:target_country.income <= 20000
					}				
					AND = {
						income >= 100000
						scope:target_country.income <= 25000
					}
					AND = {
						income >= 125000
						scope:target_country.income <= 30000
					}
					AND = {
						income >= 150000
						scope:target_country.income <= 35000
					}	
					AND = {
						income >= 175000
						scope:target_country.income <= 40000
					}
					AND = {
						income >= 200000
						scope:target_country.income <= 45000
					}
					AND = {
						income >= 225000
						scope:target_country.income <= 50000
					}
					AND = {
						income >= 250000
						scope:target_country.income <= 55000
					}					
				}						
			}
		}			
	}
}


﻿war_reparations = {
	groups= {
		general
	}
	requires_approval = no
	should_notify_third_parties = no
	show_in_lens = no
	can_select_to_break = no

	selectable = {
		always = no
	}
	
	pact = {	
		is_two_sided_pact = no
		
		income_transfer = 0.1
		second_country_gets_income_transfer = no
		income_transfer_based_on_second_country = yes

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_DURATION_NOT_EXPIRED"
					always = no # always auto breaks when forced duration is over
				}			
			}
		}		
	}
	
	ai = {
		evaluation_chance = {
			value = 0
		}				
	}	
}


﻿humiliation = {
	groups= {
		general
	}
	requires_approval = no
	should_notify_third_parties = no
	show_in_lens = no
	can_select_to_break = no

	selectable = {
		always = no
	}
	
	pact = {	
		is_two_sided_pact = no
		is_humiliation = yes
	
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_DURATION_NOT_EXPIRED"
					always = no # always auto breaks when forced duration is over
				}			
			}
		}	
	}
	
	ai = {
		evaluation_chance = {
			value = 0
		}				
	}
}


﻿protectorate = {
	groups= {
		general
	}
	show_in_lens = no

	potential = {  # Only created through diplomatic demands
		always = no
	}
	
	pact = {	
		cost = 25
		has_junior_participant = yes
		recipient_pays_maintenance = no	
		
		relations_progress_per_day = 1
		relations_improvement_max = 50
		
		subject_type = subject_type_protectorate	
		
		second_modifier = {
			country_convoy_contribution_to_market_owner_add = 0.25
		}
		
		actor_can_break = {
			is_diplomatic_play_committed_participant = no
		}

		target_can_break = { # Has to use diplomatic play to break
			always = no
		}

		manual_break_effect = {
			create_bidirectional_truce = { country = scope:target_country months = 60 }
		}
		
		auto_break_effect = {
			create_bidirectional_truce = { country = scope:target_country months = 60 }
		}
	}
	
	ai = {
		evaluation_chance = {
			value = 0
		}	
	
		will_break = {
			always = no			
		}		
	}	
}

﻿puppet = {
	groups= {
		general # for breaking only
	}
	show_in_lens = no

	potential = { # Only created through diplomatic plays
		always = no
	}

	pact = {
		cost = 25
		has_junior_participant = yes
		recipient_pays_maintenance = no
		income_transfer = 0.3
		second_country_gets_income_transfer = no
		income_transfer_based_on_second_country = yes
		
		relations_progress_per_day = 1
		relations_improvement_max = 50

		subject_type = subject_type_puppet
		
		second_modifier = {
			country_law_enactment_imposition_success_add = 0.1
			country_convoy_contribution_to_market_owner_add = 0.5
		}
		
		actor_can_break = {
			is_diplomatic_play_committed_participant = no
		}

		target_can_break = { # Has to use diplomatic play to break
			always = no
		}		

		manual_break_effect = {
			create_bidirectional_truce = { country = scope:target_country months = 60 }
		}
		
		auto_break_effect = {
			create_bidirectional_truce = { country = scope:target_country months = 60 }
		}		
	}
	
	ai = {
		evaluation_chance = {
			value = 0
		}		
	
		will_break = {
			always = no			
		}		
	}
}

﻿dominion = {
	groups= {
		general # for breaking only
	}
	show_in_lens = no

	potential = { # Only created through diplomatic plays
		always = no
	}
	
	pact = {
		cost = 25
	
		has_junior_participant = yes
		recipient_pays_maintenance = no
		income_transfer = 0.25
		second_country_gets_income_transfer = no
		income_transfer_based_on_second_country = yes
		
		relations_progress_per_day = 1
		relations_improvement_max = 50

		subject_type = subject_type_dominion
		
		second_modifier = {
			country_convoy_contribution_to_market_owner_add = 0.5
		}
		
		actor_can_break = {
			is_diplomatic_play_committed_participant = no
		}

		target_can_break = { # Has to use diplomatic play to break
			always = no
		}
		
		manual_break_effect = {
			create_bidirectional_truce = { country = scope:target_country months = 60 }
		}
		
		auto_break_effect = {
			create_bidirectional_truce = { country = scope:target_country months = 60 }
		}		
	}
	
	ai = {
		evaluation_chance = {
			value = 0
		}		
	
		will_break = {
			always = no			
		}		
	}
}

﻿personal_union = {
	groups= {
		general # for breaking only
	}
	show_in_lens = no

	potential = { # Only created through diplomatic plays
		always = no
	}
	
	pact = {
		cost = 25
		has_junior_participant = yes
		recipient_pays_maintenance = no
		
		relations_progress_per_day = 1
		relations_improvement_max = 50
		
		subject_type = subject_type_personal_union
		
		second_modifier = {
			country_law_enactment_imposition_success_add = 0.1
			country_convoy_contribution_to_market_owner_add = 0.5
		}
		
		actor_can_break = {
			is_diplomatic_play_committed_participant = no
		}

		target_can_break = { # Has to use diplomatic play to break
			always = no
		}	
		
		requirement_to_maintain = {
			trigger = { has_law = law_type:law_monarchy }
		}
		
		requirement_to_maintain = {
			trigger = { scope:target_country = { has_law = law_type:law_monarchy } }
		}	
		
		manual_break_effect = {
			create_bidirectional_truce = { country = scope:target_country months = 60 }
		}
		
		auto_break_effect = {
			create_bidirectional_truce = { country = scope:target_country months = 60 }
		}		
	}
	
	ai = {
		evaluation_chance = {
			value = 0
		}		
	
		will_break = {
			always = no			
		}		
	}
}

﻿vassal = {
	groups= {
		general # for breaking only
	}
	show_in_lens = no

	potential = { # Only created through diplomatic plays
		always = no
	}
	
	pact = {
		cost = 25
		has_junior_participant = yes
		recipient_pays_maintenance = no
		income_transfer = 0.3
		second_country_gets_income_transfer = no
		income_transfer_based_on_second_country = yes
		
		relations_progress_per_day = 1
		relations_improvement_max = 50
		
		subject_type = subject_type_vassal
		
		second_modifier = {
			country_convoy_contribution_to_market_owner_add = 0.5
		}
		
		actor_can_break = {
			is_diplomatic_play_committed_participant = no
		}

		target_can_break = { # Has to use diplomatic play to break
			always = no
		}	
		
		manual_break_effect = {
			create_bidirectional_truce = { country = scope:target_country months = 60 }
		}
		
		auto_break_effect = {
			create_bidirectional_truce = { country = scope:target_country months = 60 }
		}		
	}
	
	ai = {
		evaluation_chance = {
			value = 0
		}		
	
		will_break = {
			always = no			
		}		
	}
}

﻿tributary = {
	groups= {
		general # for breaking only
	}
	show_in_lens = no

	potential = { # Only created through diplomatic plays
		always = no
	}

	pact = {	
		cost = 25
		has_junior_participant = yes
		recipient_pays_maintenance = no

		income_transfer = 0.2
		second_country_gets_income_transfer = no
		income_transfer_based_on_second_country = yes
		
		relations_progress_per_day = 1
		relations_improvement_max = 50

		subject_type = subject_type_tributary
		
		second_modifier = {
			country_convoy_contribution_to_market_owner_add = 0.25
		}
		
		actor_can_break = {
			is_diplomatic_play_committed_participant = no
		}

		target_can_break = { # Has to use diplomatic play to break
			always = no
		}			

		manual_break_effect = {
			create_bidirectional_truce = { country = scope:target_country months = 60 }
		}
		
		auto_break_effect = {
			create_bidirectional_truce = { country = scope:target_country months = 60 }
		}		
	}
	
	ai = {
		evaluation_chance = {
			value = 0
		}		
	
		will_break = {
			always = no			
		}		
	}	
}

﻿colonization_rights = {
	groups= {
		general
	}
	requires_approval = no
	should_notify_third_parties = no
	show_in_lens = no
	can_select_to_break = no

	selectable = {
		always = no
	}
	
	pact = {	
		is_two_sided_pact = no
		is_colonization_rights = yes
	
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_DURATION_NOT_EXPIRED"
					always = no # always auto breaks when forced duration is over
				}			
			}
		}		
	}
	
	ai = {
		evaluation_chance = {
			value = 0		
		}	
	}
}


﻿join_power_bloc = {
	requires_approval = yes
	can_use_obligations = yes
	should_notify_third_parties = yes
	groups = { general }
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/power_bloc_join_request"

	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
		is_subject = no
	}

	potential = {
		scope:target_country = {
			is_power_bloc_leader = yes
		}		
	}

	possible = {
		# Must not be able to immediately start a power struggle
		custom_tooltip = {
			text = "NO_POWER_STRUGGLE_BLOC_JOIN"
			OR = {
				prestige < scope:target_country.prestige
				country_rank < scope:target_country.country_rank
			}		
		}	
	
		scope:target_country.power_bloc ?= {
			leverage_advantage = {
				target = root
				value >= leverage_threshold_to_invite
			}

			NOT = {
				any_power_bloc_member = {
					is_diplomatic_play_enemy_of = root
				}
			}
		}
	}

	accept_effect = {
		join_power_bloc = scope:target_country
	}
	
	decline_effect = {
		change_relations = { country = scope:target_country value = -20 } 
		
		# Remove the entire leverage advantage if they say no
		scope:target_country.power_bloc ?= { 
			add_leverage = { 
				target = scope:actor 
				value = {
					value = "leverage_advantage(scope:actor)"
					multiply = -1
				}
			} 
		}
	}		

	ai = {
		evaluation_chance = {
			value = 0.01 # AI shouldn't volunteer into power blocs all that often
		}		
	
		accept_score = {
			value = 0
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_LEVERAGE_OF_TARGET"
				value = "power_bloc.leverage_advantage(scope:actor)"
				multiply = 0.5
				min = 0
				max = 200
			}

			### Impact on Cohesion
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_DECREASED_COHESION"
				value = "power_bloc.predicted_cohesion_percentage_with(scope:actor)"
				subtract = "power_bloc.current_cohesion_number"
				multiply = 2 # -2 acceptance for each lost point of cohesion
				
				if = {
					limit = { "power_bloc.current_cohesion_number" <= 20 }
					multiply = 5
				}
				else_if = {
					limit = { "power_bloc.current_cohesion_number" <= 40 }
					multiply = 2
				}			
				
				max = 0
			}

			### How we fit their selected identity
			add = ai_accept_join_request_score
			
			# Ideological opinion is always a factor, but much weaker for non ideological unions
			# Score for ideological unions is handled in ai_accept_join_request_score script value
			if = {
				limit = {
					scope:target_country.power_bloc ?= {
						NOT = { has_identity = identity:identity_ideological_union }
					}
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.25
					max = 25
					min = -25
				}
			}				
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = genial
							}
							has_attitude = {
								who = scope:actor
								attitude = protective
							}
						}
					}
					value = 100
				}
				else_if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = cooperative
							}
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}							
						}
					}
					value = 50
				}
				else_if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = domineering
						}
					}
					value = 25
				}
				else_if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}
						}
					}
					value = -100
				}
				else = {
					value = -25
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"
				if = {
					limit = {
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 0
				}
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 50
				}	
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 100
				}
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -5
				}	
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -10
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -25
				}
			}
			
			if = {
				limit = {
					scope:actor = {
						has_variable = pro_lobby_proposal_power_bloc
						var:pro_lobby_opportunity_target ?= scope:target_country
					}
				}
				add = {
					desc = "LOBBY_OPPORTUNITY_BONUS"
					value = 100
				}	
			}	
			
			if = {
				limit = {
					scope:actor = {
						has_variable = anti_lobby_proposal_power_bloc
						var:anti_lobby_opportunity_target ?= scope:target_country
					}
				}
				add = {
					desc = "LOBBY_OPPORTUNITY_BONUS"
					value = 50
				}	
			}
		}
		
		will_propose = {  
			would_accept_diplomatic_action = {
				actor = scope:target_country
				type = invite_to_power_bloc
			}
		}
		
		propose_score = {
			value = 20
		}

		use_obligation_chance = {
			value = 25
		}

		owe_obligation_chance = {
			value = 0
		}
	}
}

﻿foreign_investment_agreement = {
	groups= {
		general
	}
	requires_approval = yes
	should_notify_third_parties = yes
	can_use_obligations = yes
	confirmation_sound = "event:/SFX/UI/MapInteraction/diplomatic_action_foreign_investment_agreement_request"

	unlocking_technologies = {
		stock_exchange
	}

	selectable = {
		has_dlc_feature = foreign_investment
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
			is_revolutionary = no
		}
		has_dlc_feature = foreign_investment
	}

	accept_effect = {
		add_lobby_appeasement_from_diplomacy_unidirectional = { 
			FIRST = root
			SECOND = scope:target_country 
			PRO_AMOUNT = 3
			ANTI_AMOUNT = -3
			FACTOR = appeasement_foreign_investment_agreement_formed
		}	
		if = {
			limit = {
				has_diplomatic_pact = {
					who = scope:target_country
					type = foreign_investment_rights
				}			
			}
			
			remove_diplomatic_pact = {
				country = scope:target_country
				type = foreign_investment_rights
			}	
		}
		else_if = {
			limit = {
				scope:target_country = {
					has_diplomatic_pact = {
						who = scope:actor
						type = foreign_investment_rights
					}	
				}
			}

			scope:target_country = {
				remove_diplomatic_pact = {
					country = scope:actor
					type = foreign_investment_rights
				}	
			}
		}
	}

	pact = {
		cost = 50
		is_two_sided_pact = yes
		is_foreign_investment_rights = yes

		relations_progress_per_day = 1  # At 100, +1 relations
		relations_improvement_max = 80

		first_modifier = {
			country_pact_leverage_generation_add = 150
		}

		second_modifier = {
			country_pact_leverage_generation_add = 150
		}

		requirement_to_maintain = {
			trigger = {
				has_diplomatic_relevance = scope:target_country
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NO_SUBJECT_RELATION"
					NOT = {
						is_subject_of = scope:target_country
						scope:target_country = { is_subject_of = root }
					}
				}
			}
		}
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_DIPLOMATIC_AUTONOMY"
					aggressive_diplomatic_plays_permitted = yes
					scope:target_country = { aggressive_diplomatic_plays_permitted = yes }					
				}
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NOT_DECENTRALIZED"
					NOT = { is_country_type = decentralized }
					scope:target_country = {
						NOT = { is_country_type = decentralized }
					}
				}
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT
					scope:target_country.relations:root > relations_threshold:poor
				}
			}

			show_about_to_break_warning = {
				scope:target_country.relations:root <= -17 # this is: poor + 3
				scope:target_country.relations_change_rate:root < 0
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_AT_PEACE"
					NOT = { has_war_with = scope:target_country }
				}
			}
		}

		requirement_to_maintain = {
			trigger = {
				NOT = { has_law = law_type:law_isolationism }
			}
		}

		requirement_to_maintain = {
			trigger = {
				NOT = { scope:target_country = { has_law = law_type:law_isolationism } }
			}
		}

		requirement_to_maintain = {
			trigger = {
				NOT = {
					has_war_with = scope:target_country
				}
			}
		}

		manual_break_effect = {
			change_relations = { country = scope:target_country value = -10 }
			
			if = {
				limit = { 
					NOR = { 
						is_subject_of = scope:target_country 
						scope:target_country = { is_subject_of = root }
					}
				}
				
				add_lobby_appeasement_from_diplomacy_unidirectional = { 
					FIRST = root
					SECOND = scope:target_country 
					PRO_AMOUNT = -3
					ANTI_AMOUNT = 3
					FACTOR = appeasement_foreign_investment_agreement_broken
				}				
			}			
		}

		auto_break_effect = {
			if = {
				limit = { 
					NOR = { 
						is_subject_of = scope:target_country 
						scope:target_country = { is_subject_of = root }
					}
				}
				
				add_lobby_appeasement_from_diplomacy_unidirectional = { 
					FIRST = root
					SECOND = scope:target_country 
					PRO_AMOUNT = -3
					ANTI_AMOUNT = 3
					FACTOR = appeasement_foreign_investment_agreement_broken
				}				
			}				
		}
	}
	
	ai = {		
		check_acceptance_for_will_break = yes
		check_acceptance_for_will_propose = yes
		
		evaluation_chance = {
			value = 0.1
			
			add = {
				value = country_rank
				multiply = 0.05
			}			
		}		
			
		accept_score = {
			value = 0

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_GDP"
				value = "scope:actor.ai_gdp_comparison(root)"
				multiply = 2
				min = -20
				max = 20
			}					
			
			if = {
				limit = { 
					has_strategy = ai_strategy_economic_imperialism
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ECONOMIC_IMPERIALISM"
					add = -25
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_MUTUAL_TRADE_ROUTES"
				value = "scope:actor.num_mutual_trade_route_levels_with_country(root)"
				multiply = 0.5
				max = 25
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RANK"

				if = {
					limit = { scope:actor = { country_rank > root.country_rank } }
					value = 20
				}

				if = {
					limit = { scope:actor = { country_rank < root.country_rank } }
					value = -20
				}
			}
			
			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					max = 20
				}					
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					min = -20
				}					
			}	
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = loyal
							}
							has_attitude = {
								who = scope:actor
								attitude = genial
							}							
						}
					}
					value = 40
				}
				
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}	
							has_attitude = {
								who = scope:actor
								attitude = cooperative
							}							
						}
					}
					value = 20
				}
				
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = protective
							}		
							has_attitude = {
								who = scope:actor
								attitude = cautious
							}							
						}					
					}
					value = -50
				}
				
				if = {
					limit = {
						OR = {						
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = domineering
							}
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}
							has_attitude = {
								who = scope:actor
								attitude = rebellious
							}
						}
					}
					value = -1000
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 25
				}
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}
				else_if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				else_if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_PRINCIPLE_SACRED_CIVICS"

				if = {
					limit = {
						AND = {
							scope:actor.power_bloc ?= {
								OR = {
									has_principle = principle:principle_sacred_civics_1
									has_principle = principle:principle_sacred_civics_2
									has_principle = principle:principle_sacred_civics_3
								}
							}
							scope:actor.religion = root.religion
						}
					}
					add = 20
				}
			}	
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_PRO_LOBBY_CLOUT"					
				value = "scope:actor.lobby_foreign_pro_clout(scope:target_country)"
				multiply = 50
				max = 25
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_ANTI_LOBBY_CLOUT"					
				value = "scope:actor.lobby_foreign_anti_clout(scope:target_country)"
				multiply = -50
				min = -25
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_TARGET_PRO_LOBBY_CLOUT"					
				value = "scope:target_country.lobby_foreign_pro_clout(scope:actor)"
				multiply = 100
				max = 25
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_TARGET_ANTI_LOBBY_CLOUT"					
				value = "scope:target_country.lobby_foreign_anti_clout(scope:actor)"
				multiply = -100
				min = -25
			}	

			if = {
				limit = {
					scope:actor = {
						has_variable = pro_lobby_proposal_investment_agreement
						var:pro_lobby_opportunity_target ?= scope:target_country
					}
				}
				add = {
					desc = "LOBBY_OPPORTUNITY_BONUS"
					value = 100
				}	
			}
			
			if = {
				limit = {
					scope:actor = {
						has_variable = pro_lobby_proposal_investment_agreement
						var:anti_lobby_opportunity_target ?= scope:target_country
					}
				}
				add = {
					desc = "LOBBY_OPPORTUNITY_BONUS"
					value = 50
				}	
			}
		}
		
		will_break = { 	
			OR = {
				has_attitude = {
					who = scope:target_country
					attitude = antagonistic
				}
				has_attitude = {
					who = scope:target_country
					attitude = belligerent
				}
				has_attitude = {
					who = scope:target_country
					attitude = rebellious
				}
			}
		}
		
		propose_score = {
			value = 10
		}

		propose_break_score = {
			value = 10
		}

		use_obligation_chance = {
			value = 25
		}

		owe_obligation_chance = {
			value = 15
		}		
	}
}

﻿foreign_investment_rights = {
	groups= {
		general
	}
	requires_approval = yes
	should_notify_third_parties = yes
	confirmation_sound = "event:/SFX/UI/MapInteraction/diplomatic_action_foreign_investment_rights_request"

	unlocking_technologies = {
		stock_exchange
	}

	selectable = {
		has_dlc_feature = foreign_investment
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
			is_revolutionary = no
		}
	
		NOT = {
			has_diplomatic_pact = {
				who = scope:target_country
				type = foreign_investment_agreement
			}			
		}
	}

	pact = {
		cost = 50
		recipient_pays_maintenance = no

		second_modifier = {
			country_pact_leverage_generation_add = 200
		}

		is_two_sided_pact = yes
		is_foreign_investment_rights = yes
		has_junior_participant = yes

		relations_progress_per_day = 0.5  # At 100, +1 relations
		relations_improvement_max = 50

		can_be_used_in_sway_offers = yes
		sway_maneuvers_cost = 10

		requirement_to_maintain = {
			trigger = {
				has_diplomatic_relevance = scope:target_country
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT
					scope:target_country.relations:root > relations_threshold:poor
				}
			}

			show_about_to_break_warning = {
				scope:target_country.relations:root <= -17 # this is: poor + 3
				scope:target_country.relations_change_rate:root < 0
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_AT_PEACE"
					NOT = { has_war_with = scope:target_country }
				}
			}
		}

		requirement_to_maintain = {
			trigger = {
				NOT = { has_law = law_type:law_isolationism }
			}
		}

		requirement_to_maintain = {
			trigger = {
				NOT = { scope:target_country = { has_law = law_type:law_isolationism } }
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NOT_DECENTRALIZED"
					NOT = { is_country_type = decentralized }
					scope:target_country = {
						NOT = { is_country_type = decentralized }
					}
				}
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NO_SUBJECT_RELATION"
					NOT = {
						is_subject_of = scope:target_country
						scope:target_country = { is_subject_of = root }
					}
				}
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_DIPLOMATIC_AUTONOMY"
					aggressive_diplomatic_plays_permitted = yes
					scope:target_country = { aggressive_diplomatic_plays_permitted = yes }					
				}
			}
		}
		
		manual_break_effect = {
			change_relations = { country = scope:target_country value = -10 }
		}
		
		auto_break_effect = {}
	}

    ai = {
		check_acceptance_for_will_break = yes
		check_acceptance_for_will_propose = yes
		
		evaluation_chance = {
			value = 0.1
			
			add = {
				value = country_rank
				multiply = 0.05
			}			
		}			

		# This is the acceptance score for the senior part of the foreign_investment_rights (used for 'grant_foreign_investment_rights' action and checking AI in both directions)
		accept_score = {
			value = 0

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}

			if = {
				limit = { 
					has_strategy = ai_strategy_economic_imperialism
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ECONOMIC_IMPERIALISM"
					add = 50
				}
			}

			if = {
				limit = {
					any_diplomatic_catalyst = {
						is_diplomatic_catalyst_type = catalyst_declared_bankruptcy
						target = scope:actor
					}
				}
				add = {
					desc = "catalyst_declared_bankruptcy"
					add = 50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_MUTUAL_TRADE_ROUTES"
				value = "scope:actor.num_mutual_trade_route_levels_with_country(root)"
				multiply = 0.5
				max = 25
			}

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					max = 20
				}
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					min = -20
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = protective
							}
							has_attitude = {
								who = scope:actor
								attitude = domineering
							}
						}
					}
					value = 40
				}
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = genial
						}
					}
					value = 30
				}
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}	
							has_attitude = {
								who = scope:actor
								attitude = cooperative
							}
						}
					}
					value = 20
				}
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = cautious
						}
					}
					value = -50
				}
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}
							has_attitude = {
								who = scope:actor
								attitude = rebellious
							}
						}
					}
					value = -1000
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 20
				}
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_PRINCIPLE_SACRED_CIVICS"

				if = {
					limit = {
						AND = {
							scope:actor.power_bloc ?= {
								OR = {
									has_principle = principle:principle_sacred_civics_1
									has_principle = principle:principle_sacred_civics_2
									has_principle = principle:principle_sacred_civics_3
								}
							}
							scope:actor.religion = root.religion
						}
					}
					add = 20
				}
			}			
		}

		# This is the acceptance score for the junior part of the foreign_investment_rights (used for 'foreign_investment_rights' action and checking AI in both directions)
		junior_accept_score = {
			value = 0

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_GDP"
				value = "scope:actor.ai_gdp_comparison(root)"
				min = -50
				max = 50
			}

			if = {
				limit = {
					gdp >= 2000000
				}
				
				subtract = {
					desc = "DIPLOMATIC_ACCEPTANCE_HIGH_GDP"
					value = gdp
					subtract = 1000000
					divide = 1000000
					min = 1
					max = 100
				}
			}
			
			if = {
				limit = {
					scope:actor = {
						any_diplomatic_catalyst = {
							is_diplomatic_catalyst_type = catalyst_declared_bankruptcy
							target = root
						}
					}
				}
				add = {
					desc = "catalyst_declared_bankruptcy"
					add = 50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_MUTUAL_TRADE_ROUTES"
				value = "scope:actor.num_mutual_trade_route_levels_with_country(root)"
				multiply = 0.5
				max = 25
			}

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					max = 20
				}
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					min = -20
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = loyal
						}
					}
					value = 40
				}
				else_if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = genial
						}
					}
					value = 30
				}
				else_if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}	
							has_attitude = {
								who = scope:actor
								attitude = cooperative
							}
						}
					}
					value = 20
				}
				else_if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = protective
							}
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = domineering
							}
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}
							has_attitude = {
								who = scope:actor
								attitude = rebellious
							}
						}
					}
					value = -1000
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 20
				}
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RANK"

				if = {
					limit = { scope:actor = { country_rank = root.country_rank } }
					value = -20
				}

				if = {
					limit = { scope:actor = { country_rank < root.country_rank } }
					value = -50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INCOMPATIBLE_ECONOMIC_SYSTEMS"
				if = {
					limit = {
						OR = {
							AND = {
								scope:actor = { has_radical_leftist_economy = no }
								scope:target_country = { has_radical_leftist_economy = yes }
							}
							AND = {
								scope:actor = { has_radical_leftist_economy = yes }
								scope:target_country = { has_radical_leftist_economy = no }
							}
						}
					}
					value = -100
				}
			}

			if = {
				limit = {
					scope:target_country = {
						c:CHI ?= THIS
						OR = {
							country_rank >= rank_value:unrecognized_major_power
							country_rank >= rank_value:great_power
						}
					}
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IS_CHINA"
					value = -100
				}
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_PRINCIPLE_SACRED_CIVICS"

				if = {
					limit = {
						AND = {
							scope:actor.power_bloc ?= {
								OR = {
									has_principle = principle:principle_sacred_civics_1
									has_principle = principle:principle_sacred_civics_2
									has_principle = principle:principle_sacred_civics_3
								}
							}
							scope:actor.religion = root.religion
						}
					}
					add = 20
				}
			}		
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_PRO_LOBBY_CLOUT"					
				value = "scope:actor.lobby_foreign_pro_clout(scope:target_country)"
				multiply = 50
				max = 25
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_ANTI_LOBBY_CLOUT"					
				value = "scope:actor.lobby_foreign_anti_clout(scope:target_country)"
				multiply = -50
				min = -25
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_TARGET_PRO_LOBBY_CLOUT"					
				value = "scope:target_country.lobby_foreign_pro_clout(scope:actor)"
				multiply = 100
				max = 25
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_TARGET_ANTI_LOBBY_CLOUT"					
				value = "scope:target_country.lobby_foreign_anti_clout(scope:actor)"
				multiply = -100
				min = -25
			}	

			if = {
				limit = {
					scope:actor = {
						has_variable = pro_lobby_proposal_investment_agreement
						var:pro_lobby_opportunity_target ?= scope:target_country
					}
				}
				add = {
					desc = "LOBBY_OPPORTUNITY_BONUS"
					value = 100
				}	
			}
			
			if = {
				limit = {
					scope:actor = {
						has_variable = anti_lobby_proposal_investment_agreement
						var:anti_lobby_opportunity_target ?= scope:target_country
					}
				}
				add = {
					desc = "LOBBY_OPPORTUNITY_BONUS"
					value = 50
				}	
			}	
		}

		propose_score = {
			value = 10

			add = {
				desc = "RUSSIA_WANTS_INFLUENCE_IN_MANCHURIA"
				if = {
					limit = {
						scope:target_country = {
							OR = {
								country_has_primary_culture = cu:manchu
								country_has_primary_culture = cu:han
							}
							any_scope_state = {
								region = sr:region_manchuria
							}
						}
						scope:actor = {
							country_has_primary_culture = cu:russian
							any_scope_state = {
								region = sr:region_manchuria
								is_incorporated = yes
							}
						}
					}
					add = 25
				}
			}		
		}

		propose_break_score = {
			value = 10
		}

		use_obligation_chance = {
			value = 25
		}

		owe_obligation_chance = {
			value = 0

			add = {
				desc = "RUSSIA_WANTS_INFLUENCE_IN_MANCHURIA"
				if = {
					limit = {
						scope:target_country = {
							OR = {
								country_has_primary_culture = cu:manchu
								country_has_primary_culture = cu:han
							}
							any_scope_state = {
								region = sr:region_manchuria
							}
						}
						scope:actor = {
							country_has_primary_culture = cu:russian
							any_scope_state = {
								region = sr:region_manchuria
								is_incorporated = yes
							}
						}
					}
					add = 10
				}
			}	
		}
	}
}

grant_foreign_investment_rights = {
	groups= {
		general
	}

	requires_approval = yes
	can_use_obligations = yes
	confirmation_sound = "event:/SFX/UI/MapInteraction/diplomatic_action_foreign_investment_rights_request"

	selectable = {
		has_dlc_feature = foreign_investment
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
			is_revolutionary = no
		}
		
		scope:target_country = {
			NOT = {
				has_diplomatic_pact = {
					who = scope:actor
					type = foreign_investment_rights
				}
			}
		}

		NOT = {
			has_diplomatic_pact = {
				who = scope:target_country
				type = foreign_investment_agreement
			}			
		}		
	}

	possible = {
		NOT = { has_war_with = scope:target_country }

		has_diplomatic_relevance = scope:target_country

		scope:target_country = {
			has_technology_researched = stock_exchange
		}

		custom_tooltip = {
			text = DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT
			scope:target_country.relations:root > relations_threshold:poor
		}					
	}


	reverse_pact = foreign_investment_rights

	ai = {
		check_acceptance_for_will_propose = yes
		
		evaluation_chance = {
			value = 0
			
			if = {
				limit = { country_rank < rank_value:major_power }
				add = 0.25
			}			
		}		

		propose_score = {
			value = 10
		}

		propose_break_score = {
			value = 10
		}

		use_obligation_chance = {
			value = 0
		}

		owe_obligation_chance = {
			value = 0
		}
	}
}
﻿invite_to_power_bloc = {
	requires_approval = yes
	can_use_obligations = yes
	uses_random_approval = yes
	should_notify_third_parties = yes
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/power_bloc_invite_request"

	groups = { general }

	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no	
		is_in_power_bloc = yes

		# Note that most of the script below has been written under the assumption that root is the power bloc leader.
		is_power_bloc_leader = yes      # if you change this line, remember to change power_bloc_invite_available
	}
	
	potential = { 
		scope:target_country = {
			NOT = { is_country_type = decentralized }
		}
	}

	possible = {
		# Must not be able to immediately start a power struggle
		custom_tooltip = {
			text = "NO_POWER_STRUGGLE_BLOC_JOIN"		
			OR = {
				prestige > scope:target_country.prestige
				country_rank > scope:target_country.country_rank
			}
		}
	
		power_bloc = {
			leverage_advantage = {
				target = scope:target_country
				value >= leverage_threshold_to_invite
			}

			NOT = {
				any_power_bloc_member = {
					is_diplomatic_play_enemy_of = scope:target_country
				}
			}
		}
		custom_tooltip = {
			# This effectively sets a 2 year cooldown on invites. This length needs to be updated both in loc and in the catalyst definition
			text = invite_to_power_bloc_recently_declined
			NOT = {
				any_diplomatic_catalyst = {
					is_diplomatic_catalyst_type = catalyst_declined_bloc_invite
					target = scope:target_country
				}
			}
		}
	}
	
	accept_effect = {
		scope:target_country = {
			join_power_bloc = root
		}
	}
	
	decline_effect = {
		change_relations = { country = scope:target_country value = -50 } 
		hidden_effect = {
			create_diplomatic_catalyst = {
				type = catalyst_declined_bloc_invite
				target = scope:target_country
			}						
		}
	}	
	
	ai = {
		evaluation_chance = {
			value = 0
			if = {
				limit = { is_power_bloc_leader = yes }
				add = 1
			}	
		}	
	
		accept_score = {
			value = 0
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}
			
			### Leverage
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_LEVERAGE"
				value = "scope:actor.power_bloc.leverage_advantage(root)"
				multiply = 0.5
				
				### Leverage effect when already part of the bloc can go into negative, to help determine if they want to leave
				if = {
					limit = { is_in_same_power_bloc = scope:actor	}					
					min = -200
				}
				else = {
					min = 0
				}
				
				max = 200
			}		
			
			if = {
				limit = {
					scope:target_country = { is_in_power_bloc = yes }
				}
				
				### Cohesion of current Bloc
				subtract = {
					desc = "DIPLOMATIC_ACCEPTANCE_COHESION_OF_TARGET"
					value = "scope:target_country.power_bloc.current_cohesion_number"
					subtract = 50
					
					### Low cohesion is more impactful than high cohesion
					if = {
						limit = { scope:target_country.power_bloc = { current_cohesion_number < 20 } }
						multiply = 2
					}					
					else_if = {
						limit = { scope:target_country.power_bloc = { current_cohesion_number < 40 } }
						multiply = 1.5
					}
				}				
			}
			
			### Cohesion
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_COHESION"
				value = "scope:actor.power_bloc.current_cohesion_number"
				subtract = 50
				
				### Low cohesion is more impactful than high cohesion
				if = {
					limit = { scope:actor.power_bloc = { current_cohesion_number < 20 } }
					multiply = 4
				}					
				else_if = {
					limit = { scope:actor.power_bloc = { current_cohesion_number < 40 } }
					multiply = 2
				}
				
				### Care more about cohesion when part of bloc
				if = {
					limit = { is_in_same_power_bloc = scope:actor }
					multiply = 2
				}
			}

			if = {
				limit = {
					scope:target_country.country_rank > rank_value:insignificant_power
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDENTITY_AFFINITY_TO_RANK"
					scope:actor.power_bloc = {
						if = {
							limit = {
								scope:target_country.country_rank = rank_value:great_power
							}
							add = modifier:power_bloc_invite_acceptance_great_power_add 
						}
						else_if = {
							limit = {
								scope:target_country.country_rank = rank_value:major_power
							}
							add = modifier:power_bloc_invite_acceptance_major_power_add 
						}
						else_if = {
							limit = {
								scope:target_country.country_rank = rank_value:minor_power
							}
							add = modifier:power_bloc_invite_acceptance_minor_power_add 
						}
						else_if = {
							limit = {
								scope:target_country.country_rank = rank_value:unrecognized_major_power
							}
							add = modifier:power_bloc_invite_acceptance_unrecognized_major_power_add 
						}
						else_if = {
							limit = {
								scope:target_country.country_rank = rank_value:unrecognized_regional_power
							}
							add = modifier:power_bloc_invite_acceptance_unrecognized_regional_power_add 
						}
					}
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_FROM_IDENTITY"
				scope:actor.power_bloc = {
					add = modifier:power_bloc_invite_acceptance_add
				}
			}

			### How the selected identity fits them
			add = ai_power_bloc_identity_score

			### Similar to identities but considers selected principles
			add = ai_power_bloc_principle_score

			# Ideological opinion is always a factor, but much weaker for non ideological unions
			# Score for ideological unions is handled in ai_power_bloc_identity_score script value
			if = {
				limit = {
					power_bloc ?= {
						NOT = { has_identity = identity:identity_ideological_union }
					}
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.25
					max = 25
					min = -25
				}
			}	

			### Powerful Protectors is always a factor, but less so if not being invited to a sovereign empire		
			if = {
				limit = {
					scope:actor.power_bloc ?= {
						NOT = { has_identity = identity:identity_sovereign_empire }
					}
					has_powerful_protectors = yes
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_POWERFUL_PROTECTORS_THEM"
					value = -25
				}	
			}
			
			### Relative rank
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RANK"
				value = scope:actor.country_rank
				subtract = 2
				subtract = country_rank
				multiply = 10			
			}
					
			if = {
				limit = {
					gdp >= 2000000
				}
				
				subtract = {
					desc = "DIPLOMATIC_ACCEPTANCE_HIGH_GDP"
					value = gdp
					subtract = 1000000
					divide = 1000000
					min = 1
					max = 100
				}
			}		

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = genial
						}											
					}
					value = 50
				}
				else_if = {
					limit = {
						OR = {					
							has_attitude = {
								who = scope:actor
								attitude = cooperative
							}
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}	
						}
					}
					value = 25
				}
				else_if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = domineering
							}	
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}							
						}
					}
					value = -1000
				}
				else = {
					value = -50
				}				
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"								
				if = {
					limit = {
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 0
				}
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 15
				}	
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 30
				}
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}	
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}
			}
			
			if = {
				limit = {
					scope:actor = {
						has_variable = pro_lobby_proposal_power_bloc_invite
						var:pro_lobby_opportunity_target ?= scope:target_country
					}
				}
				add = {
					desc = "LOBBY_OPPORTUNITY_BONUS"
					value = 50
				}
			}
			
			if = {
				limit = {
					scope:actor = {
						has_variable = anti_lobby_proposal_power_bloc_invite
						var:anti_lobby_opportunity_target ?= scope:target_country
					}
				}
				add = {
					desc = "LOBBY_OPPORTUNITY_BONUS"
					value = 50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_PRINCIPLE_SACRED_CIVICS"

				if = {
					limit = {
						AND = {
							scope:actor.power_bloc ?= {
								OR = {
									has_principle = principle:principle_sacred_civics_1
									has_principle = principle:principle_sacred_civics_2
									has_principle = principle:principle_sacred_civics_3
								}
							}
							scope:actor.religion = root.religion
						}
					}
					add = 20
				}
			}
		}
		
		will_propose = {  
			would_accept_diplomatic_action = {
				actor = scope:target_country
				type = join_power_bloc
			}
		}	
		
		propose_score = {
			value = 20
		}

		use_obligation_chance = {
			value = 75
		}
		
		owe_obligation_chance = {
			value = 0

			if = {
				limit = { 
					scope:target_country = {
						country_rank >= rank_value:major_power
					}
				}
				
				add = 50
			}
		}
		
		will_propose_even_if_not_accepted = { 
			OR = {
				has_attitude = {
					who = scope:target_country
					attitude = domineering
				}
				power_bloc ?= {
					leverage_advantage = {
						target = scope:target_country
						value >= 500
					}
				}				
			}
		}
	}
}

﻿request_recognition = {
	groups= {
		general
	}
	requires_approval = yes
	should_notify_third_parties = yes
	show_effect_in_tooltip = yes
	uses_random_approval = yes
	can_use_obligations = yes

	selectable = {
		has_journal_entry = je_earn_recognition
	}

	possible = {
		scope:target_country = {
			country_rank >= rank_value:great_power
		}
		custom_tooltip = {
			text = DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT
			scope:target_country.relations:root > relations_threshold:poor
		}		
		custom_tooltip = {
			text = "REQUEST_RECOGNITION_ON_COOLDOWN"
			NOT = {
				scope:target_country = {
					any_diplomatic_catalyst = {
						is_diplomatic_catalyst_type = catalyst_recognition_requested
						target = root
					}					
				}
			}
		}	
	}

	accept_effect = {
		change_relations = { country = scope:target_country value = 30 }
		custom_tooltip = {
			text = request_recognition_tt
			if = {
				limit = {
					has_variable = recognition_progress_var
				}
				change_variable = {
					name = recognition_progress_var
					add = 20
				}
			}
		}

		hidden_effect = {
			scope:target_country = {
				create_diplomatic_catalyst = {
					type = catalyst_recognition_requested
					target = root
				}		
			}
		}			
	}
	
	decline_effect = {
		change_relations = { country = scope:target_country value = -30 }
		hidden_effect = {
			scope:target_country = {
				create_diplomatic_catalyst = {
					type = catalyst_recognition_requested
					target = root
				}		
			}
		}	
	}

	ai = {
		evaluation_chance = {
			value = 0.25		
		}	
	
		accept_score = {
			value = 0

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 1
					max = 50
				}
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 1
					min = -50
				}
			}
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = genial
						}
					}
					value = 50
				}
				else_if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}	
							has_attitude = {
								who = scope:actor
								attitude = cooperative
							}
							has_attitude = {
								who = scope:actor
								attitude = protective
							}							
						}
					}
					value = 25
				}
				else_if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = domineering
							}
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}
						}
					}
					value = -1000
				}
				else = {
					value = -50
				}				
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:cordial
						"relations(scope:actor)" < relations_threshold:amicable
					}
					value = 10
				}				
				else_if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 25
				}
				else_if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -50
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -1000
				}
			}
			
			if = {
				limit = {
					has_diplomatic_pact = {
						who = scope:actor
						type = trade_agreement
					}
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_TRADE_AGREEMENT"
					value = 15
				}
			}	

			if = {
				limit = {
					has_diplomatic_pact = {
						who = scope:actor
						type = foreign_investment_rights
					}
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_FOREIGN_INVESTMENT_RIGHTS"
					value = 25
				}
			}			
			
			if = {
				limit = {
					has_diplomatic_pact = {
						who = scope:actor
						type = alliance
					}
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ALLIANCE"
					value = 50
				}
			}
			else_if = {
				limit = {
					has_diplomatic_pact = {
						who = scope:actor
						type = defensive_pact
					}
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_DEFENSIVE_PACT"
					value = 35
				}
			}			

			if = {
				limit = {
					"num_alliances_and_defensive_pacts_with_rivals(scope:actor)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ALLIED_TO_RIVALS"
					value = -1000
				}
			}	
			
			if = {
				limit = {
					exists = power_bloc
					exists = scope:actor.power_bloc			
				}
				if = {
					limit = {
						power_bloc = scope:actor.power_bloc
					}
					add = {
						desc = "DIPLOMATIC_ACCEPTANCE_SAME_POWER_BLOC"
						value = 25
					}					
				}
				else = {
					add = {
						desc = "DIPLOMATIC_ACCEPTANCE_DIFFERENT_POWER_BLOC"
						value = -25
					}					
				}				
			}			

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_PRINCIPLE_SACRED_CIVICS"

				if = {
					limit = {
						AND = {
							scope:actor.power_bloc ?= {
								OR = {
									has_principle = principle:principle_sacred_civics_1
									has_principle = principle:principle_sacred_civics_2
									has_principle = principle:principle_sacred_civics_3
								}
							}
							scope:actor.religion = root.religion
						}
					}
					add = 20
				}
			}			
		}
		propose_score = {
			value = 10
		}

		will_propose = {
			always = yes
		}
	}
}

﻿support_independence = {
	groups = {
		general
	}
	requires_approval = yes
	show_effect_in_tooltip = yes
	
	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}

	possible = {
		scope:target_country.overlord = {
			NOT = {
				has_diplomatic_pact = {
					type = alliance
					who = root
				}
			}
		}
		scope:target_country = {
			NOT = {
				play_participant_has_war_goal_of_type_against = {
					type = independence
					target = overlord
				}
				war_participant_has_war_goal_of_type_against = {
					type = independence
					target = overlord
				}
			}
		}
	}

	pact = {
		cost = 50
		is_two_sided_pact = yes
		has_junior_participant = yes
        auto_support_type = dp_independence
		auto_support_type = dp_increase_autonomy
		auto_support_type = dp_annex_subject
		
		relations_progress_per_day = 1.0  # At 100, +1 relations
		relations_improvement_max = 80
		
		second_modifier = {
			country_pact_leverage_generation_add = 200
		}

		requirement_to_maintain = {
			trigger = {
				has_diplomatic_relevance = scope:target_country
			}
		}
		
		requirement_to_maintain = {
			trigger = {
				scope:target_country = { is_subject = yes }
			}
		}		
		
		requirement_to_maintain = {
			trigger = {
				OR = {
					is_subject = no
					overlord = scope:target_country.overlord
					aggressive_diplomatic_plays_permitted = yes
				}					
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_HIGH_LIBERTY_DESIRE"
					OR = {
						is_subject = no
						NOT = { overlord = scope:target_country.overlord }
						liberty_desire >= define:NDiplomacy|WAR_GOAL_INCREASE_AUTONOMY_MIN_LIBERTY_DESIRE
					}					
				}
			}
		}			
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NO_SUBJECT_RELATION"
					NOT = {
						is_subject_of = scope:target_country
						scope:target_country = { is_subject_of = root }
					}				
				}
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT
					scope:target_country.relations:root > relations_threshold:poor
				}
			}

			show_about_to_break_warning = {
				scope:target_country.relations:root <= -17 # this is: poor + 3
				scope:target_country.relations_change_rate:root < 0
			}
		}

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_AT_PEACE"
					NOT = { has_war_with = scope:target_country }
				}
			}
		}
		
		requirement_to_maintain = {
			trigger = {
				country_rank >= scope:target_country.country_rank
			}
		}		

		manual_break_effect = {
			change_relations = { country = scope:target_country value = -30 }
			create_bidirectional_truce = { country = scope:target_country months = 12 }	
		}			
	}

	accept_effect = {
		add_overlord_lobby_appeasement_from_diplomacy = { 
			FIRST = scope:target_country
			SECOND = root
			PRO_AMOUNT = -2
			ANTI_AMOUNT = 2
			FACTOR = appeasement_independence_supported
		}			
	}
	
	ai = {
		check_acceptance_for_will_break = yes
		check_acceptance_for_will_propose = yes	
	
		evaluation_chance = {
			value = 0.1
			
			add = {
				value = country_rank
				multiply = 0.05
			}	
	
			# Rebellious subjects should very actively seek fellow subjects to rebel together with
			if = {
				limit = {	
					is_subject = yes
					has_attitude = {
						who = overlord
						attitude = rebellious
					}
				}
				add = 1.0
			}	
		}			

		# This is the acceptance score for the senior part of the support_independence (used for 'request_support_independence' action and checking AI in both directions)
		accept_score = {
			value = 0

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}		
			
			if = {
				limit = {
					scope:actor = { 
						is_subject = yes 
						overlord = root.overlord
					}
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_FELLOW_SUBJECT"
					value = 100
				}
			}				

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.75
					max = 30
				}
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.75
					min = -30
				}
			}
			
			if = {
				limit = {
					NOT = { is_country_type = unrecognized }
					scope:actor = { is_country_type = unrecognized }
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_UNRECOGNIZED"
					value = -25
				}
			}				

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = protective
						}
					}
					value = 40
				}
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = genial
						}
					}
					value = 30
				}
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}	
							has_attitude = {
								who = scope:actor
								attitude = cooperative
							}
							has_attitude = {
								who = scope:actor
								attitude = domineering
							}							
						}
					}
					value = 20
				}
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = cautious
						}
					}
					value = -50
				}
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}
							has_attitude = {
								who = scope:actor
								attitude = rebellious
							}
						}
					}
					value = -1000
				}
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE_TOWARDS_ACTOR_OVERLORD"
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor.overlord
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor.overlord
								attitude = rebellious
							}	
						}
					}
					value = 50
				}
				else_if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor.overlord
								attitude = belligerent
							}
							has_attitude = {
								who = scope:actor.overlord
								attitude = domineering
							}
							has_attitude = {
								who = scope:actor.overlord
								attitude = defiant
							}								
						}
					}
					value = 30
				}
				else = {
					value = -1000
				}				
			}				

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:cordial
						"relations(scope:actor)" < relations_threshold:amicable
					}
					value = 10
				}				
				else_if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 25
				}
				else_if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_PRINCIPLE_SACRED_CIVICS"

				if = {
					limit = {
						AND = {
							scope:actor.power_bloc ?= {
								OR = {
									has_principle = principle:principle_sacred_civics_1
									has_principle = principle:principle_sacred_civics_2
									has_principle = principle:principle_sacred_civics_3
								}
							}
							scope:actor.religion = root.religion
						}
					}
					add = 20
				}
			}			
		}

		# This is the acceptance score for the junior part of the support_independence (used for 'support_independence' action and checking AI in both directions)
		junior_accept_score = {
			value = 0

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}
			
			if = {
				limit = {
					scope:actor = { 
						is_subject = yes 
						overlord = root.overlord
					}
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_FELLOW_SUBJECT"
					value = 100
				}
			}			
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ARMY_STRENGTH"
				value = "scope:actor.ai_army_comparison(root)"
				min = -50
				max = 50
			}				

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					max = 20
				}
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					min = -20
				}
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE_TOWARDS_OWN_OVERLORD"
				if = {
					limit = {
						has_attitude = {
							who = overlord
							attitude = rebellious
						}
					}
					value = 50
				}
				else_if = {
					limit = {
						has_attitude = {
							who = overlord
							attitude = defiant
						}
					}
					value = 25
				}
				else_if = {
					limit = {
						has_attitude = {
							who = overlord
							attitude = loyal
						}
					}
					value = -1000
				}				
			}			

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = genial
						}
					}
					value = 30
				}
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}	
							has_attitude = {
								who = scope:actor
								attitude = cooperative
							}
							has_attitude = {
								who = scope:actor
								attitude = loyal
							}							
						}
					}
					value = 20
				}
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = cautious
						}
					}
					value = -50
				}
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = protective
							}
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = domineering
							}
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}
						}
					}
					value = -1000
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 20
				}
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_PRINCIPLE_SACRED_CIVICS"

				if = {
					limit = {
						AND = {
							scope:actor.power_bloc ?= {
								OR = {
									has_principle = principle:principle_sacred_civics_1
									has_principle = principle:principle_sacred_civics_2
									has_principle = principle:principle_sacred_civics_3
								}
							}
							scope:actor.religion = root.religion
						}
					}
					add = 20
				}
			}			
		}
	
		propose_score = {
			value = 10
			
			# Rebellious subjects should very actively seek fellow subjects to rebel together with
			if = {
				limit = {
					is_subject = yes
					scope:target_country = { 
						is_subject = yes 
						overlord = root.overlord
					}				
				}
				add = 100
			}		
		}

		propose_break_score = {
			value = 10
		}

		use_obligation_chance = {
			value = 0
		}

		owe_obligation_chance = {
			value = 0
		}
		
		will_propose_even_if_not_accepted = {	
			is_subject = yes
			scope:target_country = { # Ask high LD players if they want to rebel together
				is_ai = no
				is_subject = yes 
				overlord = root.overlord
			}
		}		
	}
}

request_support_independence = {
	groups = {
		general
	}
	requires_approval = yes
	show_effect_in_tooltip = yes
	
	selectable = {
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
		is_subject = yes
	}

	accept_effect = {}
	
	reverse_pact = support_independence

	ai = {
		check_acceptance_for_will_propose = yes
		
		evaluation_chance = {
			value = 0.0
			
			if = {
				limit = {
					has_attitude = {
						who = overlord
						attitude = defiant
					}	
				}
				add = 0.25
			}

			# Rebellious subjects should very actively seek fellow subjects to rebel together with
			if = {
				limit = {
					has_attitude = {
						who = overlord
						attitude = rebellious
					}
				}
				add = 1.0
			}		
		}		

		propose_score = {
			value = 10
			
			# Rebellious subjects should very actively seek fellow subjects to rebel together with
			if = {
				limit = {
					scope:target_country = { 
						is_subject = yes 
						overlord = root.overlord
					}				
				}
				add = 100
			}
		}

		propose_break_score = {
			value = 10
		}

		use_obligation_chance = {
			value = 25
		}

		owe_obligation_chance = {
			value = 25
		}
		
		will_propose_even_if_not_accepted = {
			scope:target_country = { # Ask high LD players if they want to rebel together
				is_ai = no
				is_subject = yes 
				overlord = root.overlord
			}
		}			
	}
}

﻿fund_lobbies = {
	groups= {
		general
	}
	requires_approval = no
	should_notify_third_parties = no

	unlocking_technologies = {
		central_banking
	}
	
	selectable = {
		has_dlc_feature = lobbies
		NOT = { is_country_type = decentralized }
		is_revolutionary = no
	}
	
	potential = {
		scope:target_country = {
			NOT = { is_country_type = decentralized }
			is_revolutionary = no
		}
	}
	
	accept_effect = {
		custom_tooltip = {
			text = fund_lobbies_increase_friendly_join_weight_effect
		}
		custom_tooltip = {
			text = fund_lobbies_decrease_hostile_join_weight_effect
		}
		custom_tooltip = {
			text = fund_lobbies_increase_rival_hostile_join_weight_effect
		}
		custom_tooltip = {
			text = fund_lobbies_decrease_rival_friendly_join_weight_effect
		}		
	}	
	
	pact = {	
		cost = 100
	
		is_two_sided_pact = no
		
		second_modifier = {
			country_lobby_leverage_generation_mult = 0.25
		}
		
		second_foreign_pro_country_lobby_member_modifier = {
			interest_group_pop_attraction_mult = 0.25
		}
		
		second_foreign_anti_country_lobby_member_modifier = {
			interest_group_pop_attraction_mult = -0.25
		}		
		
		income_transfer = 0.20
		second_country_gets_income_transfer = yes
		income_transfer_based_on_second_country = yes
		income_transfer_to_pops = {
			allow_discriminated = no
			upper_strata_pops = {
				value = 0.5
				if = {
					limit = {
						OR = {
							has_law = law_type:law_autocracy
							has_law = law_type:law_oligarchy
						}		
					}
					add = 0.5
				}
				else_if = {
					limit = {
						OR = {
							has_law = law_type:law_wealth_voting
							has_law = law_type:law_landed_voting
						}		
					}
					add = 0.25
				}				
				else_if = {
					limit = {
						has_law = law_type:law_anarchy
					}
					subtract = 0.25
				}	
				
				max = 1
				min = 0
			}
			middle_strata_pops = {
				value = 0.25
				
				if = {
					limit = {
						OR = {
							has_law = law_type:law_census_voting
							has_law = law_type:law_universal_suffrage
						}					
					}
					add = 0.25
				}	

				max = 1
				min = 0				
			}
			lower_strata_pops = {
				value = 0.0
				
				if = {
					limit = {
						OR = {
							has_law = law_type:law_universal_suffrage		
							has_law = law_type:law_anarchy
						}
					}
					add = 0.25
				}	

				max = 1
				min = 0				
			}
		}
		
		weekly_effect = {		
			scope:target_country = {
				if = {
					limit = {  
						NOT = {
							any_political_lobby = { 
								target = root
								OR = {
									is_political_lobby_type = lobby_pro_country
									is_political_lobby_type = lobby_pro_overlord
								}							
							}						
						}
					}		
					custom_tooltip = {
						text = fund_lobbies_weekly_create_lobby_effect
						create_diplomatic_catalyst = {
							type = catalyst_lobbies_funded
							target = root
						}						
					}				
				}
			}			
		} 
		
		requirement_to_maintain = {
			trigger = {
				has_diplomatic_relevance = scope:target_country
			}
		}

	 	requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT
					scope:target_country.relations:root > relations_threshold:poor
				}		
			}
			
			show_about_to_break_warning = {
				scope:target_country.relations:root <= -17 # this is: poor + 3
				scope:target_country.relations_change_rate:root < 0
			}					
		}	

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_NOT_DECENTRALIZED"
					NOT = { is_country_type = decentralized }
					scope:target_country = {
						NOT = { is_country_type = decentralized }
					}				
				}
			}
		}				
	
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_AT_PEACE"
					NOT = { has_war_with = scope:target_country }
				}			
			}
		}		

		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "EQUAL_OR_BETTER_RANK_THAN_TARGET"
					country_rank >= scope:target_country.country_rank
				}	

				
			}
		}

		requirement_to_maintain = {
			trigger = {
				in_default = no
			}
		}			
	}
	
	ai = {
		max_influence_spending_fraction = 0.20
		
		evaluation_chance = {
			value = 0.1
			
			add = {
				value = country_rank
				multiply = 0.05
			}			
		}		
	
		propose_score = {
			value = 10
		}
	
		will_propose = { 
			scaled_debt <= 0
			is_at_war = no
			weekly_net_fixed_income > 0	
			has_attitude = {
				who = scope:target_country
				attitude = protective
			}
			OR = {
				num_income_transfer_pacts < 1
				AND = {
					num_income_transfer_pacts < 2
					income >= 200000
				}
				AND = {
					num_income_transfer_pacts < 3
					income >= 400000
				}				
			}
			
			OR = {
				root = {
					owes_obligation_to = scope:target_country			
				}	
				NOT = { 
					scope:target_country = {
						owes_obligation_to = root			
					}						
				}
				AND = {
					is_at_war = no
					scope:target_country = { is_at_war = yes }
				}			
			}		
			# We want to have at least five times their income, and at least 50k income in general
			OR = {
				AND = {
					income >= 50000
					weekly_net_fixed_income >= 4000
					scope:target_country.income <= 10000
				}
				AND = {
					income >= 75000
					weekly_net_fixed_income >= 6000
					scope:target_country.income <= 15000
				}				
				AND = {
					income >= 100000
					weekly_net_fixed_income >= 8000
					scope:target_country.income <= 20000
				}
				AND = {
					income >= 125000
					weekly_net_fixed_income >= 10000
					scope:target_country.income <= 25000
				}
				AND = {
					income >= 150000
					weekly_net_fixed_income >= 12000
					scope:target_country.income <= 30000
				}	
				AND = {
					income >= 175000
					weekly_net_fixed_income >= 14000
					scope:target_country.income <= 35000
				}
				AND = {
					income >= 200000
					weekly_net_fixed_income >= 16000
					scope:target_country.income <= 40000
				}
				AND = {
					income >= 225000
					weekly_net_fixed_income >= 18000
					scope:target_country.income <= 45000
				}	
				AND = {
					income >= 250000
					weekly_net_fixed_income >= 20000
					scope:target_country.income <= 50000
				}					
			}			
		}
		
		will_break = { 
			OR = {		
				scaled_debt > 0.25
				AND = {
					scaled_debt > 0
					OR = {
						weekly_net_fixed_income < 0	
						is_at_war = yes
					}				
				}				
				NOT = {
					has_attitude = {
						who = scope:target_country
						attitude = protective
					}				
				}
				num_income_transfer_pacts > 3
				AND = {
					num_income_transfer_pacts > 1
					OR = {
						weekly_net_fixed_income < -10000	
						income < 300000
					}			
				}
				AND = {
					num_income_transfer_pacts > 2
					OR = {
						weekly_net_fixed_income < -5000					
						income < 500000
					}
				}				
				NOR = {
					root = {
						owes_obligation_to = scope:target_country			
					}	
					NOT = { 
						scope:target_country = {
							owes_obligation_to = root			
						}						
					}
					AND = {
						is_at_war = no
						scope:target_country = { is_at_war = yes }
					}			
				}							
				# Threshold for breaking off a bankroll is higher than for starting it
				# We also don't look at weekly_net_fixed_income here since starting a bankroll changes it
				NOR = {
					AND = {
						income >= 40000
						scope:target_country.income <= 12500
					}				
					AND = {
						income >= 50000
						scope:target_country.income <= 15000
					}
					AND = {
						income >= 75000
						scope:target_country.income <= 20000
					}				
					AND = {
						income >= 100000
						scope:target_country.income <= 25000
					}
					AND = {
						income >= 125000
						scope:target_country.income <= 30000
					}
					AND = {
						income >= 150000
						scope:target_country.income <= 35000
					}	
					AND = {
						income >= 175000
						scope:target_country.income <= 40000
					}
					AND = {
						income >= 200000
						scope:target_country.income <= 45000
					}
					AND = {
						income >= 225000
						scope:target_country.income <= 50000
					}
					AND = {
						income >= 250000
						scope:target_country.income <= 55000
					}					
				}						
			}
		}			
	}
}


﻿force_become_subject = {
	groups= {
		power_bloc_leader
	}
	show_in_lens = no

	texture = "gfx/interface/icons/diplomatic_action_icons/force_become_subject.dds"
	
	selectable = {
		is_power_bloc_leader = yes
		power_bloc ?= {
			modifier:power_bloc_leader_can_make_subjects_bool = yes
		}		
	}
	
	potential = {
		power_bloc ?= {
			scope:target_country.power_bloc ?= this
		}
	}
	
	possible = {
		scope:target_country = { 
			is_subject = no
			country_rank < rank_value:unrecognized_major_power 
			is_diplomatic_play_committed_participant = no
		}
	
		power_bloc = {
			current_cohesion_percentage >= 0.5
		}
		scope:target_country = {
			tenure_in_current_power_bloc_years >= 5
		}
		prestige >= {
			value = scope:target_country.prestige
			multiply = 5
		}
	}
	
	accept_effect = {
		if = {
			limit = { is_country_type = unrecognized }
			create_diplomatic_pact = {
				country = scope:target_country
				type = tributary
			}						
		}
		else = {
			create_diplomatic_pact = {
				country = scope:target_country
				type = protectorate
			}			
		}
		create_unidirectional_truce = { country = scope:target_country months = 60 }
		hidden_effect = { scope:target_country = { add_liberty_desire = 30 } } # Starts at a higher LD level
		
		power_bloc = {
			add_cohesion_percent = {
				value = scaled_cohesion_cost_subjugation
			}
		}
	}
	
	ai = {
		evaluation_chance = {
			value = 0.025 # AI shouldn't use this very often
		}
		
		will_propose = {
			power_bloc ?= { current_cohesion_percentage >= 0.6 }		
			OR = {
				has_attitude = {
					who = scope:target_country
					attitude = domineering
				}
				power_bloc ?= { current_cohesion_percentage >= 0.8 }						
			}
			OR = {
				AND = {
					has_attitude = {
						who = scope:target_country
						attitude = domineering
					}		
					power_bloc ?= { current_cohesion_percentage >= 0.8 }
				}
				scope:target_country = {
					is_country_type = unrecognized
				}
			}		
		}

		propose_score = {								
			value = 10			
		}
	}
}

﻿force_regime_change = {
	groups= {
		power_bloc_leader
	}
	show_in_lens = no

	texture = "gfx/interface/icons/diplomatic_action_icons/force_regime_change.dds"
	
	selectable = {
		is_power_bloc_leader = yes
		power_bloc ?= {
			modifier:power_bloc_leader_can_regime_change_bool = yes
		}		
	}	
	
	potential = {
		power_bloc ?= {
			scope:target_country.power_bloc ?= this
		}
	}
	
	possible = {
		custom_tooltip = {
			text = "FORCE_REGIME_CHANGE_GOV_PRINCIPLES_DIST_POWER_PROGRESSIVENESS_DIFFERENCE"
			100 <= {
				add = {
					add = active_law:lawgroup_governance_principles.type.progressiveness
					subtract = scope:target_country.active_law:lawgroup_governance_principles.type.progressiveness
					abs = yes
				}
				add = {
					add = active_law:lawgroup_distribution_of_power.type.progressiveness
					subtract = scope:target_country.active_law:lawgroup_distribution_of_power.type.progressiveness
					abs = yes
				}
			}
		}	
	
		power_bloc = {
			current_cohesion_percentage >= 0.5
		}
		scope:target_country = {
			tenure_in_current_power_bloc_years >= 5
		}
		prestige >= {
			value = scope:target_country.prestige
			multiply = 3
		}
	}
	
	accept_effect = {
		regime_change = scope:target_country
		scope:target_country = {
			add_modifier = {
				name = installed_regime
				months = normal_modifier_time
				multiplier = 0.2
			}
		}
		
		power_bloc = {
			add_cohesion_percent = scaled_cohesion_cost
		}
	}
	
	ai = {
		evaluation_chance = {
			value = 0.025 # AI shouldn't use this very often
		}
		
		will_propose = {
			power_bloc = { current_cohesion_percentage >= 0.75 }
			"ai_ideological_opinion(scope:target_country)" <= -50			
			OR = {
				"ai_ideological_opinion(scope:target_country)" <= -100
				has_attitude = {
					who = scope:target_country
					attitude = domineering
				}					
				AND = {
					has_radical_leftist_government = no			
					scope:target_country = {
						has_radical_leftist_government = yes
					}
				}
				AND = {
					has_radical_leftist_economy = no			
					scope:target_country = {
						has_radical_leftist_economy = yes
					}
				}		
			}
		}

		propose_score = {								
			value = 10

			if = {
				limit = {
					OR = {					
						AND = {
							has_radical_leftist_government = no			
							scope:target_country = {
								has_radical_leftist_government = yes
							}
						}
						AND = {
							has_radical_leftist_economy = no			
							scope:target_country = {
								has_radical_leftist_economy = yes
							}
						}				
					}
				}
				add = 100
			}				
		}
	}
}

﻿force_state_religion = {
	groups= {
		power_bloc_leader
	}
	show_in_lens = no

	texture = "gfx/interface/icons/diplomatic_action_icons/force_state_religion.dds"
	
	selectable = {
		is_power_bloc_leader = yes
		power_bloc ?= {
			modifier:power_bloc_leader_can_force_state_religion_bool = yes
		}		
	}
	
	potential = {
		power_bloc ?= {
			scope:target_country.power_bloc ?= this
		}
	}
	
	possible = {
		scope:target_country = {
			NOT = { religion = root.religion }
		}

		power_bloc = {
			current_cohesion_percentage >= 0.5
		}
		scope:target_country = {
			tenure_in_current_power_bloc_years >= 5
		}
		prestige >= {
			value = scope:target_country.prestige
			multiply = 3
		}
	}
	
	accept_effect = {
		scope:target_country = {
			set_state_religion = root.religion
			capital = {
				convert_population = {
					target = root.religion
					value = 0.05
				}
			}
			every_scope_state = {
				limit = { is_capital = no }
				convert_population = {
					target = root.religion
					value = 0.02
				}				
			}
		}
		
		power_bloc = {
			add_cohesion_percent = scaled_cohesion_cost
		}
	}
	
	ai = {
		evaluation_chance = {
			value = 0.025 # AI shouldn't use this very often
		}
		
		will_propose = {
			power_bloc = { current_cohesion_percentage >= 0.75 }
			OR = {
				has_attitude = {
					who = scope:target_country
					attitude = domineering
				}
				AND = {
					religion = { has_discrimination_trait = christian }
					NOT = { scope:target_country = { religion = { has_discrimination_trait = christian } } }
				}
				AND = {
					religion = { has_discrimination_trait = muslim }
					NOT = { scope:target_country = { religion = { has_discrimination_trait = muslim } } }
				}
				AND = {
					religion = { has_discrimination_trait = jewish }
					NOT = { scope:target_country = { religion = { has_discrimination_trait = jewish } } }
				}
				AND = {
					religion = { has_discrimination_trait = eastern }
					NOT = { scope:target_country = { religion = { has_discrimination_trait = eastern } } }
				}
				AND = {
					religion = { has_discrimination_trait = buddhist }
					NOT = { scope:target_country = { religion = { has_discrimination_trait = buddhist } } }
				}				
				AND = {
					religion = { has_discrimination_trait = animist }
					NOT = { scope:target_country = { religion = { has_discrimination_trait = animist } } }
				}										
			}
		}

		propose_score = {								
			value = 10			
		}
	}
}

﻿raise_payments = {
	requires_approval = no
	groups= { overlord subject } # this is a subject action only for the sake of breaking it if LD is high enough
	
	texture = "gfx/interface/icons/diplomatic_action_icons/raise_payments.dds"
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/diplomatic_action_subjects_01_raise_payments_benign"
	
	selectable = {
		has_dlc_feature = subject_and_bloc_actions
	}

	potential = {
		any_scope_diplomatic_pact = {
			"diplomatic_pact_other_country(root)" = scope:target_country
			income_transfer > 0
		}
		OR = {
			scope:target_country = { 
				is_subject_of = root 
				NOT = { is_diplomatic_play_enemy_of = root }
			}
			AND = {	# only valid for subject countries if a pact is already established
				is_subject_of = scope:target_country
				has_diplomatic_pact = { who = scope:target_country type = raise_payments }
			}
		}
	}
	
	possible = {
		scope:target_country = {
			liberty_desire < 75
		}
		scope:target_country = {
			in_default = no
		}
		NOT = {
			has_diplomatic_pact = {
				who = scope:target_country
				type = decrease_payments
			}
		}
	}

	pact = {	
		recipient_pays_maintenance = no
		relations_progress_per_day = -1
		
		second_modifier = {
			country_overlord_income_transfer_mult = 1
			country_liberty_desire_decrease_mult = -0.25
			country_liberty_desire_increase_mult = 0.25
		}
	    
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_AT_PEACE"
					NOT = { has_war_with = scope:target_country }
				}			
			}
		}
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_SUBJECT_WITH_INCOME_TRANSFER"
					any_scope_diplomatic_pact = {
						"diplomatic_pact_other_country(root)" = scope:target_country
						income_transfer > 0
					}
				}			
			}
		}
	}
	
	ai = {
		max_influence_spending_fraction = 0.1
		
		evaluation_chance = {
			value = 0.25		
		}		
	
		propose_score = {
			value = 10
		}
	
		will_propose = {
			"relations(scope:target_country)" < relations_threshold:cordial
			has_attitude = {
				who = scope:target_country
				attitude = domineering
			}		
			OR = {
				has_strategy = ai_strategy_economic_imperialism
				has_strategy = ai_strategy_territorial_expansion
				has_strategy = ai_strategy_world_revolution
			}
			scope:target_country = { "potential_diplomatic_play_power_ratio(root)" <= 0.5 }
		}
		
		will_break = {
			OR = {
				has_attitude = {
					who = scope:target_country
					attitude = protective
				}	
				AND = {
					scope:target_country = { liberty_desire >= 50 }
					"relations(scope:target_country)" >= relations_threshold:friendly	
					NOR = {
						has_strategy = ai_strategy_economic_imperialism
						has_strategy = ai_strategy_territorial_expansion
						has_strategy = ai_strategy_world_revolution
					}					
				}				
			}	
		}		
	}
}


﻿decrease_payments = {
	requires_approval = no
	groups= { overlord }
	
	texture = "gfx/interface/icons/diplomatic_action_icons/decrease_payments.dds"
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/diplomatic_action_subjects_02_decrease_payments_benign"
	selectable = {
		has_dlc_feature = subject_and_bloc_actions
	}
	
	potential = {
		any_scope_diplomatic_pact = {
			"diplomatic_pact_other_country(root)" = scope:target_country
			income_transfer > 0
		}
		scope:target_country = {
			NOT = { is_diplomatic_play_enemy_of = root }
		}
	}
	
	possible = {
		NOT = {
			has_diplomatic_pact = {
				who = scope:target_country
				type = raise_payments
			}
		}
	}
	
	pact = {	
		cost = 0
		forced_duration = 12
		
		second_modifier = {
			country_overlord_income_transfer_mult = -0.5
			country_liberty_desire_increase_mult = -0.33
		}

		manual_break_effect = {
			scope:target_country = {
				add_liberty_desire = 10
			}
		}
	    
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_AT_PEACE"
					NOT = { has_war_with = scope:target_country }
				}			
			}
		}
		
		requirement_to_maintain = {
			trigger = {
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_SUBJECT_WITH_INCOME_TRANSFER"
					any_scope_diplomatic_pact = {
						"diplomatic_pact_other_country(root)" = scope:target_country
						income_transfer > 0
					}
				}			
			}
		}
	}
	
	ai = {
		evaluation_chance = {
			value = 0.25		
		}			
	
		propose_score = {
			value = 10
		}		
	
		will_propose = {
			"relations(scope:target_country)" >= relations_threshold:friendly
			has_attitude = {
				who = scope:target_country
				attitude = protective
			}	
			scope:target_country = { liberty_desire >= 25 }
			OR = {
				has_strategy = ai_strategy_maintain_power_balance
				has_strategy = ai_strategy_armed_isolationism
				has_strategy = ai_strategy_socialism_in_one_country
				has_strategy = ai_strategy_anti_imperialism
			}		
		}
		
		will_break = {
			OR = {
				has_attitude = {
					who = scope:target_country
					attitude = domineering
				}		
				AND = {
					scope:target_country = { liberty_desire < 50 }
					OR = {
						"relations(scope:target_country)" < relations_threshold:amicable	
						NOR = {
							has_strategy = ai_strategy_maintain_power_balance
							has_strategy = ai_strategy_armed_isolationism
							has_strategy = ai_strategy_socialism_in_one_country
							has_strategy = ai_strategy_anti_imperialism
						}					
					}					
				}
			}	
		}		
	}
}


﻿exempt_from_service = {
	requires_approval = no
	groups= { 
		overlord 
		power_bloc_leader
	}
	
	texture = "gfx/interface/icons/diplomatic_action_icons/exempt_from_service.dds"
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/diplomatic_action_subjects_03_exempt_from_service_benign"
	selectable = {
		has_dlc_feature = subject_and_bloc_actions
	}
	
	potential = {
		scope:target_country = {
			is_forced_to_join_plays = root
			NOT = { is_diplomatic_play_enemy_of = root }
		}
	}
	
	possible = {
		always = yes
	}

	accept_effect = {
		if = {
			limit = {
				scope:target_country = {
					is_subject_of = root
				}
			}
			custom_tooltip = {
				text = "DIPLOMATIC_PACT_REDUCED_LIBERTY_DESIRE"
			}
		}
	}
	
	pact = {	
		cost = 0
		forced_duration = 12
	
		# is_two_sided_pact = no
		# show_in_outliner = no
		# can_be_used_in_sway_offers = no
		
		exempt_from_service = yes
		
		second_country_gets_income_transfer = no
		income_transfer_based_on_second_country = no
		
		actor_can_break = {
			always = yes
		}

		requirement_to_maintain = {
			trigger = {
				scope:target_country = {
					OR = {
						is_subject_of = root
						power_bloc.power_bloc_leader ?= root
					}
				}
			}
		}
		
		manual_break_effect = {
			scope:target_country = {
				if = {
					limit = { is_subject_of = root }
					add_liberty_desire = 10
				}
			}
		}
	}
	
	ai = {
		evaluation_chance = {
			value = 0.25		
		}				
	
		propose_score = {
			value = 10
		}
	
		will_propose = {
			has_attitude = {
				who = scope:target_country
				attitude = protective
			}	
			scope:target_country = { liberty_desire >= 25 }
			OR = {
				has_strategy = ai_strategy_colonial_expansion
				has_strategy = ai_strategy_socialism_in_one_country
				has_strategy = ai_strategy_anti_imperialism
			}	
			scope:target_country = { 
				OR = {
					"scope:actor.ai_army_comparison(root)" <= 0.2
					"potential_diplomatic_play_power_ratio(root)" >= 0.75
				}
			}
		}
		
		will_break = {
			OR = {
				has_attitude = {
					who = scope:target_country
					attitude = domineering
				}		
				AND = {
					scope:target_country = { liberty_desire < 50 }	
					NOR = {
						has_strategy = ai_strategy_colonial_expansion
						has_strategy = ai_strategy_socialism_in_one_country
						has_strategy = ai_strategy_anti_imperialism
					}										
				}
				scope:target_country = { 
					"scope:actor.ai_army_comparison(root)" >= 0.4
					"potential_diplomatic_play_power_ratio(root)" <= 0.5
				}				
			}	
		}		
	}
}


﻿da_appoint_colonial_governor = {
	groups= { overlord }
	
	requires_approval = no
	should_notify_third_parties = yes
	show_effect_in_tooltip = yes

	texture = "gfx/interface/icons/diplomatic_action_icons/da_appoint_colonial_governor.dds"
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/diplomatic_action_subjects_04_appoint_governor_benign"
	selectable = {
		has_dlc_feature = subject_and_bloc_actions
	}
	
	potential = {
		scope:target_country = {
			NOT = { has_variable = gubernatorial_candidate }
			NOT = { is_diplomatic_play_enemy_of = root }
		}
	}
	
	possible = {
		custom_tooltip = {
			text = "APPOINT_COLONIAL_GOVERNOR_ON_COOLDOWN"
			scope:target_country = {
				NOR = { 
					has_variable = gubernatorial_candidate 
					has_variable = gubernatorial_candidate_timed
				}
			}
		}
		is_revolutionary = no
		scope:target_country = {
			is_revolutionary = no
			OR = {	# don't appoint colonial governor monarchies
				has_law = law_type:law_presidential_republic
				has_law = law_type:law_parliamentary_republic
			}
		}
		OR = {
			AND = {
				OR = {
					is_country_type = recognized
					is_country_type = colonial
				}
				scope:target_country = {
					is_country_type = unrecognized
				}
			}
			AND = {
				OR = {
					is_country_type = recognized
					is_country_type = colonial
				}
				scope:target_country = {
					OR = {
						is_country_type = recognized
						is_country_type = colonial
					}
					OR = {
						is_subject_type = subject_type_puppet
						is_subject_type = subject_type_dominion
						is_subject_type = subject_type_vassal
					}
				}
			}
			AND = {
				is_country_type = unrecognized
				scope:target_country = {
					is_country_type = unrecognized
					OR = {
						is_subject_type = subject_type_puppet
						is_subject_type = subject_type_dominion
						is_subject_type = subject_type_vassal
					}
				}
			}
		}
	}

	accept_effect = {
		scope:target_country = {
			set_variable = gubernatorial_candidate
			set_variable = {
				name = gubernatorial_candidate_timed
				months = 61
			}
		}
		trigger_event = { id = subject_interactions.1 popup = yes }
	}
	
	ai = {
		evaluation_chance = {
			value = 0.25		
		}		
	
		propose_score = {
			value = 10
		}
	
		will_propose = {
			"ai_ideological_opinion(scope:target_country)" <= -25
			OR = {
				scope:target_country = { liberty_desire < 25 }
				has_attitude = {
					who = scope:target_country
					attitude = domineering
				}						
			}
			OR = {
				has_strategy = ai_strategy_maintain_power_balance
				has_strategy = ai_strategy_anti_imperialism
				has_strategy = ai_strategy_world_revolution
			}		
		}				
	}
}

﻿grant_own_market = {
	requires_approval = no
	groups= {
		overlord
		power_bloc_leader
	}
	
	texture = "gfx/interface/icons/diplomatic_action_icons/grant_market_independence.dds"
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/diplomatic_action_subjects_05_grant_own_market_benign"

	potential = {
		scope:target_country = {
			market = prev.market
			NOT = { is_diplomatic_play_enemy_of = root }
		}
	}
	
	possible = {
		NOT = { market.owner = scope:target_country }
		OR = {
			AND = { # the target controls the market and the requester is independent
				scope:target_country = {
					is_subject = no
				}
				market.owner = root
			}
			scope:target_country = {
				is_direct_subject_of = root
			}
		}
	}
	
	pact = {
		cost = 0
		forced_duration = 12
		
		market_owner = second_country
		
		requirement_to_maintain = {
			trigger = {
				scope:target_country = {
					OR = {
						is_direct_subject_of = root
						power_bloc.power_bloc_leader ?= root
					}
				}
			}
		}
		
		actor_can_break = {
			always = yes
		}
		
		manual_break_effect = {
			scope:target_country = {
				if = {
					limit = {
						is_subject_of = root
					}

					add_liberty_desire = 25
				}
			}
		}
	}
	
	accept_effect = {
		if = {
			limit = {
				"scope:target_country.economic_dependence(root)" > 1
				scope:target_country.capital = {
					is_isolated_from_market = no
				}
				scope:target_country = {
					is_subject_of = root
				}
			}
			
			custom_tooltip = { text = grant_own_market_increase_liberty_desire_effect }
			scope:target_country = {
				add_liberty_desire = {
					add = "scope:target_country.economic_dependence(root)"
					subtract = 1
					multiply = 40
					add = 10
				}
			}
		}
		else_if = {
			limit = {
				"scope:target_country.economic_dependence(root)" < 1
				scope:target_country = {
					is_subject_of = root
				}
			}
			
			custom_tooltip = { text = grant_own_market_decrease_liberty_desire_effect }			
			scope:target_country = {
				add_liberty_desire = {
					add = 1
					subtract = "scope:target_country.economic_dependence(root)"
					multiply = -15
					add = -5
				}
			}				
		}		
	}
	
	ai = {
		evaluation_chance = {
			value = 0.25		
		}		
	
		propose_score = { 
			value = 100
		}
	
		will_propose = {
			OR = {
				supply_network_strength < 0.5
				scope:target_country.capital = { is_isolated_from_market = yes }
			}						
		}
		
		will_break = {
			OR = {
				is_adjacent_to_country = scope:target_country
				AND = {
					supply_network_strength >= 0.75
					has_port = yes
					scope:target_country = { has_port = yes }
				}
			}			
		}		
	}
}


﻿da_decrease_autonomy = {
	groups= {
		overlord
	}
	requires_approval = no
	show_effect_in_tooltip = yes
	is_hostile = yes

	texture = "gfx/interface/icons/diplomatic_action_icons/da_decrease_autonomy.dds"
	confirmation_sound = "event:/SFX/UI/SubjectInteractions/subject_button_small_autonomy_decreased"

	potential = {
		scope:target_country = {
			is_subject_of = root
			can_decrease_autonomy = yes
		}
	}
	
	possible = {
		scope:target_country = {
			can_decrease_autonomy = yes
			liberty_desire < 25
			NOT = { is_diplomatic_play_enemy_of = root }
		}
		
		OR = {
			NOT = {
				scope:target_country = { is_subject_type = subject_type_personal_union }
			} 
			has_technology_researched = nationalism
		}		

		OR = {
			NOT = {
				scope:target_country = { has_government_type = gov_chartered_company }
			} 
			has_technology_researched = civilizing_mission
		}
		
		custom_tooltip = {
			text = "CHANGE_AUTONOMY_ON_COOLDOWN_OVERLORD"
			NOT = {
				scope:target_country = {
					any_diplomatic_catalyst = {
						is_diplomatic_catalyst_type = catalyst_autonomy_change_imposed
						target = root
					}					
				}
			}
		}
	}

	accept_effect = {
		scope:target_country = {
			decrease_autonomy = yes
			add_liberty_desire = 50
		}
		create_unidirectional_truce = { country = scope:target_country months = 60 }
		custom_tooltip = {
			text = "ADD_LIBERTY_DESIRE_TO_ALL_SUBJECTS"
			every_subject_or_below = {
				limit = {
					is_direct_subject_of = root
					NOT = { this = scope:target_country }
				}
				add_liberty_desire = 10 #If you change this value, also update the loc string ADD_LIBERTY_DESIRE_TO_ALL_SUBJECTS accordingly
			}
		}
		hidden_effect = {
			scope:target_country = {
				create_diplomatic_catalyst = {
					type = catalyst_autonomy_change_imposed
					target = root
				}		
			}
		}		
	}

	
	ai = {	
		evaluation_chance = {
			value = 0.25		
		}		
	
		propose_score = {
			value = 100
		}
	
		will_propose = {
			OR = {
				has_attitude = {
					who = scope:target_country
					attitude = domineering
				}	
				AND = {
					NOT = { has_strategy = ai_strategy_anti_imperialism	}			
					scope:target_country = { liberty_desire < 10 }
				}
			}	
			# Don't decrease autonomy of strong subjects that might end up getting very high LD
			NOR = {
				AND = {
					scope:target_country = {
						OR = {
							is_subject_type = subject_type_dominion
							is_subject_type = subject_type_personal_union
						}	
					}
					prestige < {
						add = scope:target_country.prestige
						multiply = 4
					}						
				}			
				AND = {
					scope:target_country = {
						OR = {
							is_subject_type = subject_type_protectorate
							is_subject_type = subject_type_tributary
						}	
					}
					prestige < {
						add = scope:target_country.prestige
						multiply = 3
					}						
				}
			}			
			scope:target_country = { "potential_diplomatic_play_power_ratio(root)" <= 1.0 }
		}	
	}
}


﻿da_increase_autonomy_of_subject = {
	groups = {
		overlord
	}
	requires_approval = no
	show_effect_in_tooltip = yes
	
	texture = "gfx/interface/icons/diplomatic_action_icons/da_increase_autonomy.dds"
	confirmation_sound = "event:/SFX/UI/SubjectInteractions/subject_button_small_autonomy_increased"

	potential = {
		scope:target_country = {
			is_subject_of = root
			can_increase_autonomy = yes
		}
	}

	possible = {
		scope:target_country = {
			can_increase_autonomy = yes
			NOT = { is_diplomatic_play_enemy_of = root }			
		}	
	
		OR = {
			NOT = {
				scope:target_country = { has_government_type = gov_chartered_company }
			} 
			has_technology_researched = civilizing_mission
		}
		
		OR = {
			NOT = {
				scope:target_country = { is_subject_type = subject_type_personal_union }
			} 
			has_technology_researched = nationalism
		}				
		
		custom_tooltip = {
			text = "CHANGE_AUTONOMY_ON_COOLDOWN_OVERLORD"
			NOT = {
				scope:target_country = {
					any_diplomatic_catalyst = {
						is_diplomatic_catalyst_type = catalyst_autonomy_change_imposed
						target = root
					}
				}
			}
		}		
	}

	accept_effect = {
		scope:target_country = {
			increase_autonomy = yes	
			add_liberty_desire = -30			
		}
		create_unidirectional_truce = { country = scope:target_country months = 60 }
		hidden_effect = {
			scope:target_country = {
				create_diplomatic_catalyst = {
					type = catalyst_autonomy_change_imposed
					target = root
				}		
			}
		}		
	}
	
	ai = {
		evaluation_chance = {
			value = 0.25		
		}	
	
		propose_score = {
			value = 10
		}
	
		will_propose = {
			scope:target_country = {
				liberty_desire >= 75
			}
			OR = {	
				AND = {
					"relations(scope:target_country)" >= relations_threshold:friendly
					has_attitude = {
						who = scope:target_country
						attitude = protective
					}	
					OR = {
						has_strategy = ai_strategy_anti_imperialism
						has_strategy = ai_strategy_maintain_power_balance
					}
				}				
				scope:target_country = { "potential_diplomatic_play_power_ratio(root)" >= 0.75 }
			}					
		}	
	}
}

da_increase_autonomy_of_self = {
	groups = {
		subject
	}
	requires_approval = yes
	show_effect_in_tooltip = yes
	can_use_obligations = yes
	uses_random_approval = yes

	texture = "gfx/interface/icons/diplomatic_action_icons/da_increase_autonomy.dds"
	
	potential = {
		is_subject = yes
		can_increase_autonomy = yes
	}

	possible = {
		scope:target_country = {
			NOT = {
				is_diplomatic_play_enemy_of = root
			}
		}
		liberty_desire >= 75
		can_increase_autonomy = yes
		
		OR = {
			NOT = {
				has_government_type = gov_chartered_company
			} 
			has_technology_researched = civilizing_mission
		}

		OR = {
			NOT = {
				is_subject_type = subject_type_personal_union
			} 
			has_technology_researched = nationalism
		}				
		
		custom_tooltip = {
			text = "REQUEST_AUTONOMY_ON_COOLDOWN"
			NOT = {
				scope:target_country = {
					any_diplomatic_catalyst = {
						is_diplomatic_catalyst_type = catalyst_autonomy_increase_requested
						target = root
					}
				}
			}		
		}
		custom_tooltip = {
			text = "CHANGE_AUTONOMY_ON_COOLDOWN_SUBJECT"
			NOT = {
				scope:target_country = {
					any_diplomatic_catalyst = {
						is_diplomatic_catalyst_type = catalyst_autonomy_change_imposed
						target = scope:target_country
					}					
				}
			}
		}			
	}

	accept_effect = {
		increase_autonomy = yes				
		add_liberty_desire = -30
		create_bidirectional_truce = { country = scope:target_country months = 60 }
		scope:target_country = { change_relations = { country = root value = -20 } }
		hidden_effect = {
			scope:target_country = {
				create_diplomatic_catalyst = {
					type = catalyst_autonomy_increase_requested
					target = root
				}		
			}
			create_diplomatic_catalyst = {
				type = catalyst_autonomy_change_imposed
				target = scope:target_country
			}					
		}		
	}
	
	decline_effect = {
		add_liberty_desire = 10
		scope:target_country = { change_relations = { country = root value = -30 } }
		hidden_effect = {
			scope:target_country = {
				create_diplomatic_catalyst = {
					type = catalyst_autonomy_increase_requested
					target = root
				}		
			}
			create_diplomatic_catalyst = {
				type = catalyst_autonomy_increase_denied
				target = scope:target_country
			}				
		}
	}
	
	ai = {
		evaluation_chance = {
			value = 0.25		
		}
	
		accept_score = {
			value = 0
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}		

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					max = 25
				}					
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					min = -25
				}					
			}						
							
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = protective
						}	
					}
					value = 50
				}				
				else_if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = domineering
						}	
					}
					value = -50
				}							
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_CHANCE_TO_WIN_DIPLOMATIC_PLAY"
				value = "scope:actor.potential_diplomatic_play_power_ratio(root)"	
				subtract = 0.5
				multiply = 50
				max = 100
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_LIBERTY_DESIRE"
				value = "scope:actor.liberty_desire"
				subtract = 75
				multiply = 2
				min = -50
				max = 50
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"		
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}	
				else_if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
					}
					value = 25
				}					
				else_if = {
					limit = {
						"relations(scope:actor)" >=  relations_threshold:cordial
					}
					value = 10
				}
				else_if = {
					limit = {
						"relations(scope:actor)" > relations_threshold:poor
					}
					value = -25
				}					
				else = {
					value = -50
				}				
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}	
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}					
			}					
		}
		
		propose_score = {
			value = 100
		}
	
		will_propose = {
			OR = {
				has_strategy = ai_strategy_subject_strengthen_self
				has_strategy = ai_strategy_subject_break_free
			}
		}	
		
		will_propose_even_if_not_accepted = {
			always = yes
		}		
	}
}

﻿da_support_regime = {
	groups= {
		overlord
	}
	requires_approval = no
	should_notify_third_parties = yes
	show_effect_in_tooltip = yes
	
	texture = "gfx/interface/icons/diplomatic_action_icons/support_regime.dds"
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/diplomatic_action_subjects_09_support_regime_benign"
	
	possible = {	
		scope:target_country = {
			government_legitimacy < 75 # no point in supporting a regime that's already quite legitimate
			NOT = { is_diplomatic_play_enemy_of = root }
		}
	}
	
	accept_effect = {
		add_overlord_lobby_appeasement_from_diplomacy = { 
			FIRST = scope:target_country
			SECOND = root
			PRO_AMOUNT = 4
			ANTI_AMOUNT = -4
			FACTOR = appeasement_support_regime_started
		}
	}
	
	pact = {	
		cost = 50
		recipient_pays_maintenance = no
		forced_duration = 12
				
		first_modifier = {
			country_legitimacy_base_add = -10
		}
		
		second_modifier = {
			country_legitimacy_base_add = 20
			political_movement_radicalism_mult = -0.1
			country_liberty_desire_add = -0.1
		}
		
		actor_can_break = {
			always = yes
		}
	
		manual_break_effect = {
			scope:target_country = {
				add_liberty_desire = 10
			}
			
			add_overlord_lobby_appeasement_from_diplomacy = { 
				FIRST = scope:target_country
				SECOND = root
				PRO_AMOUNT = -4
				ANTI_AMOUNT = 4
				FACTOR = appeasement_support_regime_ended
			}				
		}
	}
	
	ai = {
		max_influence_spending_fraction = 0.1
		
		evaluation_chance = {
			value = 0.25
		}

		propose_score = {
			value = 1 # Low propose score, AI should replace this with other pacts if needed
			
			add = {
				value = scope:target_country.country_rank
				multiply = 1
			}
		}
	
		will_propose = {
			government_legitimacy > 90
			"ai_ideological_opinion(scope:target_country)" >= 25
			has_attitude = {
				who = scope:target_country
				attitude = protective
			}	
			OR = {
				scope:target_country = { liberty_desire >= 25 }
				NOT = {
					any_subject_or_below = {
						root = {
							has_diplomatic_pact = {
								type = da_support_regime
								who = prev
							}
						}
					}
				}
			}
		}

		will_break = {
			OR = {
				government_legitimacy < 50
				"ai_ideological_opinion(scope:target_country)" <= -25
				has_attitude = {
					who = scope:target_country
					attitude = domineering
				}					
			}
		}
		
		accept_score = {
			value = 0
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" <= -25
				}
				add = {
					add = -1000
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
				}
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 3
					max = 100
				}
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 2
					min = -100
				}
			}							
							
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = protective
						}	
					}
					value = 75
				}				
				else_if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = domineering
						}	
					}
					value = -50
				}							
			}
			
			if = {
				limit = {
					scope:actor = { is_subject_of = root }
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_LIBERTY_DESIRE"
					value = "scope:actor.liberty_desire"
					subtract = 50
				}
			}
			
			if = {
				limit = {
					legitimacy < 60
				}
				
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_LEGITIMACY"
					value = -1000
				}				
			}	
			else = {
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_LEGITIMACY"
					value = legitimacy
					subtract = 70
					multiply = 2
				}	
			}			
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"		
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 100
				}	
				else_if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
					}
					value = 50
				}					
				else_if = {
					limit = {
						"relations(scope:actor)" >=  relations_threshold:cordial
					}
					value = 25
				}
				else_if = {
					limit = {
						"relations(scope:actor)" > relations_threshold:poor
					}
					value = -25
				}					
				else = {
					value = -50
				}				
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}	
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}					
			}					
		}
	}
}

da_request_support_regime = {
	groups= {
		subject
	}
	requires_approval = yes
	should_notify_third_parties = yes
	show_effect_in_tooltip = yes
	uses_random_approval = yes
	
	texture = "gfx/interface/icons/diplomatic_action_icons/support_regime.dds"
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/diplomatic_action_subjects_09_support_regime_benign"
	
	possible = {
		NOT = { is_diplomatic_play_enemy_of = scope:target_country }
		custom_tooltip = {
			text = "SUPPORT_REGIME_ON_COOLDOWN"
			NOT = {
				scope:target_country = {
					any_diplomatic_catalyst = {
						is_diplomatic_catalyst_type = catalyst_support_regime_requested
						target = root
					}					
				}
			}
		}	
	}
	
	accept_effect = {
		add_overlord_lobby_appeasement_from_diplomacy = { 
			FIRST = root
			SECOND = scope:target_country
			PRO_AMOUNT = 4
			ANTI_AMOUNT = -4
			FACTOR = appeasement_support_regime_started
		}
	}
	
	decline_effect = {
		scope:target_country = { change_relations = { country = root value = -20 } }
		if = {
			limit = {
				is_subject_of = scope:target_country
			}
			add_liberty_desire = 10
		}
		hidden_effect = {
			scope:target_country = {
				create_diplomatic_catalyst = {
					type = catalyst_support_regime_requested
					target = root
				}		
			}
		}			
	}
	
	reverse_pact = da_support_regime
	
	ai = {
		evaluation_chance = {
			value = 0.25
		}

		propose_score = {
			value = 10
		}
	
		will_propose = {
			government_legitimacy < 50
			liberty_desire_weekly_progress > -0.2
		}

		will_break = {
			OR = {
				government_legitimacy < 50
				"ai_ideological_opinion(scope:target_country)" <= -25
				has_attitude = {
					who = scope:target_country
					attitude = domineering
				}
			}
		}
		
		will_propose_even_if_not_accepted = {
			"scope:actor.ai_ideological_opinion(root)" > -25
		}
	}
}

﻿da_knowledge_sharing = {
	groups= {
		power_bloc_leader
		overlord
	}
	requires_approval = no
	should_notify_third_parties = yes
	show_effect_in_tooltip = yes
	
	texture = "gfx/interface/icons/diplomatic_action_icons/knowledge_sharing.dds"
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/diplomatic_action_subjects_10_knowledge_sharing_benign"
	selectable = {
		has_dlc_feature = subject_and_bloc_actions
	}

	possible = {	
		scope:target_country = {
			NOT = { is_diplomatic_play_enemy_of = root }
		}
	}
	
	accept_effect = {
		add_overlord_lobby_appeasement_from_diplomacy = { 
			FIRST = scope:target_country
			SECOND = root
			PRO_AMOUNT = 2
			ANTI_AMOUNT = -2
			FACTOR = appeasement_knowledge_sharing_started
		}

		if = {
			limit = {
				scope:target_country = {
					is_subject_of = root
				}
			}
			custom_tooltip = {
				text = "DIPLOMATIC_PACT_REDUCED_LIBERTY_DESIRE"
			}
		}
	}	
	
	pact = {	
		cost = 50
		recipient_pays_maintenance = no
		forced_duration = 12
		
		first_modifier = {
			country_tech_spread_mult = -0.10
		}
		
		second_modifier = {
			country_tech_spread_mult = 0.25
		}
		
		actor_can_break = {
			always = yes
		}
			
		requirement_to_maintain = {
			trigger = {
				scope:target_country = {
					OR = {
						is_subject_of = root
						power_bloc.power_bloc_leader ?= root
					}
				}
			}
		}
		
		requirement_to_maintain = {
			trigger = {		
				custom_tooltip = {
					text = "DIPLOMATIC_PACT_REQUIREMENT_MORE_TECHS_RESEARCHED"
					techs_researched > scope:target_country.techs_researched
				}	
			}
		}
		
		manual_break_effect = {
			scope:target_country = {
				if = {
					limit = { is_subject_of = root }
					add_liberty_desire = 10
				}
			}
			
			add_overlord_lobby_appeasement_from_diplomacy = { 
				FIRST = scope:target_country
				SECOND = root
				PRO_AMOUNT = -2
				ANTI_AMOUNT = 2
				FACTOR = appeasement_knowledge_sharing_ended
			}				
		}
	}
	
	ai = {
		max_influence_spending_fraction = 0.1
		
		evaluation_chance = {
			value = 0.25		
		}		
		
		propose_score = {
			value = 1 # Low propose score, AI should replace this with other pacts if needed
			
			add = {
				value = scope:target_country.country_rank
				multiply = 1
			}
		}

		will_propose = {
			modifier:country_tech_spread_mult > -0.25 # don't compromise tech spread more than -25%
			has_attitude = {
				who = scope:target_country
				attitude = protective
			}	
			NOT = { is_country_type = unrecognized }
			OR = {
				scope:target_country = { liberty_desire >= 25 }
				NOT = {
					any_subject_or_below = {
						root = {
							has_diplomatic_pact = {
								type = da_knowledge_sharing
								who = prev
							}
						}
					}
				}
			}						
		}
		
		will_break = {
			OR = {
				has_attitude = {
					who = scope:target_country
					attitude = domineering
				}	
				is_country_type = unrecognized
				modifier:country_tech_spread_mult <= -0.5
			}
		}
		
		accept_score = {
			value = 0
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_TECH_SPREAD_VALUE"
				value = modifier:country_tech_spread_mult
				add = 0.25
				multiply = 200
			}

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					max = 25
				}
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					min = -25
				}
			}						
							
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = protective
						}	
					}
					value = 50
				}				
				else_if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = domineering
						}	
					}
					value = -50
				}							
			}
			
			if = {
				limit = {
					scope:actor = { is_subject_of = root }
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_LIBERTY_DESIRE"
					value = "scope:actor.liberty_desire"
					subtract = 50
				}
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"		
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 100
				}	
				else_if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
					}
					value = 50
				}					
				else_if = {
					limit = {
						"relations(scope:actor)" >=  relations_threshold:cordial
					}
					value = 25
				}
				else_if = {
					limit = {
						"relations(scope:actor)" > relations_threshold:poor
					}
					value = -50
				}					
				else = {
					value = -75
				}				
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}	
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}					
			}
		}
	}
}

da_request_knowledge_sharing = {
	groups= {
		subject
	}
	requires_approval = yes
	should_notify_third_parties = yes
	show_effect_in_tooltip = yes
	uses_random_approval = yes
	
	texture = "gfx/interface/icons/diplomatic_action_icons/knowledge_sharing.dds"
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/diplomatic_action_subjects_10_knowledge_sharing_benign"
	
	possible = {
		NOT = { is_diplomatic_play_enemy_of = scope:target_country }
		custom_tooltip = {
			text = "KNOWLEDGE_SHARING_ON_COOLDOWN"
			NOT = {
				scope:target_country = {
					any_diplomatic_catalyst = {
						is_diplomatic_catalyst_type = catalyst_knowledge_sharing_requested
						target = root
					}
				}
			}
		}	
	}
	
	accept_effect = {
		add_overlord_lobby_appeasement_from_diplomacy = { 
			FIRST = root
			SECOND = scope:target_country
			PRO_AMOUNT = 2
			ANTI_AMOUNT = -2
			FACTOR = appeasement_knowledge_sharing_started
		}

		if = {
			limit = {
				scope:target_country = {
					is_subject_of = root
				}
			}
			custom_tooltip = {
				text = "DIPLOMATIC_PACT_REDUCED_LIBERTY_DESIRE"
			}
		}
	}
	
	decline_effect = {
		scope:target_country = { change_relations = { country = root value = -20 } }
		if = {
			limit = {
				is_subject_of = scope:target_country
			}
			add_liberty_desire = 10
		}
		hidden_effect = {
			scope:target_country = {
				create_diplomatic_catalyst = {
					type = catalyst_knowledge_sharing_requested
					target = root
				}		
			}
		}			
	}
	
	reverse_pact = da_knowledge_sharing
	
	ai = {
		evaluation_chance = {
			value = 0.25
		}

		propose_score = {
			value = {
				add = scope:target_country.techs_researched
				subtract = techs_researched
			}
		}
	
		will_propose = {
			techs_researched < scope:target_country.techs_researched
		}

		will_break = {
			OR = {
				government_legitimacy < 50
				"ai_ideological_opinion(scope:target_country)" <= -25
				has_attitude = {
					who = scope:target_country
					attitude = domineering
				}
			}
		}
		
		will_propose_even_if_not_accepted = {
			techs_researched < {
				add = scope:target_country.techs_researched
				multiply = 0.2
			}
		}
	}
}

﻿da_evangelize = {
	groups = {
		overlord
	}
	requires_approval = no
	should_notify_third_parties = yes
	show_effect_in_tooltip = yes
	
	texture = "gfx/interface/icons/diplomatic_action_icons/evangelize.dds"
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/diplomatic_action_subjects_11_evangelize_benign"
	selectable = {
		has_dlc_feature = subject_and_bloc_actions
	}
	
	potential = {	
		NOT = { country_has_state_religion = rel:atheist }
		scope:target_country = {
			country_has_state_religion = root.religion # Only show if the subject is a coreligionist
			NOT = { is_diplomatic_play_enemy_of = root }
		}
	}
	
	possible = {
		has_law = law_type:law_state_religion
	}

	accept_effect = {
		scope:target_country = {
			if = {
				limit = {
					OR = {
						has_law = law_type:law_state_religion
						ig:ig_devout = {
							is_in_government = yes
						}
						any_interest_group = {
							is_in_government = yes
							leader = {
								OR = {
									has_ideology = ideology:ideology_traditionalist
									has_ideology = ideology:ideology_theocrat
								}			
							}
						}
					}
				}
				custom_tooltip = {
					text = "da_evangelize_liberty_desire_decrease_custom_tooltip"
					add_liberty_desire = -10
				}
			}
			else = {
				custom_tooltip = {
					text = "da_evangelize_liberty_desire_increase_custom_tooltip"
					add_liberty_desire = 10
				}
			}
		}
	}
	
	pact = {	
		cost = 25
		recipient_pays_maintenance = no
		forced_duration = 12
				
		second_modifier = {
			state_conversion_mult = 0.5
		}
		
		actor_can_break = {
			always = yes
		}
		
		manual_break_effect = {
			scope:target_country = {		
				if = {
					limit = {
						OR = {
							has_law = law_type:law_state_religion
							ig:ig_devout = {
								is_in_government = yes
							}
							any_interest_group = {
								is_in_government = yes
								leader = {
									OR = {
										has_ideology = ideology:ideology_traditionalist
										has_ideology = ideology:ideology_theocrat
									}			
								}
							}
						}			
					}
					add_liberty_desire = 10 # The Devout don't like evangelization being called off
				}
				else = {
					add_liberty_desire = -10
				}
			}
		}		
	}		
	
	ai = {
		max_influence_spending_fraction = 0.05
		
		evaluation_chance = {
			value = 0.25		
		}		
	
		propose_score = {
			value = 10
		}
	
		will_propose = {
			has_attitude = {
				who = scope:target_country
				attitude = protective
			}	
			OR = {
				ig:ig_devout = {
					is_in_government = yes
				}
				any_interest_group = {
					is_in_government = yes
					leader = {
						OR = {
							has_ideology = ideology:ideology_traditionalist
							has_ideology = ideology:ideology_theocrat
						}			
					}
				}
			}
		}
		
		will_break = {
			OR = {
				has_attitude = {
					who = scope:target_country
					attitude = domineering
				}	
				NOR = {
					ig:ig_devout = {
						is_in_government = yes
					}
					any_interest_group = {
						is_in_government = yes
						leader = {
							OR = {
								has_ideology = ideology:ideology_traditionalist
								has_ideology = ideology:ideology_theocrat
							}			
						}
					}
				}
			}	
		}	
	}
}

﻿request_market_control = {
	requires_approval = yes
	can_use_obligations = yes
	uses_random_approval = yes
	groups= {
		subject
		power_bloc_member
	}
	
	texture = "gfx/interface/icons/diplomatic_action_icons/request_market_control.dds"
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/diplomatic_action_subjects_12_request_market_control_benign"
	
	potential = {
		scope:target_country = {
		   market = root.market # same market as the requester
		}
	}
	
	possible = {
		OR = {
			AND = { # the target controls the market and the requester is independent
				scope:target_country = {
					market.owner = this
				}
				is_subject = no
			}
			AND = {
				is_direct_subject_of = scope:target_country # or the country is a direct subject of target country being asked
				liberty_desire >= 25
			}
		}
		custom_tooltip = {
			text = "REQUEST_MARKET_ON_COOLDOWN"
			NOT = {
				scope:target_country = {
					any_diplomatic_catalyst = {
						is_diplomatic_catalyst_type = catalyst_market_control_requested
						target = root
					}
				}
			}
		}
	}
	
	accept_effect = {
		scope:target_country = { change_relations = { country = root value = 10 } }
		if = {
			limit = {
				is_subject_of = scope:target_country
			}
			add_liberty_desire = -30
		}
		hidden_effect = {
			scope:target_country = {
				create_diplomatic_catalyst = {
					type = catalyst_market_control_requested
					target = root
				}
			}
		}
	}
	
	decline_effect = {
		scope:target_country = { change_relations = { country = root value = -20 } }
		if = {
			limit = { 
				is_subject_of = scope:target_country
			}
			add_liberty_desire = 10		
		}
		hidden_effect = {
			scope:target_country = {
				create_diplomatic_catalyst = {
					type = catalyst_market_control_requested
					target = root
				}		
			}
		}			
	}
	
	pact = {
		cost = 0
		forced_duration = 12
		
		market_owner = first_country
		
		requirement_to_maintain = {
			trigger = {
				OR = {
					is_subject_of = scope:target_country
					power_bloc.power_bloc_leader ?= scope:target_country
				}
			}
		}
		
		actor_can_break = {
			always = yes
		}

		manual_break_effect = {
			change_relations = { country = scope:target_country value = -10 }
		}
		auto_break_effect = {
			change_relations = { country = scope:target_country value = -10 }
		}
	}
	
	ai = {
		evaluation_chance = {
			value = 0.25
		}
	
		accept_score = {
			value = 0
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}		

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					max = 25
				}					
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					min = -25
				}					
			}						
							
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = protective
						}	
					}
					value = 50
				}				
				else_if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = domineering
						}	
					}
					value = -50
				}							
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_ECONOMIC_DEPENDENCE"
				value = 1
				subtract = "scope:actor.economic_dependence(root)"	
				multiply = 50
			}

			if = {
				limit = {
					scope:actor = { is_subject_of = root }
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_LIBERTY_DESIRE"
					value = "scope:actor.liberty_desire"
					subtract = 25
					multiply = 0.5
				}				
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_CAPITAL_MARKET_ACCESS"
				value = 1
				subtract = scope:actor.capital.market_access
				multiply = 50
			}	
				
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"		
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}	
				else_if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
					}
					value = 25
				}					
				else_if = {
					limit = {
						"relations(scope:actor)" >=  relations_threshold:cordial
					}
					value = 10
				}
				else_if = {
					limit = {
						"relations(scope:actor)" > relations_threshold:poor
					}
					value = -25
				}					
				else = {
					value = -50
				}				
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}	
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}					
			}					
		}
	
		propose_score = { 
			value = 10
		}
	
		will_propose = {
			root = {			
				OR = {
					capital.market_access <= 0.5
					AND = {
						liberty_desire >= 50
						"economic_dependence(scope:target_country)" <= 0.25
					}
					AND = {
						liberty_desire >= 75
						"economic_dependence(scope:target_country)" <= 0.50
					}					
				}				
			}		
		}
		
		will_propose_even_if_not_accepted = {
			always = yes
		}			
	}
}


﻿grant_state = {
	groups= {
		overlord
	}
	
	texture = "gfx/interface/icons/diplomatic_action_icons/grant_state.dds"
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/diplomatic_action_subjects_13_handle_states"
	
	requires_approval = no
	should_notify_third_parties = yes
	show_effect_in_tooltip = yes
	state_selection = first_required
    first_state_list = first_country_and_subjects
	can_use_obligations = no

	possible = {
		is_diplomatic_play_committed_participant = no
		scope:target_country = { is_diplomatic_play_committed_participant = no }
		is_revolutionary = no
	}
	
	first_state_trigger = {
		OR = {
			AND = {
				owner = scope:country
				NOR = { # cannot give away primary homelands unless they're unincorporated
					is_incorporated = yes
					is_homeland_of_country_cultures = scope:country
				}
			}
			scope:country = { 
				any_subject_or_below = { # can give away states owned by other subjects
					root.owner = this
					NOT = { root.owner = scope:target_country }
					OR = {
						is_subject_type = subject_type_puppet
						is_subject_type = subject_type_vassal
					}								
				}
			}
		}
		is_capital = no
		is_under_colonization = no
		OR = {
			scope:target_country = { is_adjacent_to_state = root } # can always give away states that are adjacent to the subject
			AND = {
				is_homeland_of_country_cultures = scope:target_country
				has_port = yes
				scope:target_country = { has_port = yes }
			}
		}
	}
	
	accept_effect = {
		if = {
			limit = { exists = scope:first_state }
			
			# Giving a state from one subject to another
			if = {
				limit = { scope:first_state = { NOT = { owner = root } } }	
				scope:first_state.owner = { save_temporary_scope_as = subject_taken_from }
				scope:subject_taken_from = {
					add_liberty_desire = {
						value = "scope:first_state.ai_state_value(scope:subject_taken_from)"
						divide = 5
						max = 100
						min = 20
					}				
				}
			}		
			
			scope:target_country = {
				add_liberty_desire = {
					value = 0
					subtract = "scope:first_state.ai_state_value(scope:target_country)"
					divide = 5
					max = -5
					min = -50
				}				
			}		
			scope:first_state = { set_state_owner = scope:target_country }		
		}
	}
	
	ai = {
		evaluation_chance = {
			value = 0.0

			if = {
				limit = {
					any_subject_or_below = {
						NOR = {
							is_subject_type = subject_type_protectorate
							is_subject_type = subject_type_tributary
						}
					}					
				}
				add = 0.25			
			}	
			
			if = {
				limit = {
					any_subject_or_below = {
						OR = {
							c:BIC ?= this
							c:DEI ?= this
							is_african_subject = yes
						}
					}					
				}
				add = 0.5
			}
		}	
	
		will_select_as_first_state = {
			is_incorporated = no
			NOT = { is_homeland_of_country_cultures = owner }
			trigger_if = {
				limit = {
					c:GBR ?= owner
					owner = { # Whilst the crown colony system remains in place, the AI won't be inclined to change this
						has_law = law_type:law_monarchy
					}
				}
				NOR = {
					state_region = s:STATE_CEYLON
					state_region = s:STATE_NEWFOUNDLAND
				}
			}
			trigger_if = {
				limit = {
					c:CHI ?= owner
					owner = { # China won't decentralise for as long as the game-start state of affairs remains in place
						has_law = law_type:law_monarchy
					}
				}
				NOR = {
					state_region = s:STATE_TIANSHAN
					state_region = s:STATE_DZUNGARIA
					region = sr:region_north_china
					region = sr:region_south_china
				}
			}
		}
		
		will_propose_with_states = {
			exists = scope:first_state

			has_attitude = {
				who = scope:target_country
				attitude = protective
			}
			
			# AI doesn't give away states adjacent to their incorporated states
			scope:first_state = {
				NOT = {
					any_neighbouring_state = {
						owner = root
						is_incorporated = yes
					}
				}			
			}			
	
			# AI doesn't give away states to subjects that are unrecognized when they are recognized
			# They also don't want to give states to very autonomous subjects since they don't get much from it
			# The exception to these rules is when the state is totally disconnected from the rest of their empire
			OR = {
				AND = {
					scope:target_country = {				
						NOR = {
							is_subject_type = subject_type_protectorate
							is_subject_type = subject_type_tributary
						}
					}
					NAND = {
						NOT = { is_country_type = unrecognized }
						scope:target_country = { is_country_type = unrecognized } 						
					}		
				}
				scope:first_state = { 
					has_port = no
					NOT = {
						any_neighbouring_state = {
							owner = root
						}					
					}
					any_neighbouring_state = {
						owner = scope:target_country
					}					
				}			
			}

			# China shouldn't give all of its West to Tibet
			NOT = {
				OR = {
					country_has_primary_culture = cu:han
					country_has_primary_culture = cu:manchu
				}
				scope:target_country = {
					country_has_primary_culture = cu:tibetan
				}
				scope:first_state = {
					NOT = { is_homeland_of_country_cultures = scope:target_country }
				}
			}
		}	
	
		propose_score = {
			value = 10

			if = { # Consolidation of colonial tags
				limit = {
					scope:target_country = {
						OR = {
							AND = {
								c:BIC ?= this
								scope:first_state = {
									OR = {
										region = sr:region_north_india
										region = sr:region_south_india
										region = sr:region_himalayas
									}
									NOT = {
										state_region = s:STATE_CEYLON
									}
								}
							}
							AND = {
								c:DEI ?= this
								scope:first_state = {
									region = sr:region_indonesia
								}
							}
							is_african_subject = yes
						}
					}
				}
				add = 50
			}
			
			# Prefer ceding land to same culture subjects
			if = {
				limit = { 
					scope:target_country = { 
						any_primary_culture = { is_primary_culture_of = root }
					} 
				}
				multiply = 5.0
			}			
			
			# Avoid ceding land to unrecognized if there's alternatives
			if = {
				limit = { 
					NOT = { is_country_type = unrecognized }
					scope:target_country = { is_country_type = unrecognized } 					
				}
				multiply = 0.1
			}
		}
	}
}

take_state = {
	groups= {
		overlord
	}
	
	texture = "gfx/interface/icons/diplomatic_action_icons/take_state.dds"
	
	requires_approval = no
	should_notify_third_parties = yes
	show_effect_in_tooltip = yes
	state_selection = second_required
	second_state_list = second_country
	can_use_obligations = no

	possible = {
		scope:target_country = { 
			OR = {
				is_subject_type = subject_type_puppet
				is_subject_type = subject_type_vassal
				is_subject_type = subject_type_dominion
			}
			is_diplomatic_play_committed_participant = no 
			is_revolutionary = no
			liberty_desire < 25
		}
	}
	
	second_state_trigger = {
		owner = scope:target_country
		is_capital = no
		is_under_colonization = no
		
		# Not allowed to take incorporated states from dominions
		trigger_if = {
			limit = { scope:target_country = { is_subject_type = subject_type_dominion } }
			is_incorporated = no
		}
	}
	
	accept_effect = {
		if = {
			limit = { exists = scope:second_state }	
			scope:target_country = {
				add_liberty_desire = {
					value = "scope:second_state.ai_state_value(scope:target_country)"
					divide = 5
					max = 100
					min = 20
				}				
			}
			create_incident = {
				country = scope:target_country
				value = {
					value = "scope:second_state.ai_state_value(scope:target_country)"
					divide = 10
					max = 50
					min = 10						
				}
			}					
			scope:second_state = { set_state_owner = root }		
		}
	}
	
	ai = {
		evaluation_chance = {
			value = 0.0

			if = {
				limit = {
					any_subject_or_below = {
						OR = {
							is_subject_type = subject_type_puppet
							is_subject_type = subject_type_vassal
							is_subject_type = subject_type_dominion
						}
					}					
				}
				add = 0.1
			}				
		}		
	
		will_select_as_second_state = {
			is_incorporated = no		
		}	
		
		will_propose_with_states = {
			exists = scope:second_state
			
			# The AI only uses take state on disconnected colonial bits of subjects which are adjacent to their own lands
			NOT = {
				any_neighbouring_state = {
					owner = root.owner
					is_incorporated = yes
				}
			}			
			
			scope:second_state = {
				any_neighbouring_state = {
					owner = root
				}
			}

			# This may seem odd, but is intentional
			# If the overlord is domineering they should be focusing on reducing autonomy and annexing the subject instead of just taking disconnected colonial bits
			has_attitude = {
				who = scope:target_country
				attitude = protective
			}		
		}	
	
		propose_score = {
			value = 10
		}
	}
}

demand_state = {
	groups= {
		subject
	}
	
	texture = "gfx/interface/icons/diplomatic_action_icons/take_state.dds"
	confirmation_sound = "event:/SFX/UI/MapInteraction/SubjectInteractions/diplomatic_action_subjects_13_handle_states"
	
	requires_approval = yes
	should_notify_third_parties = yes
	show_effect_in_tooltip = yes
	state_selection = second_required
    second_state_list = second_country_and_subjects
	can_use_obligations = yes

	possible = {
		is_diplomatic_play_committed_participant = no
		scope:target_country = { is_diplomatic_play_committed_participant = no }
		is_revolutionary = no
	}
	
	second_state_trigger = {
		OR = {
			scope:country = { is_adjacent_to_state = root } # must either be adjacent to the initiating country, or
			AND = {											# be a Homeland of its culture, with a port available for market connection
				is_homeland_of_country_cultures = scope:country
				has_port = yes
				scope:country = { has_port = yes }
			}
		}
		OR = {
			AND = { 										# if owned by the target of the action, it must not be incorporated
				owner = scope:target_country
				is_incorporated = no
			}
			scope:target_country = { 						# if owned by one of the target's subjects, that subject must either be a Puppet or a Vassal
				any_subject_or_below = {
					root.owner = this
					NOT = { root.owner = scope:country }
					OR = {
						is_subject_type = subject_type_puppet
						is_subject_type = subject_type_vassal
					}
				}
			}
		}
		NOT = { is_homeland_of_country_cultures = owner }
		is_capital = no
		is_under_colonization = no
	}
	
	accept_effect = {
		if = {
			limit = { exists = scope:second_state }
			
			# Giving a state from one subject to another
			if = {
				limit = { scope:second_state = { NOT = { owner = scope:target_country } } }	
				scope:second_state.owner = { save_temporary_scope_as = subject_taken_from }
				scope:subject_taken_from = {
					add_liberty_desire = {
						value = "scope:second_state.ai_state_value(scope:subject_taken_from)"
						divide = 5
						max = 100
						min = 20
					}
				}
			}
			
			add_liberty_desire = {
				value = 0
				subtract = "scope:second_state.ai_state_value(root)"
				divide = 5
				max = -5
				min = -50
			}	
			scope:second_state = { set_state_owner = root }		
		}
	}
	
	ai = {
		evaluation_chance = {
			value = {
				add = liberty_desire
				subtract = 75
				divide = 100
			}

			if = {
				limit = {
					is_subject_type = subject_type_dominion
				}
				add = 0.1
			}
			
			if = {
				limit = {
					OR = {
						c:BIC ?= this
						c:DEI ?= this
						is_african_subject = yes
					}
				}
				add = 0.2
			}
		}
		
		will_propose_with_states = {
			exists = scope:second_state
			trigger_if = {
				limit = { is_african_subject = yes }
				scope:second_state = {
					OR = {
						is_incorporated = no
						owner = {
							is_african_subject = yes
						}
					}
				}
			}
		}	
	
		accept_score = {
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}
			
			if = {
				limit = { exists = scope:second_state }
				subtract = {
					value = "scope:second_state.ai_state_value(scope:second_state.owner)"
					desc = "DIPLOMATIC_ACCEPTANCE_TRADE_STATE_SECOND_STATE"
					
					if = {
						limit = {
							scope:second_state = { owner = root }					
						}
						multiply = 2
					}						
					
					min = 10				
				}
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = protective
						}	
					}
					value = 50
				}				
				else_if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = domineering
						}	
					}
					value = -50
				}							
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ACTOR_LIBERTY_DESIRE"
				value = "scope:actor.liberty_desire"
				subtract = 50
				multiply = 3
				min = -50
				max = 50
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"		
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}	
				else_if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
					}
					value = 25
				}					
				else_if = {
					limit = {
						"relations(scope:actor)" >=  relations_threshold:cordial
					}
					value = 10
				}
				else_if = {
					limit = {
						"relations(scope:actor)" > relations_threshold:poor
					}
					value = -25
				}					
				else = {
					value = -50
				}				
			}
		}
		
		use_obligation_chance = {
			value = 10
		}
		
		owe_obligation_chance = {
			value = 10	
		}
	}
}
